<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>Wt documentation.</title>
    <filename>index</filename>
  </compound>
  <compound kind="page">
    <name>overview</name>
    <title>Library overview</title>
    <filename>overview</filename>
    <docanchor file="overview">error_sec</docanchor>
    <docanchor file="overview">config_session</docanchor>
    <docanchor file="overview">containers</docanchor>
    <docanchor file="overview">sec_painting</docanchor>
    <docanchor file="overview">urls_sec</docanchor>
    <docanchor file="overview">config_wthttpd</docanchor>
    <docanchor file="overview">contents</docanchor>
    <docanchor file="overview">wthttpd</docanchor>
    <docanchor file="overview">eventhandling</docanchor>
    <docanchor file="overview">config_general</docanchor>
    <docanchor file="overview">internationalization_sec</docanchor>
    <docanchor file="overview">signal_slot</docanchor>
    <docanchor file="overview">wwidget_sec</docanchor>
    <docanchor file="overview">config_fastcgi</docanchor>
    <docanchor file="overview">deployment</docanchor>
    <docanchor file="overview">config_isapi</docanchor>
    <docanchor file="overview">wtisapi</docanchor>
    <docanchor file="overview">fastcgi</docanchor>
    <docanchor file="overview">application_sec</docanchor>
    <docanchor file="overview">style</docanchor>
    <docanchor file="overview">default_bootstrap</docanchor>
    <docanchor file="overview">layout</docanchor>
    <docanchor file="overview">bootstrap</docanchor>
    <docanchor file="overview">configuration_sec</docanchor>
    <docanchor file="overview">progressive_bootstrap</docanchor>
  </compound>
  <compound kind="page">
    <name>example</name>
    <title>Treelist example</title>
    <filename>example</filename>
    <docanchor file="example">treenode_sec</docanchor>
    <docanchor file="example">stateicon_sec</docanchor>
  </compound>
  <compound kind="page">
    <name>InstallationUnix</name>
    <title>Installation: Unix-like platforms</title>
    <filename>InstallationUnix</filename>
  </compound>
  <compound kind="page">
    <name>InstallationWindows</name>
    <title>Installation: Windows</title>
    <filename>InstallationWindows</filename>
  </compound>
  <compound kind="page">
    <name>Releasenotes</name>
    <title>Release notes</title>
    <filename>Releasenotes</filename>
  </compound>
  <compound kind="group">
    <name>charts</name>
    <title>Charts</title>
    <filename>group__charts.html</filename>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WChart2DRenderer</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <member kind="enumeration">
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gaddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa2a592919e6cbd94bf09e1259559499b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa2e1017fdef77b4663715c3d7663a4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y1Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa4905c14eb8a164e00e48b41cfaf6f070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y2Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fadbfcf55c246aa3a385974a185f4220e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrdinateAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fae8797459bbc3e1eaba438ab4d10c0352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga77eb6d0cefa4a012950ea972b471b849</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849ada8601e8f3630aec7d16b6d4177d4986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849af9110e09430355ab81d579be51ac73cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849af2e58ce3483a5ec496f65fb808ce72b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gadfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6aa9b1356757a7b0935c3302c32798ef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6ad1c254fd10596e2565b32fd6f5967094</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6afba90921c9efb6c5131cdb1590bfa406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6aaa627030efa552170a889d7a80a65a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateTimeScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6a97f80bcc82b9bf9299b61de12732da5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a6a8b53e7bfdec77f9df5e82aaf0061e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a2582c20d00d806d8a175e2f5c0207591</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CurveSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a805880e23c0292fb7a66b2cda2a2f5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BarSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a6751dbd7ed4600a4befa967107a6dde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6aaab531f4ceaaa1893f854f4b1262636d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a4250deb876978d5f5c3be4cc6aad8267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CircleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6ac14cc4eaec28c9ab096fbf7efead2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a003214a00943a828becc1beb54956e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XCrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a4a718fdd73e4bcdc700495eb549dc386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TriangleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6ae7ee432c7bf8189deaa453af4d14182b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0ad0c1c31f7f41394c2fd5444edc340972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0a1eb3ca7c63430bd56544b9e3b962c6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0aa321337f9f9a4d56fb1d2cafe0f359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0a50b16db97a187f9acccdbeecf8732ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryChart</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga8d63464f873580c77508e1c0c26cbfeaaebfd9bd11d1126f2db7ff891c04c29f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScatterPlot</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga8d63464f873580c77508e1c0c26cbfeaa6ddab43d32242eb28831938a1e469a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LabelOption</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9345394a8eeda6800d8a24c5df44d983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoLabels</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a866d745e727785c20e31d5ea76bb58a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983aeb92488c13b0ccc46cddbb3445007443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a88861128e109b6a63e76a311dc57e408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextLabel</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a60df9add81425373c20fafe8c4e40b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextPercentage</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a307741727c5ef5e33efcd347a0853e50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>dbo</name>
    <title>Database Objects (Dbo)</title>
    <filename>group__dbo.html</filename>
    <class kind="struct">Wt::Dbo::ptr_tuple</class>
    <class kind="class">Wt::Dbo::SqlStatement</class>
    <class kind="class">Wt::Dbo::backend::Postgres</class>
    <class kind="class">Wt::Dbo::backend::Sqlite3</class>
    <class kind="class">Wt::Dbo::collection</class>
    <class kind="class">Wt::Dbo::Exception</class>
    <class kind="class">Wt::Dbo::StaleObjectException</class>
    <class kind="class">Wt::Dbo::ObjectNotFoundException</class>
    <class kind="class">Wt::Dbo::NoUniqueResultException</class>
    <class kind="class">Wt::Dbo::FixedSqlConnectionPool</class>
    <class kind="class">Wt::Dbo::dbo_default_traits</class>
    <class kind="class">Wt::Dbo::dbo_traits</class>
    <class kind="class">Wt::Dbo::Dbo</class>
    <class kind="class">Wt::Dbo::ptr</class>
    <class kind="class">Wt::Dbo::Query</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::Dbo::Session</class>
    <class kind="class">Wt::Dbo::SqlConnection</class>
    <class kind="class">Wt::Dbo::SqlConnectionPool</class>
    <class kind="class">Wt::Dbo::sql_value_traits</class>
    <class kind="class">Wt::Dbo::FieldInfo</class>
    <class kind="class">Wt::Dbo::query_result_traits</class>
    <class kind="class">Wt::Dbo::Transaction</class>
    <member kind="enumeration">
      <name>RelationType</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1d0ec6819b1bf5b7a88ad030b91ca564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564a32d7393c325724244671b18be53058fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564ad0bd477ec215a878e0758cce8494af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gac98c1f90b00ed9ce243c6412da3ac489</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name=&quot;id&quot;, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>field</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga8a2b653ff57f1459dfa2e556badd71d6</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf1a3f4231d2064b86eb3903003527ddd</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1a086b583fb150dbd4c5b4ba92bc177f</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;joinName, const std::string &amp;joinId=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ext</name>
    <title>Ext widgets</title>
    <filename>group__ext.html</filename>
    <class kind="class">Wt::Ext::AbstractButton</class>
    <class kind="class">Wt::Ext::AbstractToggleButton</class>
    <class kind="class">Wt::Ext::Button</class>
    <class kind="class">Wt::Ext::Calendar</class>
    <class kind="class">Wt::Ext::CheckBox</class>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::Ext::Component</class>
    <class kind="class">Wt::Ext::DataStore</class>
    <class kind="class">Wt::Ext::DateField</class>
    <class kind="class">Wt::Ext::Dialog</class>
    <class kind="class">Wt::Ext::FormField</class>
    <class kind="class">Wt::Ext::LineEdit</class>
    <class kind="class">Wt::Ext::Menu</class>
    <class kind="class">Wt::Ext::MenuItem</class>
    <class kind="class">Wt::Ext::MessageBox</class>
    <class kind="class">Wt::Ext::NumberField</class>
    <class kind="class">Wt::Ext::PagingToolBar</class>
    <class kind="class">Wt::Ext::Panel</class>
    <class kind="class">Wt::Ext::ProgressDialog</class>
    <class kind="class">Wt::Ext::RadioButton</class>
    <class kind="class">Wt::Ext::Splitter</class>
    <class kind="class">Wt::Ext::SplitterHandle</class>
    <class kind="class">Wt::Ext::TableView</class>
    <class kind="class">Wt::Ext::TabWidget</class>
    <class kind="class">Wt::Ext::TextEdit</class>
    <class kind="class">Wt::Ext::ToolBar</class>
    <class kind="class">Wt::Ext::ToolTipConfig</class>
    <class kind="class">Wt::Ext::Widget</class>
    <member kind="enumeration">
      <name>DataLocation</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>ga5bc908c6e6aa90646cca1276d68cb2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClientSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gga5bc908c6e6aa90646cca1276d68cb2b2a19099959db2ef813b3d1a1e2f3e04675</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ServerSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gga5bc908c6e6aa90646cca1276d68cb2b2a1ae210985e4d5795a6aa21ed8871dfe7</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="group__ext">moh</docanchor>
    <docanchor file="group__ext">bla</docanchor>
  </compound>
  <compound kind="group">
    <name>style</name>
    <title>Style classes</title>
    <filename>group__style.html</filename>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::WFont</class>
    <member kind="enumeration">
      <name>GlobalColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>ga9686ea88ce4db2c0a12ea84452f60133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>white</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133aa8fbe7a33681fc09e0231d6dfbd90d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>black</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133acf5dee884803e93b444f8bd222956bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>red</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a57462cb05392ee7e39d27e5f66252c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkRed</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a9a39ff0e1a5aa34a2e69407f8895eb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>green</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a9de61f6576b0207b4d5c988cbeee1b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGreen</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a75712f6d7896b12273323acd21b28d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>blue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a0cb88ce2189a8986f24a4409498e490e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkBlue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a8d8dd4dab4ab7688946bfcdfcb468b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a52646bf8927d2018adec6814a2f903b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkCyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133afb298721c24d10cd3d47c5c8efec0042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>magenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a434a521950245ccd5041ef2d74b04fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkMagenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ab18a96d57e7cdcf8a986c4f112f5d18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>yellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ae0950d4b5d4c4c9b98e3aa7334bda80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkYellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a7621702d04fd8d039e1a3230a8e7b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a2ae20330b5a9eb890119be5074615858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133aefe4fd296d57518c9566b524215f66ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lightGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ae3718148b44536034789bc88ba71564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transparent</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a6975fc5993d75cf4e71f097b548927a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>modelview</name>
    <title>Model/view system</title>
    <filename>group__modelview.html</filename>
    <class kind="struct">Wt::boost_any_traits</class>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::WAbstractItemDelegate</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractItemView</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WAbstractTableModel</class>
    <class kind="class">Wt::WAggregateProxyModel</class>
    <class kind="class">Wt::WBatchEditProxyModel</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WItemDelegate</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WSuggestionPopup</class>
    <class kind="class">Wt::WTableView</class>
    <class kind="class">Wt::WTreeView</class>
    <member kind="enumeration">
      <name>MatchFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaad8dd5072a40c11a34ee548bfb20b2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa7b0e63f3888f29b33a722dade0f2bfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStringExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baac2dc009d041fc6e24084ed6be94a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStartsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baaaf45aa78ff6ae362f112fa1988104730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchEndsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa0b444585cace7576dda80036805d93bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchRegExp</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa801be4d30b88ade43408a788cef7b6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWildCard</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baae7967680e21f7dae7b603a1f1c5bf44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchCaseSensitive</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa72ef48ecccae23d56c8a5bbeb400568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWrap</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa2e90a2f383a7da7e73e8f498e3f2faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HeaderFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gafb18b4339442f1327c2a65850f3d8a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsCollapsed</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53a55020edcd8019b7fd0b330283b194929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsExpandedLeft</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53adb54e2a704ae37581af6cc33828fef71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsExpandedRight</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53ab8f2b2845555220afc9c3c24c43194cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemDataRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga0ae864e12320f9f89172735e075ed068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DisplayRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a5ed17aded8a0e3b712698cf85a218f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DecorationRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068aab6678fc176854f7990d6cff4eed779e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EditRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a6bc0da3ea683a06ee293a5a15f903cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StyleClassRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a776934b313f273b8e5e602e7eee9f73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CheckStateRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068aad55e3ad8d7b76279adfc160bcb74940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolTipRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068abde5f65c6b5cab667d11d1ceb87e4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InternalPathRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a2f954b164f69cf17133993d15f25f8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UrlRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a37c19d2357fb1de30464a0fde4cb5395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LevelRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a4b121c4303b1ab17f6347e950af65c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerPenColorRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a80b9aeddc46a50e7f71b7fd3b3dc2d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerBrushColorRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068ae77c18ea017e985b9c029f56c2417ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a9b7eae9fc07ea4fd8afe7bc97954162c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsSelectable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a77f858c86a06358abdcc64e4f9d03e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsEditable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a8664c482d721bbcb73539a924c7a9fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsUserCheckable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0af309bd7d1183d934c73aefb2830e591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDragEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a2b0edddfd15d67a84723c9043479ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDropEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a95d23063251001545d4bfab1308879a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsTristate</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0aacc3aa45a6c6197687337399315826b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsXHTMLText</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a8ce71c5a5f185d9097b4bd596c71315e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDirty</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a95a89bce0ba3417d61392eccc09995ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AscendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga4173856040cf108a9c7360927a43ebacac2e51e9fbb9a1250c908443700e03d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DescendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga4173856040cf108a9c7360927a43ebacaaca46a90a3bf0912bf035a380722c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CopyAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaca801bdfb957c360c5f8709cc46949aaa153a9813fd5eb77e31695657ac9cfb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaca801bdfb957c360c5f8709cc46949aaa3f0ed7a05e822a2623d65f15e573bc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>asString</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga57b5cadd177847f51eaeb0cee23782c1</anchor>
      <arglist>(const boost::any &amp;v, const WString &amp;formatString=WString())</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asNumber</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga2494f8093b2b8f2f9c0aa7699e7bfc2a</anchor>
      <arglist>(const boost::any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerType</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga91842a84102ee15d41102ccf0745f4e4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>painting</name>
    <title>Painting system</title>
    <filename>group__painting.html</filename>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPdfImage</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WRasterImage</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WShadow</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WVectorImage</class>
    <class kind="class">Wt::WVmlImage</class>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gab70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eaa8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eac1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a39a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a3d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bead2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157aa6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157a574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>signalslot</name>
    <title>Signal/slot system</title>
    <filename>group__signalslot.html</filename>
    <class kind="class">Wt::SignalBase</class>
    <class kind="class">Wt::EventSignalBase</class>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::WTouchEvent</class>
    <class kind="class">Wt::WGestureEvent</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::EventSignal</class>
    <class kind="class">Wt::WSignalMapper</class>
    <member kind="enumeration">
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a7c97a6a0da658c8b189acea1f4c0e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShiftModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a206924f86e7455d5d88c30a1d61899b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ControlModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091ada8f2dab72c395e56d897b769f6d0050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AltModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091af3044546ac4679d9259be8332cca0dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a73abfeaa5bbd55ab4f28fabf3d134720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_unknown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da3b769e7e817ab438b6341fb15598aa2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Enter</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dab3c8e06184697e8b55705ec6e92ef57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Tab</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da15a17a0b9c7794f1e212bb209f9a6b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Backspace</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da9b6c475089ff4ecea25ba729d4c6a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Shift</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4daba0b20a0d45ae1265acf9233bf9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Control</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da7faac129eabb364618c2f147775dddd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Alt</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da78df9bb6a131c160d5d7850aebbe2399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageUp</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dab5764176c1fbc5b3058e545708bc2c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageDown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da67fdcf0a21fa225f138ae7eff5dc5d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_End</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da52f767d967e30a4ef2b87375b58c3758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Home</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da77efa77ae9e1a0d0da90a6da05978f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Left</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae67dc2b36f94673c36614c36a22c86a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Up</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da292b7bad0c08eca53003b16887dbbfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Right</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da36408ed64c87279baf6752a718f1d867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Down</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da81ce19fbff7cd5e33d311df5dc036b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Insert</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da1b9d45e03463b8ce85e77072ee3ca7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Delete</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da0974cc95023b3b3fcc89bed74ec4b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Escape</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da6fdfa052fee9a0ecad21a8ef29fc4a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F1</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da2efc2110e512a5001b8ce6d58d940f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F2</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da7014a077073ead5bde183b3cbf4e8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F3</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da45c3287676adbc30f53facff89fd5001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F4</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da444fd761aef07334c7bfbb59c1eb49a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F5</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da8ba749e5623684d7f908b5516eb474f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F6</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dacc96e9d1ed8d5e11bac5d68623151694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F7</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da124e3d34f1a696e33027fe48c003055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F8</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4e8fafdcba3de0933febe02c13e81a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F9</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae8d582832595b29a69a0a26a19b3cf53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F10</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da971d948e3abff0d42f8aa9409de16531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F11</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4dfdaa48520aa89b9f9b9caf7e31e9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F12</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da9e048d50a8cc62e258572f8abe8d2412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Space</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da5ec86a768d9ba285b2143df9977b5239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_A</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da8eed1379a2c85aa3132f7f3170f95ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_B</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da069dbddc7a4b464624bba14f13c2084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_C</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dafddfb22114bd3d90f0ddb1c65feb3516</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_D</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae1a302cbded84b1202a5107c808ed740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_E</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae454998d6c5ac2d5f7f6c91f0df2c71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da098250f2140b5e2fb5b46e0ce5f10af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_G</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da41e1288722f2b2f160aa81c28eccc4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_H</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da716d8d1ef8dfd3aac7dbcead493127b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_I</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dad927cec36329c7d65d751a8f031a249f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_J</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da59bef2a0589454049c2565648a6693ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_K</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daefbef7cec0c75b7fc2a53f573894b109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_L</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da1e4f578cb8fb4a9319525b7a6af32eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_M</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da88915645dbc4db17dfe3308fb65e9127</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_N</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da27d96fcd466dd0bdc867348ef07c0460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_O</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da835039108055255d92e72f6ea9eca896</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_P</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daf681b38469fcc9b26a2866db5007fb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Q</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da19771f87de22387fb76a417ae9b3ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_R</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da3ae47d7bd97b735e27c873c17d08e740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_S</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da386061206cf7e0886720025eb2d152de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_T</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da468cd3a60da863a3e5c80c739c3ff789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_U</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da65cc1a8b2bd95606398560bab5309e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_V</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daf64151895196cf7907e5274d297bd65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_W</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae4d913efd09ed5ba93e8e73d636e350a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_X</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da606e38f4f386d7bafd43c04d0d6a8d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Y</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da80f28601fb3b74843eb22f9f0381f076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Z</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da2b51e784d1e7228464fde06b4d37f6ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt</name>
    <filename>namespaceWt.html</filename>
    <namespace>Wt::Chart</namespace>
    <namespace>Wt::Dbo</namespace>
    <namespace>Wt::Ext</namespace>
    <namespace>Wt::Http</namespace>
    <class kind="class">Wt::SyncLock</class>
    <class kind="class">Wt::WAbstractArea</class>
    <class kind="class">Wt::WAbstractItemDelegate</class>
    <class kind="class">Wt::WAbstractItemModel</class>
    <class kind="class">Wt::WAbstractItemView</class>
    <class kind="class">Wt::WAbstractListModel</class>
    <class kind="class">Wt::WAbstractProxyModel</class>
    <class kind="class">Wt::WAbstractTableModel</class>
    <class kind="class">Wt::WAbstractToggleButton</class>
    <class kind="class">Wt::WAccordionLayout</class>
    <class kind="class">Wt::WAggregateProxyModel</class>
    <class kind="class">Wt::WAnchor</class>
    <class kind="class">Wt::WApplication</class>
    <class kind="class">Wt::WBatchEditProxyModel</class>
    <class kind="struct">Wt::boost_any_traits</class>
    <class kind="class">Wt::WBorder</class>
    <class kind="class">Wt::WBorderLayout</class>
    <class kind="class">Wt::WBoxLayout</class>
    <class kind="class">Wt::WBreak</class>
    <class kind="class">Wt::WBrush</class>
    <class kind="class">Wt::WButtonGroup</class>
    <class kind="class">Wt::WCalendar</class>
    <class kind="class">Wt::WCanvasPaintDevice</class>
    <class kind="class">Wt::WCheckBox</class>
    <class kind="class">Wt::WCircleArea</class>
    <class kind="class">Wt::WColor</class>
    <class kind="class">Wt::WCombinedLocalizedStrings</class>
    <class kind="class">Wt::WComboBox</class>
    <class kind="class">Wt::WCompositeWidget</class>
    <class kind="class">Wt::WContainerWidget</class>
    <class kind="class">Wt::WCssDecorationStyle</class>
    <class kind="class">Wt::WCssRule</class>
    <class kind="class">Wt::WCssTemplateRule</class>
    <class kind="class">Wt::WCssTextRule</class>
    <class kind="class">Wt::WCssStyleSheet</class>
    <class kind="class">Wt::InvalidDateException</class>
    <class kind="class">Wt::WDate</class>
    <class kind="class">Wt::WDatePicker</class>
    <class kind="class">Wt::InvalidDateTimeException</class>
    <class kind="class">Wt::WDateTime</class>
    <class kind="class">Wt::WDateValidator</class>
    <class kind="class">Wt::WDefaultLayout</class>
    <class kind="class">Wt::WDefaultLoadingIndicator</class>
    <class kind="class">Wt::WDialog</class>
    <class kind="class">Wt::WDoubleValidator</class>
    <class kind="class">Wt::WEnvironment</class>
    <class kind="struct">Wt::Coordinates</class>
    <class kind="class">Wt::Touch</class>
    <class kind="class">Wt::WMouseEvent</class>
    <class kind="class">Wt::WKeyEvent</class>
    <class kind="class">Wt::WDropEvent</class>
    <class kind="class">Wt::WScrollEvent</class>
    <class kind="class">Wt::WTouchEvent</class>
    <class kind="class">Wt::WGestureEvent</class>
    <class kind="class">Wt::WFileResource</class>
    <class kind="class">Wt::WFileUpload</class>
    <class kind="class">Wt::WFitLayout</class>
    <class kind="class">Wt::WFlashObject</class>
    <class kind="class">Wt::WFont</class>
    <class kind="class">Wt::WFormWidget</class>
    <class kind="class">Wt::WGenericMatrix</class>
    <class kind="class">Wt::WGLWidget</class>
    <class kind="class">Wt::WGoogleMap</class>
    <class kind="class">Wt::WGridLayout</class>
    <class kind="class">Wt::WGroupBox</class>
    <class kind="class">Wt::WHBoxLayout</class>
    <class kind="class">Wt::WHTML5Audio</class>
    <class kind="class">Wt::WHTML5Media</class>
    <class kind="class">Wt::WHTML5Video</class>
    <class kind="class">Wt::WIconPair</class>
    <class kind="class">Wt::WImage</class>
    <class kind="class">Wt::WInPlaceEdit</class>
    <class kind="class">Wt::WInteractWidget</class>
    <class kind="class">Wt::WIntValidator</class>
    <class kind="class">Wt::WItemDelegate</class>
    <class kind="class">Wt::WItemSelectionModel</class>
    <class kind="class">Wt::JSignal</class>
    <class kind="class">Wt::JSlot</class>
    <class kind="class">Wt::WLabel</class>
    <class kind="class">Wt::WLayout</class>
    <class kind="class">Wt::WLayoutItem</class>
    <class kind="class">Wt::WLayoutItemImpl</class>
    <class kind="class">Wt::WLength</class>
    <class kind="class">Wt::WLengthValidator</class>
    <class kind="class">Wt::WLineEdit</class>
    <class kind="class">Wt::WLineF</class>
    <class kind="class">Wt::WLoadingIndicator</class>
    <class kind="class">Wt::WLocalizedStrings</class>
    <class kind="class">Wt::WLogger</class>
    <class kind="class">Wt::WLogEntry</class>
    <class kind="class">Wt::WMatrix4x4</class>
    <class kind="class">Wt::WMemoryResource</class>
    <class kind="class">Wt::WMenu</class>
    <class kind="class">Wt::WMenuItem</class>
    <class kind="class">Wt::WMessageBox</class>
    <class kind="class">Wt::WMessageResourceBundle</class>
    <class kind="class">Wt::WModelIndex</class>
    <class kind="class">Wt::WObject</class>
    <class kind="class">Wt::WOverlayLoadingIndicator</class>
    <class kind="class">Wt::WPaintDevice</class>
    <class kind="class">Wt::WPaintedWidget</class>
    <class kind="class">Wt::WPainter</class>
    <class kind="class">Wt::WPainterPath</class>
    <class kind="class">Wt::WPanel</class>
    <class kind="class">Wt::WPdfImage</class>
    <class kind="class">Wt::WPen</class>
    <class kind="class">Wt::WPoint</class>
    <class kind="class">Wt::WPointF</class>
    <class kind="class">Wt::WPolygonArea</class>
    <class kind="class">Wt::WPopupMenu</class>
    <class kind="class">Wt::WPopupMenuItem</class>
    <class kind="class">Wt::WProgressBar</class>
    <class kind="class">Wt::WPushButton</class>
    <class kind="class">Wt::WRadioButton</class>
    <class kind="class">Wt::WRasterImage</class>
    <class kind="class">Wt::WRectArea</class>
    <class kind="class">Wt::WRectF</class>
    <class kind="class">Wt::WRegExpValidator</class>
    <class kind="class">Wt::WResource</class>
    <class kind="class">Wt::WScrollArea</class>
    <class kind="class">Wt::WScrollBar</class>
    <class kind="class">Wt::WSelectionBox</class>
    <class kind="class">Wt::WServer</class>
    <class kind="class">Wt::WShadow</class>
    <class kind="class">Wt::SignalBase</class>
    <class kind="class">Wt::Signal</class>
    <class kind="class">Wt::EventSignalBase</class>
    <class kind="class">Wt::EventSignal</class>
    <class kind="class">Wt::WSignalMapper</class>
    <class kind="class">Wt::WSlider</class>
    <class kind="class">Wt::WSocketNotifier</class>
    <class kind="class">Wt::WSortFilterProxyModel</class>
    <class kind="class">Wt::WSound</class>
    <class kind="class">Wt::WSpinBox</class>
    <class kind="class">Wt::WStackedWidget</class>
    <class kind="class">Wt::WStandardItem</class>
    <class kind="class">Wt::WStandardItemModel</class>
    <class kind="class">Wt::WString</class>
    <class kind="class">Wt::WStringListModel</class>
    <class kind="class">Wt::WSubMenuItem</class>
    <class kind="class">Wt::WSuggestionPopup</class>
    <class kind="class">Wt::WSvgImage</class>
    <class kind="class">Wt::WTable</class>
    <class kind="class">Wt::WTableCell</class>
    <class kind="class">Wt::WTableColumn</class>
    <class kind="class">Wt::WTableRow</class>
    <class kind="class">Wt::WTableView</class>
    <class kind="class">Wt::WTabWidget</class>
    <class kind="class">Wt::WTemplate</class>
    <class kind="class">Wt::WText</class>
    <class kind="class">Wt::WTextArea</class>
    <class kind="class">Wt::WTextEdit</class>
    <class kind="class">Wt::InvalidTimeException</class>
    <class kind="class">Wt::WTime</class>
    <class kind="class">Wt::WTimer</class>
    <class kind="class">Wt::WTransform</class>
    <class kind="class">Wt::WTree</class>
    <class kind="class">Wt::WTreeNode</class>
    <class kind="class">Wt::WTreeTable</class>
    <class kind="class">Wt::WTreeTableNode</class>
    <class kind="class">Wt::WTreeView</class>
    <class kind="class">Wt::WValidationStatus</class>
    <class kind="class">Wt::WValidator</class>
    <class kind="class">Wt::WVBoxLayout</class>
    <class kind="class">Wt::WVectorImage</class>
    <class kind="class">Wt::WViewWidget</class>
    <class kind="class">Wt::WStaticModelView</class>
    <class kind="class">Wt::WVirtualImage</class>
    <class kind="class">Wt::WVmlImage</class>
    <class kind="class">Wt::WWebWidget</class>
    <class kind="class">Wt::WWidget</class>
    <class kind="class">Wt::WWidgetItem</class>
    <member kind="enumeration">
      <name>ViewItemRenderFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RenderSelected</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6a12bf604f4d939e0cca796847cda4b484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RenderEditing</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6a30a82a0b553e55ed6cdab23a8fdadc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RenderFocused</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6ab33ff2e9b3f5374810e9875eb2e61f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RenderInvalid</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8df2183a957c453839f3382e3db167d6a5c6783973310fc52839117498e0fd604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Orientation</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2a8d45559e16a0185bf61bfad0a67912</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Horizontal</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2a8d45559e16a0185bf61bfad0a67912ac2ebf22b096a22b18eef23e736aa2e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Vertical</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2a8d45559e16a0185bf61bfad0a67912af916b7ec24727db2d972f0770170c7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>StandardButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoButton</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062aaa5455299757b4f679b36da038a56262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ok</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062af92b793210df9123b9be1ee11dd0d36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cancel</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062ac31abea0685e68a0e116038d0ad48ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Yes</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062a5bf8c24f48fc404ccfea9ae2248a989c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>No</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062a4ca128eca84d1965d7ac1bb8a6936e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Abort</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062aa30d8b78fa024381f9807fd878e0eddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Retry</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062af060b3db6c76d047f1682753fc138f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ignore</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062ac1485cc8119800b35353d5f39231eab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YesAll</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062a62bd8313eeee1e2ca5076315b5158d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoAll</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a270a5e1af09979a6559f0f39e3d93062a0edc88532d04470aaefe72ee8f09d26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Icon</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoIcon</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5fa2ad77ae37661ce098ec3134ae56af58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Information</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5fad16cfa38c4fc25f8a8f893f98a020dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warning</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5fad0ce1bf7328e5a588f9c72c1093589aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Critical</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5faf62c8ff8ae07c8f988d1c472d68420c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Question</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aaa26ad9f143951595691fbd604567f5fab79ccb6836e6a346a95ed11497a7247c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionMode</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a74b3f7eb1689a3cbf0ea514ffd20bccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a74b3f7eb1689a3cbf0ea514ffd20bcccab681964d34d71d850361461bafc46891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a74b3f7eb1689a3cbf0ea514ffd20bccca4fd3c5ba6ce5289a1e732d85f002882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ExtendedSelection</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a74b3f7eb1689a3cbf0ea514ffd20bccca7784d55577e92022399052c3d4d69954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionBehavior</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a04aecd34ae0810219e82208a9890de13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectItems</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a04aecd34ae0810219e82208a9890de13afcf79c96af1f3bd64b7b143fd1ec1126</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectRows</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a04aecd34ae0810219e82208a9890de13af392e7f86ea1d0807e54de5739011239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SelectionFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Select</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91eda5317beeb399a97e111e7c99dee9161d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deselect</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91eda9e3f37e4a5cbd8dd26814bb8354492e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToggleSelect</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91eda2e9e054e722c4058ec5c04b544be7724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClearAndSelect</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a1ec974261fb0e2b80498473dcb6c91eda8813152836bebb1721c97b8d0d6443c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Side</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Top</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3a68b058364f8c2380c1d369a321f22f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3a87ae7d3cb692a5a4e8f18a7fea93a8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Left</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3a6568fecac7c7d7223afaed240bcfdd9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Right</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3acf431c3ce5eb6f14c0390feb14a68004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CenterX</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3a85c5bceaa27f26663a1f82d20dbb29b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CenterY</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a6f4636bcc6ab3c075165d249b3a5a3a0a5872f3e46be874591b8390a4d1200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AlignmentFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignLeft</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fad033ef69b45d0b75633be34168c9b606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignRight</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fab250310385383f0b2f68d4e0ad5567e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignCenter</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa121104cdbb5db77c7d038813a93998e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignJustify</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa18cdf9d975a5a41afa182aabfde0de88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignBaseline</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa81ebe44f54e9c4ef2c3724fda9c3283c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignSub</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa81309664fff5d8406dab45c323d9f6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignSuper</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143faa19e58feec8b10ac71c857149a905051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTop</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa58fe5182bd266132c59718c6d30945a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTextTop</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa843f362e4ccfcc195ffe96b79abf1339</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignMiddle</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa2ed90f01dbf74049f428d33769d48e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignBottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa4f2aa4abba8500e25651bf8db5f0c162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AlignTextBottom</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab8f772c69bc8180c31f9e4f4593b143fa40acabc492a1f8a5a0ed98881b1128cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PositionScheme</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Static</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40aab8d71e0c30250d77e05b6c1708e020f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Relative</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40acceb16577ef89ec5d7dec10507e3142a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Absolute</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40af924d8e24cb9e55dbeac9284c5640c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Fixed</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a2551043da5512cfe7b857c5db6e5ae40a2e157222a2018e8665c15c1ba56df530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Cursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ArrowCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6ab8be050ebabfd528fce3c8b4ce972088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AutoCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6a9cd0118f12b79f6894086fa07777f0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6a069ee2c69ffe75cc06bff8c6c946f21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointingHandCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6af860d39b9a2ba8f7d7359453bf15a37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpenHandCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6ab8033fd03ad261e11583fe7c4200b0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WaitCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6a41173c71ae3df9016a1057a24f01f20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IBeamCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6ae10e6e6970e8a042483ccaf1f66c7e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WhatsThisCursor</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6dc0346a6ae888d6d4ab44f022e61eb6a4adb56b89e435dedd82aac10a7cbb5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52ae31c944a7e88c44611f9317e7c1223e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52a92c04a55980fec5344377e55b271cfd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gab70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eaa8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eac1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a39a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a3d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bead2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157aa6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157a574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AnchorTarget</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6c93a6e97016801a310275457e43f333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetSelf</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6c93a6e97016801a310275457e43f333ae976883723836b4423d81ecf590bde0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetThisWindow</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6c93a6e97016801a310275457e43f333ad4da0533d8114dc867406f18fef5bcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TargetNewWindow</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6c93a6e97016801a310275457e43f333a95e5b4e8a2eed99252fc0eb2bb483cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextFormat</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a140dea437d52d3d7c438ea3bd16a1480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTMLText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a140dea437d52d3d7c438ea3bd16a1480a847ab5a73b906fea275bd16877b420a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTMLUnsafeText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a140dea437d52d3d7c438ea3bd16a1480aeff9ccfd4130ea9922c46d94f82119b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainText</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a140dea437d52d3d7c438ea3bd16a1480ae06bb9ae9a26d13c3dcf9f20d5067885</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>GlobalColor</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>ga9686ea88ce4db2c0a12ea84452f60133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>white</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133aa8fbe7a33681fc09e0231d6dfbd90d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>black</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133acf5dee884803e93b444f8bd222956bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>red</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a57462cb05392ee7e39d27e5f66252c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkRed</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a9a39ff0e1a5aa34a2e69407f8895eb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>green</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a9de61f6576b0207b4d5c988cbeee1b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGreen</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a75712f6d7896b12273323acd21b28d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>blue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a0cb88ce2189a8986f24a4409498e490e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkBlue</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a8d8dd4dab4ab7688946bfcdfcb468b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>cyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a52646bf8927d2018adec6814a2f903b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkCyan</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133afb298721c24d10cd3d47c5c8efec0042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>magenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a434a521950245ccd5041ef2d74b04fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkMagenta</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ab18a96d57e7cdcf8a986c4f112f5d18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>yellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ae0950d4b5d4c4c9b98e3aa7334bda80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkYellow</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a7621702d04fd8d039e1a3230a8e7b2e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a2ae20330b5a9eb890119be5074615858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>darkGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133aefe4fd296d57518c9566b524215f66ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lightGray</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133ae3718148b44536034789bc88ba71564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transparent</name>
      <anchorfile>group__style.html</anchorfile>
      <anchor>gga9686ea88ce4db2c0a12ea84452f60133a6975fc5993d75cf4e71f097b548927a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>KeyboardModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga50f91169486bada5931f3adc3a623091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a7c97a6a0da658c8b189acea1f4c0e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShiftModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a206924f86e7455d5d88c30a1d61899b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ControlModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091ada8f2dab72c395e56d897b769f6d0050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AltModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091af3044546ac4679d9259be8332cca0dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaModifier</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga50f91169486bada5931f3adc3a623091a73abfeaa5bbd55ab4f28fabf3d134720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Key</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>ga34e65660d30e69c56aa636a8856aa52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_unknown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da3b769e7e817ab438b6341fb15598aa2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Enter</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dab3c8e06184697e8b55705ec6e92ef57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Tab</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da15a17a0b9c7794f1e212bb209f9a6b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Backspace</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da9b6c475089ff4ecea25ba729d4c6a771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Shift</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4daba0b20a0d45ae1265acf9233bf9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Control</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da7faac129eabb364618c2f147775dddd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Alt</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da78df9bb6a131c160d5d7850aebbe2399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageUp</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dab5764176c1fbc5b3058e545708bc2c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_PageDown</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da67fdcf0a21fa225f138ae7eff5dc5d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_End</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da52f767d967e30a4ef2b87375b58c3758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Home</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da77efa77ae9e1a0d0da90a6da05978f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Left</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae67dc2b36f94673c36614c36a22c86a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Up</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da292b7bad0c08eca53003b16887dbbfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Right</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da36408ed64c87279baf6752a718f1d867</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Down</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da81ce19fbff7cd5e33d311df5dc036b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Insert</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da1b9d45e03463b8ce85e77072ee3ca7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Delete</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da0974cc95023b3b3fcc89bed74ec4b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Escape</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da6fdfa052fee9a0ecad21a8ef29fc4a5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F1</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da2efc2110e512a5001b8ce6d58d940f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F2</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da7014a077073ead5bde183b3cbf4e8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F3</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da45c3287676adbc30f53facff89fd5001</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F4</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da444fd761aef07334c7bfbb59c1eb49a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F5</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da8ba749e5623684d7f908b5516eb474f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F6</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dacc96e9d1ed8d5e11bac5d68623151694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F7</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da124e3d34f1a696e33027fe48c003055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F8</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4e8fafdcba3de0933febe02c13e81a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F9</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae8d582832595b29a69a0a26a19b3cf53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F10</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da971d948e3abff0d42f8aa9409de16531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F11</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da4dfdaa48520aa89b9f9b9caf7e31e9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F12</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da9e048d50a8cc62e258572f8abe8d2412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Space</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da5ec86a768d9ba285b2143df9977b5239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_A</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da8eed1379a2c85aa3132f7f3170f95ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_B</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da069dbddc7a4b464624bba14f13c2084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_C</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dafddfb22114bd3d90f0ddb1c65feb3516</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_D</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae1a302cbded84b1202a5107c808ed740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_E</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae454998d6c5ac2d5f7f6c91f0df2c71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_F</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da098250f2140b5e2fb5b46e0ce5f10af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_G</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da41e1288722f2b2f160aa81c28eccc4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_H</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da716d8d1ef8dfd3aac7dbcead493127b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_I</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dad927cec36329c7d65d751a8f031a249f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_J</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da59bef2a0589454049c2565648a6693ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_K</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daefbef7cec0c75b7fc2a53f573894b109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_L</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da1e4f578cb8fb4a9319525b7a6af32eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_M</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da88915645dbc4db17dfe3308fb65e9127</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_N</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da27d96fcd466dd0bdc867348ef07c0460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_O</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da835039108055255d92e72f6ea9eca896</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_P</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daf681b38469fcc9b26a2866db5007fb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Q</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da19771f87de22387fb76a417ae9b3ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_R</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da3ae47d7bd97b735e27c873c17d08e740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_S</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da386061206cf7e0886720025eb2d152de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_T</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da468cd3a60da863a3e5c80c739c3ff789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_U</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da65cc1a8b2bd95606398560bab5309e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_V</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52daf64151895196cf7907e5274d297bd65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_W</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52dae4d913efd09ed5ba93e8e73d636e350a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_X</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da606e38f4f386d7bafd43c04d0d6a8d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Y</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da80f28601fb3b74843eb22f9f0381f076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Key_Z</name>
      <anchorfile>group__signalslot.html</anchorfile>
      <anchor>gga34e65660d30e69c56aa636a8856aa52da2b51e784d1e7228464fde06b4d37f6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CheckState</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a59dae4dad2967d1d0f9b765f468442fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unchecked</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a59dae4dad2967d1d0f9b765f468442fbad5dca88ed5fa2185a98cc1f4c686cd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PartiallyChecked</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a59dae4dad2967d1d0f9b765f468442fba276bb5f9da28be5fc0685d7a5cc2296b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Checked</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a59dae4dad2967d1d0f9b765f468442fbabc1a90642e7fc65241f70c11e9f90210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PaintFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a23a1002020ee93ed4679d351b7350de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PaintUpdate</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a23a1002020ee93ed4679d351b7350de3a0be7215fd7c15723ada0968fceae0259</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>RegExpFlag</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6bde75e90de6c0a1611951ae632e2ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchCaseInsensitive</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6bde75e90de6c0a1611951ae632e2ca2a2d1c5d56629dba26cf69a10604814765</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EntryPointType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4b6ed5fd28b4f5fa141b153c1107349</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Application</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4b6ed5fd28b4f5fa141b153c1107349a6688bf68bd3aeee4cca7e75a68dee7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WidgetSet</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4b6ed5fd28b4f5fa141b153c1107349a932eaa79ae0d1f31e3cb240cf5ff0826</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StaticResource</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af4b6ed5fd28b4f5fa141b153c1107349a48135d5cd84f8b382b4c9a5c1b90234a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MatchFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaad8dd5072a40c11a34ee548bfb20b2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa7b0e63f3888f29b33a722dade0f2bfe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStringExactly</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baac2dc009d041fc6e24084ed6be94a9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchStartsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baaaf45aa78ff6ae362f112fa1988104730</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchEndsWith</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa0b444585cace7576dda80036805d93bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchRegExp</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa801be4d30b88ade43408a788cef7b6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWildCard</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baae7967680e21f7dae7b603a1f1c5bf44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchCaseSensitive</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa72ef48ecccae23d56c8a5bbeb400568d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MatchWrap</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaad8dd5072a40c11a34ee548bfb20b2baa2e90a2f383a7da7e73e8f498e3f2faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>HeaderFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gafb18b4339442f1327c2a65850f3d8a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsCollapsed</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53a55020edcd8019b7fd0b330283b194929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsExpandedLeft</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53adb54e2a704ae37581af6cc33828fef71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColumnIsExpandedRight</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggafb18b4339442f1327c2a65850f3d8a53ab8f2b2845555220afc9c3c24c43194cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MetaHeaderType</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a9d76d7ac3eb4b1005a35fdc1500c0dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaName</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a9d76d7ac3eb4b1005a35fdc1500c0dcba91a1c3672cd2dd1f7695da99425b9c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MetaHttpHeader</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a9d76d7ac3eb4b1005a35fdc1500c0dcbac1676cae99ab86e4e864108dc84191b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemDataRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga0ae864e12320f9f89172735e075ed068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DisplayRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a5ed17aded8a0e3b712698cf85a218f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DecorationRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068aab6678fc176854f7990d6cff4eed779e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EditRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a6bc0da3ea683a06ee293a5a15f903cde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StyleClassRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a776934b313f273b8e5e602e7eee9f73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CheckStateRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068aad55e3ad8d7b76279adfc160bcb74940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolTipRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068abde5f65c6b5cab667d11d1ceb87e4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InternalPathRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a2f954b164f69cf17133993d15f25f8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UrlRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a37c19d2357fb1de30464a0fde4cb5395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LevelRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a4b121c4303b1ab17f6347e950af65c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerPenColorRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a80b9aeddc46a50e7f71b7fd3b3dc2d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerBrushColorRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068ae77c18ea017e985b9c029f56c2417ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserRole</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga0ae864e12320f9f89172735e075ed068a9b7eae9fc07ea4fd8afe7bc97954162c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ItemFlag</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga1d77c4de293aebfacbdde124de06b8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsSelectable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a77f858c86a06358abdcc64e4f9d03e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsEditable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a8664c482d721bbcb73539a924c7a9fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsUserCheckable</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0af309bd7d1183d934c73aefb2830e591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDragEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a2b0edddfd15d67a84723c9043479ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDropEnabled</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a95d23063251001545d4bfab1308879a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsTristate</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0aacc3aa45a6c6197687337399315826b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsXHTMLText</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a8ce71c5a5f185d9097b4bd596c71315e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ItemIsDirty</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga1d77c4de293aebfacbdde124de06b8b0a95a89bce0ba3417d61392eccc09995ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SortOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga4173856040cf108a9c7360927a43ebac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AscendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga4173856040cf108a9c7360927a43ebacac2e51e9fbb9a1250c908443700e03d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DescendingOrder</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gga4173856040cf108a9c7360927a43ebacaaca46a90a3bf0912bf035a380722c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>DropAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>gaca801bdfb957c360c5f8709cc46949aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CopyAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaca801bdfb957c360c5f8709cc46949aaa153a9813fd5eb77e31695657ac9cfb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MoveAction</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ggaca801bdfb957c360c5f8709cc46949aaa3f0ed7a05e822a2623d65f15e573bc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>asString</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga57b5cadd177847f51eaeb0cee23782c1</anchor>
      <arglist>(const boost::any &amp;v, const WString &amp;formatString=WString())</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asNumber</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga2494f8093b2b8f2f9c0aa7699e7bfc2a</anchor>
      <arglist>(const boost::any &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerType</name>
      <anchorfile>group__modelview.html</anchorfile>
      <anchor>ga91842a84102ee15d41102ccf0745f4e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, A, C &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a23f30d5fe6f187545e465fac80127ebd</anchor>
      <arglist>(const WGenericMatrix&lt; T, A, B &gt; &amp;l, const WGenericMatrix&lt; T, B, C &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aff7b11fc755a2e56520fb101583dc221</anchor>
      <arglist>(std::ostream &amp;os, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ad54d791ed612cf1778624dbf2a246184</anchor>
      <arglist>(const T &amp;factor, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator*</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a29a7903618855cb6476731ed733c8616</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m, const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator/</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ac12de4dad09fb739a507c56ab1566e8e</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m, const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator+</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>aecbad6d74e4047f4216425f51405fafc</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;l, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator-</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a104f464c7d86e10837d0aff3da773645</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;l, const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt;</type>
      <name>operator-</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a8ee18a66b3018b6b8bf19513d2cf1810</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;m)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; Side &gt;</type>
      <name>None</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a6181c1f1a8c81efbcf9ebe03fab48a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; Side &gt;</type>
      <name>CenterXY</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a5a0074dd261548173d62b082e3daf3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; Side &gt;</type>
      <name>Horizontals</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a41197ab52b0093b4e148a910d9d1342c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; Side &gt;</type>
      <name>Verticals</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>af6661575a0ba1c14062617adef2c0dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; Side &gt;</type>
      <name>All</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>a3358b8309fdb63a402efcb1a577855e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; AlignmentFlag &gt;</type>
      <name>AlignHorizontalMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>acf15143d8188dfb0bced5e5032400b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; AlignmentFlag &gt;</type>
      <name>AlignVerticalMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ab1b563b1c886c2928690f55b821be9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WFlags&lt; MatchFlag &gt;</type>
      <name>MatchTypeMask</name>
      <anchorfile>namespaceWt.html</anchorfile>
      <anchor>ac1a13c4f81c39de4d4e39ba0eb1ecae6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::SyncLock</name>
    <filename>classWt_1_1SyncLock.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SyncLock</name>
      <anchorfile>classWt_1_1SyncLock.html</anchorfile>
      <anchor>a8d5e0c8461760c1eeafc8c14bcfb9684</anchor>
      <arglist>(Mutex &amp;mutex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SyncLock</name>
      <anchorfile>classWt_1_1SyncLock.html</anchorfile>
      <anchor>afcf841c1b57a78e1664d448b03840297</anchor>
      <arglist>(Mutex &amp;mutex, boost::defer_lock_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classWt_1_1SyncLock.html</anchorfile>
      <anchor>a191047ad7895339eecde9eb230be25ea</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractArea</name>
    <filename>classWt_1_1WAbstractArea.html</filename>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractArea</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a2ca3fe7cc0229dffe137d2cd4edf7c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>af3c8461b36ec142326d0204e16c9bb34</anchor>
      <arglist>(bool hole)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHole</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a5cf67f536eaecba3c2165fc927c76707</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRef</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a4c3350282fd3563886c093257ecd3119</anchor>
      <arglist>(const std::string &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>ref</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a34cbb1334be3c8813ed1f8b401028544</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>af33f85a8505629ea9ded1ec1b962c359</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>aed1e5e63fee2a9f7d2a58974902d4145</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a4b1d968e9681eefe588916c8a2ae944b</anchor>
      <arglist>(AnchorTarget target)</arglist>
    </member>
    <member kind="function">
      <type>AnchorTarget</type>
      <name>target</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ab43a761767de10f92b00dcae6b8adff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a0119bf73439f81f83b754906785746bf</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>aa4902223227eded25c34c556edb17b2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a310e8e1d6360d22bf8bf0e484a52b8f9</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a05cd3a6e69b3dd98f10aeac4e4355e23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a93454d8fbd260de0319ac6e81e025a82</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a8a0a2263fd7a2c27aaedd9dd2a6519c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a21e4667870ca5d036d4f284407c5bd1c</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3042ae12df27fa37b4371c61e63feb52</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a818e8fae698db20d7cc6e5788891c04c</anchor>
      <arglist>(Cursor cursor)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a312cca5512a261011dab5014574f1af5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a36ccd6ca70e5ae98f6257034d294ba7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ae4053ad9c11e54135c43f2b667aeb859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a42b2613337cec7ea05d3c9f0cb679ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3fc50b2d0632bc6b02fd3c1c350042fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a0527bbfdfdee7bdf24e6860a22ff3dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>acc47a02510ddcc77db551fa51e1479bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a82ece2a2dcb5b292c997a4c2f2a5b5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>ae37e2b91aee383e8a19ce6b507f2a98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a5b4531eae4eaa76257809b229d0aea4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>acdfc86cb6fbbc48686a8157ae5d164cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a24aeff45daab0cea72d38fdaf35019aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a574e2e0de96f0fc4a31a4fb5a21e2262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseDragged</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a79496c197ea3f3c35c853eaab18bf432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWheel</name>
      <anchorfile>classWt_1_1WAbstractArea.html</anchorfile>
      <anchor>a3dbe39c26769a63e4bf63020e31e9f22</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemDelegate</name>
    <filename>classWt_1_1WAbstractItemDelegate.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WAbstractItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a9187627f08a21042eb10443ff7b8d27f</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a1503db9b186ba0f21bde4852f1bcbf8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>update</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>adc95cc43b119f4e8ebeb36a39c015fa4</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelIndex</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>ac5aefa0246f0fed2dcbf9493a98205c5</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>editState</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>aa54d70f669bd6cb7b8f90dca1f2c8c82</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEditState</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>aeb49d13eed388ceed70943b5c6d4cd05</anchor>
      <arglist>(WWidget *widget, const boost::any &amp;value) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a7c8d7a61e57c0478bc3ec6f66f931aad</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;editState) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModelData</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a2b4b7bc9c3782190b5b0f91f0cf83c18</anchor>
      <arglist>(const boost::any &amp;editState, WAbstractItemModel *model, const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WWidget *, bool &gt; &amp;</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>a02e957cf6c1f1e9a98c6de7dbe33ff07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Signal&lt; WWidget *, bool &gt; &amp;</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemDelegate.html</anchorfile>
      <anchor>adca0c953fa34ea4c998ec6a22865f05f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemModel</name>
    <filename>classWt_1_1WAbstractItemModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="typedef">
      <type>std::map&lt; int, boost::any &gt;</type>
      <name>DataMap</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a2e3827f2fab4fb171077dcfced9078b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAbstractItemModel</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>aceb39c2027dc4dc464ac5942798e62e6</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abcf7912a95a0a60f8e9b1c37d30b8383</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab0709a8f71fd5df882f29bb29fd055f0</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab5e60f81be797c0553a010eff5b9a592</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a6bb2a7e70f816606351be4a23c453a49</anchor>
      <arglist>(int section, Orientation orientation=Horizontal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af26d7dc00f8c1bc15fe3d5d4b64bb371</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ada454d45706ca0c1a0921dedd351c48c</anchor>
      <arglist>(const WModelIndex &amp;index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a9112b74d160f916ef75fb6c1c09dd8fe</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DataMap</type>
      <name>itemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a74055362d502d80375c6599f6f8ea1cf</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a86bbab7c809fce4de9b5cb543b2fb124</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a83f37bf04b8574b328c139b02523b8cb</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndexList</type>
      <name>match</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a3da35dbccda1599067d1358458f2d48c</anchor>
      <arglist>(const WModelIndex &amp;start, int role, const boost::any &amp;value, int hits=-1, WFlags&lt; MatchFlag &gt; flags=WFlags&lt; MatchFlag &gt;(MatchStartsWith|MatchWrap)) const </arglist>
    </member>
    <member kind="function">
      <type>boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a0301a303654b113f7f11686dff277228</anchor>
      <arglist>(int row, int column, int role=DisplayRole, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af8453f8f06427e598a35000723c5b86c</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1eded9eb68b9247ae2ff371f74a5e5f2</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>abcafc38dc24fd9edf70eafe834ca411d</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a27428d1a02830336ec9db69c6d0b0762</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a29cf3003ee8f97b2b5de9c52af27361a</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a70856db8c322be8c7f397a932165a943</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setItemData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac60d1042bf1bcea9c262d3de30c520fd</anchor>
      <arglist>(const WModelIndex &amp;index, const DataMap &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a57f5d417f933440db0d38ece7dd370f4</anchor>
      <arglist>(int section, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>afad1dffa150e21c73f71802d9784279f</anchor>
      <arglist>(int section, const boost::any &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a133931424d4daa8422bcdea911cda713</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>expandColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ad7da483e201a6a0d717438049ce1f1d1</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>collapseColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>accd1f651c0b01ae897a52b9ad4b0f553</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>toRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a5c4db8b3265c914f77efead35450f6dc</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>fromRawIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a85beaaea2e8609556543019618fd2a89</anchor>
      <arglist>(void *rawIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a4c62d2cc18d133d7926a91b4f2eebe62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>acceptDropMimeTypes</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a9e92a29b30e3d4de1f6df9f505e952c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af9142a0328922a1b6872f0186164b066</anchor>
      <arglist>(const WDropEvent &amp;e, DropAction action, int row, int column, const WModelIndex &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ad0e634e9fb1276703e41438e8aa50cca</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>af4a389e8544fc887a24099c506c8bd7b</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a7b46c63a32eb9ca9838a1a7cd5853552</anchor>
      <arglist>(int column, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ada64c5f4d4eba6cecab2c1e443372cb3</anchor>
      <arglist>(int row, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>adf3aee29503da7f4a78bafeb96956195</anchor>
      <arglist>(int row, int column, const boost::any &amp;value, int role=EditRole, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a750a7bcd42edf3475de6dc5bf7f1ef03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab7c59263c680974b9b226cacb612b107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac56221d07f5ef246f10dccc93756cb3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>columnsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a2aecbfc4363903aed6d3ce4d176c82d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsAboutToBeInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a8c0a94560a23519cac3e7cfb983af525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsAboutToBeRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a530ab7bb31240fafe0a3c88c9f4efc4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsInserted</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a54c971088bb9b424f97fe31c17f8f12f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, int, int &gt; &amp;</type>
      <name>rowsRemoved</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a0f73bbfb08f2739ac12881f62a61bc7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; WModelIndex, WModelIndex &gt; &amp;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>aa074e5bc55394252a609ef17d071b563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal&lt; Orientation, int, int &gt; &amp;</type>
      <name>headerDataChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ade8f3edbd36f170c6e1199222802de0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>layoutAboutToBeChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ab377ac2fcb9de9d191bd1353665d1389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>layoutChanged</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>afe7cb1d5186881f83aa8f0e452aaef66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Signal &amp;</type>
      <name>modelReset</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ae28a4ba2ce1dd93e7479dfa152a65efc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ae5ef6b96132d87e8310dcb22deedcd48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ac837a73fe423255035ffb076946de122</anchor>
      <arglist>(int row, int column, void *ptr) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createIndex</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a3202723691a65252add937768c326361</anchor>
      <arglist>(int row, int column,::uint64_t id) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a1b0c2b404763032e48637a2a3615b2b6</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a91e52898a805996aee496877cd090eb4</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a8dbef6f3633812d2df7289cb7cfb192b</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beginRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a5286cc70219c8d8d720abc255b0183f5</anchor>
      <arglist>(const WModelIndex &amp;parent, int first, int last)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a2422779ff8af9d19c6bfd3e169c84422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endInsertRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>ace03c0bc5b0b57b6add882aaf444b62f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveColumns</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>a840b32221ade669cb4e987f86203d1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>endRemoveRows</name>
      <anchorfile>classWt_1_1WAbstractItemModel.html</anchorfile>
      <anchor>afceaf639f2a5088f45c00f03d550f262</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractItemView</name>
    <filename>classWt_1_1WAbstractItemView.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>EditTrigger</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac87a6b323815ff48d7f85c84e465515e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoEditTrigger</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac87a6b323815ff48d7f85c84e465515eae85d0887bc1c584abba0e93affcaded7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac87a6b323815ff48d7f85c84e465515ea2d2935d52b141dd975e6f027605fd7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoubleClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac87a6b323815ff48d7f85c84e465515ea10e41f136319c7435b1f11c09ecae20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SelectedClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac87a6b323815ff48d7f85c84e465515ea0d25ca40e97882c6a48be5a35453f428</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>EditOption</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6fe37e13c7dc680f4cb609155d00d3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleEditor</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6fe37e13c7dc680f4cb609155d00d3f8ad77e21c49cf9401fb62b42eab735825c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MultipleEditors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6fe37e13c7dc680f4cb609155d00d3f8a2c5935ac68521a8105d10db49f777d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SaveWhenClosed</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6fe37e13c7dc680f4cb609155d00d3f8a1253248853319ea8f6811b2fbd5712f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeaveEditorsOpen</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6fe37e13c7dc680f4cb609155d00d3f8a672f0ea9e8cb648af5b0a502c2eb1c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ab6a137595a1c6ddb9406d328a3cbf261</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>abd583faed8e2fc3936d1b5545c4bbf84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIndex</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3f8ecef3dac343faa00efc801e4e4c1f</anchor>
      <arglist>(const WModelIndex &amp;rootIndex)</arglist>
    </member>
    <member kind="function">
      <type>const WModelIndex &amp;</type>
      <name>rootIndex</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a436c8406d9f7c925516873b25d2499aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2954ce5999e6ca683fef576777973496</anchor>
      <arglist>(WAbstractItemDelegate *delegate)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemDelegate *</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1aa47fbbe30066c5891b4dc2362b9278</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDelegateForColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a574bc36ec752012ba4a613e0e11e064e</anchor>
      <arglist>(int column, WAbstractItemDelegate *delegate)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemDelegate *</type>
      <name>itemDelegateForColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a8d3d37b13cc684248e06700c40dd7672</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemDelegate *</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aca7a64338eb788e4f25b8098c546d4c7</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemDelegate *</type>
      <name>itemDelegate</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a410dd5f165b86719e0541ab21f2602f6</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aafd2a6edd366b620c71d9b3a89ed6590</anchor>
      <arglist>(int column, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae0a47295b90d60ee4415b5d3e49b30e7</anchor>
      <arglist>(int column, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>columnAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2cc9fc6b51516ca55cb2fc8ac4849fc7</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>headerAlignment</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aed0c9ffbd4d94847fe9b18e40499e02d</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9d22f8c92ddf7259f32496f55d9d50ec</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>alternatingRowColors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af22bebcd2d22cee6e522ea8ca35ea251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortByColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af782069e7307d3a4ce2395336f338c4e</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac150b261da45861496ac193d739c632c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SortOrder</type>
      <name>sortOrder</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a8053406e21d5004a362c6a44c804fb48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae1c86a0f37f97f63aed3b00fd8ffad7c</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a62b873ab83a8ab64dd873c368daad387</anchor>
      <arglist>(int column, bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3a99c2e2b3fc0a903013e071850d7c0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSortingEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae105934bf906ce198e2487c02cdf5e06</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a4fe24c3ed80cc59f6bed2ed7795bc127</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnResizeEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6342821d3d30d84fe2af6129278801c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad59b47cf9a1c5a65c5adc3e1900ceb5c</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aef2ea7e1f47b2305acb0193338f15f3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af6fcd9761e2f7a3b497d3563c849d320</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a55fa51c47216026d7bef4ab5a8c1e963</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WItemSelectionModel *</type>
      <name>selectionModel</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9df52fd9b921355e85e21d93731e2216</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a67c4b49e04db1f19a7788c4580dfc25b</anchor>
      <arglist>(const WModelIndexSet &amp;indexes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a4423d5412ff1b4bc67f0a8f443f12136</anchor>
      <arglist>(const WModelIndex &amp;index, SelectionFlag option=Select)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a413bb7cc395201066236bbe69df38b0d</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>afde08bb75862592d81dc93f30ed7dcd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0ca99b835708d990b90000917045738e</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDropsEnabled</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a1eda46c8e9a21af7f6281e7096af8fbe</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a7ffe86a3f0b58272125abc2a20b997ad</anchor>
      <arglist>(const WLength &amp;rowHeight)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>rowHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a7c17d90017faeae88ad2674242e95082</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>aa80794ca5438e2b9971e8f85919353fd</anchor>
      <arglist>(int column, const WLength &amp;width)=0</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a123471a17688391890ddc4e6f34c9a51</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a120156dc59eaf3608916b679d937c5b8</anchor>
      <arglist>(int column, bool hide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidden</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac7cd89d9f08ab3fa6493cae2b9f596fc</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>af3755e7f96e969dc608c6cfd3325c09e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showColumn</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2cbbe932d872baf103d88c6186e9b52a</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setColumnBorder</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a6b58e9040dfbe9547cb737c7d5e71e0f</anchor>
      <arglist>(const WColor &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a5a530ce3f51a1e674360b1c106fcf261</anchor>
      <arglist>(const WLength &amp;height, bool multiLine=false)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>headerHeight</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ab1019ff4cbcd9a22d5c52203c300decb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a370beb06a2e6c82659756ba63a516b14</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a2cc5d8f54c95a4d8d45c86ea85b428e9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a66b3bd22b9d57d9c466280a2f96b44c3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a71585006c31128c3d606cc976b865008</anchor>
      <arglist>(int page)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditTriggers</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a93d2efc8642a6b9c55b35b7665a13da5</anchor>
      <arglist>(WFlags&lt; EditTrigger &gt; editTriggers)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditTrigger &gt;</type>
      <name>editTriggers</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a82321e1e09c6501515ec060364ed827c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditOptions</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a9a5506e031a514696c4050ccc1521b6c</anchor>
      <arglist>(WFlags&lt; EditOption &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; EditOption &gt;</type>
      <name>editOptions</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a82654b2aace8d7f51a9b5e30959fd266</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edit</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0793bef9c9d7d3d3b0b3f6d2585d5647</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeEditor</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a51c80c5c2d505c987047a489c960205b</anchor>
      <arglist>(const WModelIndex &amp;index, bool saveData=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeEditors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a81aaaff9476d331f82c7875c0b46d6a4</anchor>
      <arglist>(bool saveData=true)</arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validateEditor</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ac06d7149118646c1bbcccabadac6b053</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validateEditors</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>abbdd09d433c24e093e6f6fb6cc7b7f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditing</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a809cc4bfab04b111f3c0dad20a7337b0</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad3c112f8f8a1ea7c8eed724653ac5dec</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3b72d5f8e5b0afdea83e224354d3e91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a14ac099f58621d66834aa5674ea8ecb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a633d617978adc32d93c427c9f27000db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex, WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a0231396a3e026781c600645c24fff616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ada37ffbe2d470dd227c8714645f150f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>pageChanged</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a419257bb553d44423d4d4d5325d61ec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WLength &gt; &amp;</type>
      <name>columnResized</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ad5ca828bca252012794ae85f580e96d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractItemView</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a3f3d88762036fe2e9e2b2d2fba97b73d</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>ae80a4371f19e9c0c14f1cc961da17b87</anchor>
      <arglist>(const WDropEvent &amp;event, const WModelIndex &amp;target)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createExtraHeaderWidget</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a7c939b13f4d2f8da77abe4345be41737</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>extraHeaderWidget</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a5ec3d106602a4364caf924756a504df2</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createPageNavigationBar</name>
      <anchorfile>classWt_1_1WAbstractItemView.html</anchorfile>
      <anchor>a22303f489d5081d70b5bb8e8ff059948</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractListModel</name>
    <filename>classWt_1_1WAbstractListModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>ac74d8359ff0806b4efe10ec34c8e1d4a</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAbstractListModel</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>a1476c92cf08ce4548a08858f45007746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>ab5d047d66626660447a76f17109aef2e</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>a256e0cbdd9e62e1eef61063bd350d492</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAbstractListModel.html</anchorfile>
      <anchor>ac1067d3ba070038275690deb2e9a40f4</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractProxyModel</name>
    <filename>classWt_1_1WAbstractProxyModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <class kind="struct">Wt::WAbstractProxyModel::BaseItem</class>
    <member kind="function">
      <type></type>
      <name>WAbstractProxyModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ab59d85e0a005539ead29d3b5e730807c</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a856d190cc66edcf05462e2476f43b01d</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>ac36b0ee3110073578da8b999d1882bf7</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a2e21723dd84569f7e42f118efd7eecce</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>sourceModel</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a553fbfaa929ade5275a57186eaf7f2bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; WModelIndex, BaseItem * &gt;</type>
      <name>ItemMap</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a272b9667c732a6d2e11e1b6d5d211697</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WModelIndex</type>
      <name>createSourceIndex</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a0144ccc35308b2c0fd6a8b018bd6a3e7</anchor>
      <arglist>(int row, int column, void *ptr) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shiftModelIndexes</name>
      <anchorfile>classWt_1_1WAbstractProxyModel.html</anchorfile>
      <anchor>a61c68b0635320c41b78290d10523105a</anchor>
      <arglist>(const WModelIndex &amp;sourceParent, int start, int count, ItemMap &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WAbstractProxyModel::BaseItem</name>
    <filename>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</filename>
    <member kind="function">
      <type></type>
      <name>BaseItem</name>
      <anchorfile>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</anchorfile>
      <anchor>aafa7dca61e51d29f3f8d3ae0c89e60a9</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex)</arglist>
    </member>
    <member kind="variable">
      <type>WModelIndex</type>
      <name>sourceIndex_</name>
      <anchorfile>structWt_1_1WAbstractProxyModel_1_1BaseItem.html</anchorfile>
      <anchor>a135d8a4d32a468703e29bf60cbdcadfd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractTableModel</name>
    <filename>classWt_1_1WAbstractTableModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WAbstractTableModel</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a551379320897d45f339a981819a401c6</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WAbstractTableModel</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a64cd2524d094f0f47222c40ccf1c4adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a44b9b329d82283646deeae136d83f656</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAbstractTableModel.html</anchorfile>
      <anchor>a4f025afd9303676b1789dd336dfcbe7c</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAbstractToggleButton</name>
    <filename>classWt_1_1WAbstractToggleButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a24f8ea0ae98c36503202140f24d23a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a7a75e3b2585124eefdea57c9bf9a7696</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a3ef9682b5fe66d802380ccd6c698725d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>abd40ce7a6c4b4e924c9097015f4971ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a6838c9a37f3e9e3c466e9f48bde55e62</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a2b4ab0746beb381276ff7fcf0bde93c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ab772a43209d2b042f5ac74ae078f1045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ae80ceb3226d548d66a58bb26d258ec79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>ae203379ba84c01935f68cd293f2a3eeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a8dafae860bd28e00e707d567d124ea4e</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WAbstractToggleButton</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a0d8e9ead61c0ab655f472a240bef86f5</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WAbstractToggleButton.html</anchorfile>
      <anchor>a7f686a8fc96dbecac79b58271c7dbb00</anchor>
      <arglist>(Method method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAccordionLayout</name>
    <filename>classWt_1_1WAccordionLayout.html</filename>
    <base>Wt::WDefaultLayout</base>
    <member kind="function">
      <type></type>
      <name>WAccordionLayout</name>
      <anchorfile>classWt_1_1WAccordionLayout.html</anchorfile>
      <anchor>a876fa763ec385acba2da576138fed13e</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAggregateProxyModel</name>
    <filename>classWt_1_1WAggregateProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WAggregateProxyModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a6c7afd5908bad7f007f30f100b991c78</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAggregateProxyModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>acecfb768c8cd2fbb0ba7c2aeb90418d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAggregate</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>add590f7e0789812c73874ab2bd4161bf</anchor>
      <arglist>(int parentColumn, int firstColumn, int lastColumn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>abd53119f51f426bbf3e332227a7c140f</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a219cfab137c4e6b5fcdcfdaa00f2c652</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>adcd5632ba87b439d87b2470bf028cf28</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>expandColumn</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>accddd20f3e9110bb7a1797ec9ed84085</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>collapseColumn</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a44082771ca19bdcd648e4cb6c4cf08be</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>aafec39e7801f9c4b19d6df601a130445</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>abef979ff954c636e6a2b5b3d429a06a0</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; HeaderFlag &gt;</type>
      <name>headerFlags</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>aad873c5eeb40d473bb7127cfc2022658</anchor>
      <arglist>(int section, Orientation orientation=Horizontal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>ae70467185337c5ef4fd1a14a2f1397f8</anchor>
      <arglist>(int section, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>accb1c7428e090aa881a30eefa15141c1</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>abe70985414fe0634927f72dbfb8f5341</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>a7733a1eacce2d55230776d6b472cf14c</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WAggregateProxyModel.html</anchorfile>
      <anchor>aa5fc80d856911d48ed0bd2efd5c376e2</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WAnchor</name>
    <filename>classWt_1_1WAnchor.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a0416606719711d768ba21ceacc5bf496</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ac2187f2f49e6f25f1d537203558432f2</anchor>
      <arglist>(const std::string &amp;url, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a667242ca0bbb3690a434ba9ffbb5b5e9</anchor>
      <arglist>(WResource *resource, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a7a1283860b03fa23e4b777971e9b8f00</anchor>
      <arglist>(const std::string &amp;url, const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a1fabbd73453d9462e0fd20a9d4161bf9</anchor>
      <arglist>(WResource *resource, const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ab816a891dde296d19fe7a8a2351597e2</anchor>
      <arglist>(const std::string &amp;ref, WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WAnchor</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a94e54cb64ea12090170f526fd8d6ae55</anchor>
      <arglist>(WResource *resource, WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRef</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>acf0206a2ac91ea67d68ba10e3a951ba3</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefInternalPath</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ae3ea26646f135bf133871564f5d6798d</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>ref</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ac188644d6b10201ea99714f073c5b20f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>af4b130e223525c4b6084eb2fb8797738</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ae95cf2ea27a8b04e74334e0e78e46bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a8379cfef23023ac070d2b7dcedacdac8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>aa29b29327d79b2e15ac74904e8b79cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>abe96ca40734d6af4a901d5fb2a9c8c59</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>af31ca59038f6b696b90c79fc1232ea64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>ad9fc10558d724684b1fd9314aa5ea8e7</anchor>
      <arglist>(WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a144d76630a616ea8fb7b268240c6f7ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a169c32b60dcb5d4511a3cbdd4979c941</anchor>
      <arglist>(AnchorTarget target)</arglist>
    </member>
    <member kind="function">
      <type>AnchorTarget</type>
      <name>target</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a75c557c92118cf0cdaaad437f8d91ad5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WAnchor.html</anchorfile>
      <anchor>a188c6f7fa64408e9214c08292974834d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication</name>
    <filename>classWt_1_1WApplication.html</filename>
    <base>Wt::WObject</base>
    <class kind="class">Wt::WApplication::UpdateLock</class>
    <member kind="enumeration">
      <name>AjaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a102e3adfb4eb058288861c06dfd6a12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XMLHttpRequest</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a102e3adfb4eb058288861c06dfd6a12aa9dc5b270e2b5c180556fb688cd8f06c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DynamicScriptTag</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a102e3adfb4eb058288861c06dfd6a12aa66ad42375422870da68e3666a1712d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Wt::ApplicationCreator</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a28b5dd3d1272f46fbacbfb21a0846d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae29a843f4d50159b17abfa9503c389db</anchor>
      <arglist>(const WEnvironment &amp;environment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WApplication</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad0d9408ddc0fda917235d8416da3777f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WEnvironment &amp;</type>
      <name>environment</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a19f3b913f4bc2f69761d9a3738bf142b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>root</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a17e118a04d962459484a12989a80bc05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a71a3f7da5abb9a76df94fab69ba61670</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a86aefff2a3438fecdfde3e0e7dd6e5da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>closeMessage</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af6e54918b88587438327464c98eecf5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLocalizedStrings *</type>
      <name>localizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abcbace5a9e38947bf036ae86fb3438c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalizedStrings</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1039775b5a73ff2efc34a482ebd112a8</anchor>
      <arglist>(WLocalizedStrings *stringResolver)</arglist>
    </member>
    <member kind="function">
      <type>WMessageResourceBundle &amp;</type>
      <name>messageResourceBundle</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5386565e35a58c94ccbbfab48f2212a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5c9cc1350019d69f154a2b44cdaf2596</anchor>
      <arglist>(const std::string &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e782f1f38a6f56e2024aab1a917a80b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a02b9d8aa1b6c2d0dc9edc1b9c63f86dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aba49e1b9e696ac7244f5e2b63ca07de5</anchor>
      <arglist>(WWidget *widget, const std::string &amp;domId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab55c625a3197fec416544be8ad1529af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvents</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a48ceb7972ef7ec0e557adf441f660f2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAjaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af2b590f865a4a6a6b144c45682b4bc1a</anchor>
      <arglist>(AjaxMethod method)</arglist>
    </member>
    <member kind="function">
      <type>AjaxMethod</type>
      <name>ajaxMethod</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a10cd5e55a610b7f6587c881a2c35188c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a42fc7f65116073d4032573f1e42c1173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a10317a8a50dc95db9b27ad54409ab39f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTwoPhaseRenderingThreshold</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a63d991e268c9af8898329217a1242563</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCookie</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0aa2703da36531cf1773d3e756791bf6</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value, int maxAge, const std::string &amp;domain=&quot;&quot;, const std::string &amp;path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>abb9103bc749dac6942649ea693dc9a3d</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;content, const std::string &amp;lang=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaHeader</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a149412d829d104621c445bc10604be53</anchor>
      <arglist>(MetaHeaderType type, const std::string &amp;name, const WString &amp;content, const std::string &amp;lang=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>log</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a75067771ba8fcc56e174f2e741ce278f</anchor>
      <arglist>(const std::string &amp;type) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a080d01aa8e92ae57ef9c9491d33a7fca</anchor>
      <arglist>(WLoadingIndicator *indicator)</arglist>
    </member>
    <member kind="function">
      <type>WLoadingIndicator *</type>
      <name>loadingIndicator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a435c81aaee5f9d0993b329d2541ee21a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quit</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5231d54ed34982f4366058eb6440c8f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuited</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aca61c7262e83de25c276021b26b53074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>maximumRequestSize</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa6a98202fb6d4aa1214ab3dbe7784416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>requestTooLarge</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aef3a8fa2a7825ed7439707d8a90b08aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfirmCloseMessage</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a506978cfb884af4bc6ffd5a5bc8476d6</anchor>
      <arglist>(const WString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6a9a20d65ce9e7c2f62b27387c94e10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>af377d541443b4bcea5fcc40be7c70173</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useStyleSheet</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4a72348400d52ca0cf09b57a24577838</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;condition, const std::string &amp;media=&quot;all&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCssTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa316b2b30a6191085f265974b66e55bb</anchor>
      <arglist>(const std::string &amp;theme)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cssTheme</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0e09381079f67501e38652087232969d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa8fe83406981a556da61a843bb691674</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bodyClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4e87d8f55211eb7f2fcea01ad956ea63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHtmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a28867ea48711f9290de496c2ed42fdbf</anchor>
      <arglist>(const std::string &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>htmlClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1324d7dd9b83e075d78a65ca8cde8c9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a455fe732c1dd087ed507bc5975420828</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>makeAbsoluteUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a1f31a52f8c8e4f250b5515c02bf9ee55</anchor>
      <arglist>(const std::string &amp;url) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a37b4cf44f393688785ed3b34f53fead1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>bookmarkUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac99ee110fd00d89de51e6e90ad166626</anchor>
      <arglist>(const std::string &amp;internalPath) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2c1a10aadc0d7ed877b5715b42ca4911</anchor>
      <arglist>(const std::string &amp;path, bool emitChange=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aab6320ecdd0e8e4026e9ef1aca710ca5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPathNextPart</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a95e6b5e4dc9084d45e166264b10b3c46</anchor>
      <arglist>(const std::string &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathMatches</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aed54bd83339bc80b3cffba9067ab1e39</anchor>
      <arglist>(const std::string &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; std::string &gt; &amp;</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3e68c4b6bb387f27a614e7962e11967b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirect</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4dcbf69c8b09c301577b5b6aa8a4da18</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableUpdates</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ad9631ca64e68d30d40cb49c90e55223d</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updatesEnabled</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a5a8e6970e9123fb1c23aa43711093135</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerUpdate</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a51f50e0641a6d702a7c6ab7f8dd5946a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UpdateLock</type>
      <name>getUpdateLock</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac7582c37defc49b5e8d6ccbda3b68d45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachThread</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a8b03a693a8277b7d5e0775a9b9581803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a2a92457b9212cef4057cb54e56183967</anchor>
      <arglist>(const std::string &amp;javascript, bool afterLoaded=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAutoJavaScript</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a412bcf9c269b097e7c372515e27b88ba</anchor>
      <arglist>(const std::string &amp;javascript)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareJavaScriptFunction</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a3456e2bd2eec561abb90ae19ae42be02</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>require</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ae88546224ed32cade783da188b145138</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;symbol=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>javaScriptClass</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a6e0963307eb9367a3a4a3f4e35ae3abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentDown</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a0a9652fc0d0cbebca7966f98454b078a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a7d8f807eee7191ae6b7f6f7fe2ab2fae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>globalKeyWentUp</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aa2a569eabc35162f4b2a72c36a24cd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEnterPressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a60c1defb57949f6f78c6c1373a18e74e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>globalEscapePressed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ab4d42f698c48bf84fcc807cb597a0509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WApplication *</type>
      <name>instance</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a38d922da0a0d83395519f3eaab85d0f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>resourcesUrl</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac0fa2857a600cc34b3443a04d9ed5c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>appRoot</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a88b082dadadd3fb7dbe10887e7d89c91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readConfigurationProperty</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>ac0f5599ed35eb159fa6912aa0ff3c75c</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>notify</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a4a6f167bea94aefa8ba24f914c2fbee5</anchor>
      <arglist>(const WEvent &amp;e)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isExposed</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a17e25e84fab304664baab5b0c748b802</anchor>
      <arglist>(WWidget *w) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a78016406c4746c56b2c2ffce7c5e181f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unload</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>a9a4048e01b69a536e35f47eb2a59a69b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>WApplication *(*</type>
      <name>ApplicationCreator</name>
      <anchorfile>classWt_1_1WApplication.html</anchorfile>
      <anchor>aaa9f20bdeb8ebcbb3ec5d633b010511f</anchor>
      <arglist>)(const WEnvironment &amp;env)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WApplication::UpdateLock</name>
    <filename>classWt_1_1WApplication_1_1UpdateLock.html</filename>
    <member kind="function">
      <type></type>
      <name>UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a117c05cee4d0e9c825155d0e77ca0c16</anchor>
      <arglist>(WApplication *app)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a3c3b5a14188d11f8023fb8eb88d843a4</anchor>
      <arglist>(const UpdateLock &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a9141ee900b30fd0a6c62f76658024df9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UpdateLock</name>
      <anchorfile>classWt_1_1WApplication_1_1UpdateLock.html</anchorfile>
      <anchor>a7d9898c9d19bd54675c7d178746659c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBatchEditProxyModel</name>
    <filename>classWt_1_1WBatchEditProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WBatchEditProxyModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ae539ae8f225640678caa8d865ef59cc9</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WBatchEditProxyModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a9cc01e5215c752842bb8eaa7c03449f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a0ef68c2ae28426d5cfad4872615b4153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commitAll</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a54c22faab062ba9fed79409f4cacdbe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertAll</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a0ec1198073cb711cce9505c9fe4b3a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewRowData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>acb59a1c7f66ceb7620c6d2dd171517a6</anchor>
      <arglist>(int column, const boost::any &amp;data, int role=DisplayRole)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewRowFlags</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a8dd7cfe1c12f4dc8f61106d63e9fe0e7</anchor>
      <arglist>(int column, WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirtyIndication</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a36e0d17cc682e1e178154b1ba4a2f323</anchor>
      <arglist>(int role, const boost::any &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a8cd40d43e336f2760596fa35659ee6e7</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a2dba9cae628236227a85a5f2852fe3c1</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a367daece652869f3d62efb45883a50a5</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ac1a6ef93b2702200a687e6b4fdc1c831</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>ac1691a899a5fba66cbcfabd518b3348c</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aa8811ff3b1dd5991b2b9db8064e05b0b</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a7f0f0e95b4ba9667e4f06e34a7a5551c</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>afd7a319765dcdeaab299f3b800d15674</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>af192deaa2b48479bdc594d5cc4b4caee</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aae2b4164dd1520000828fde77f4b3801</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a2135855bcc45b5d2826cea48baa56bd0</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a97785c5e723bf08412f229b5aa83f5f2</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aa1d5a9dd393f237a001bc6497b85af66</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a63a4d93bd9cdd8afd53842577b1e1e6c</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>aef5564b6f26a69adbe70db0e5282ca6f</anchor>
      <arglist>(int column, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WBatchEditProxyModel.html</anchorfile>
      <anchor>a4a4a4cba01f2efd30b5af8ae8de7e14c</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::boost_any_traits</name>
    <filename>structWt_1_1boost__any__traits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>asString</name>
      <anchorfile>structWt_1_1boost__any__traits.html</anchorfile>
      <anchor>aa9746e57608889b491fe29a22b0a77e6</anchor>
      <arglist>(const Type &amp;value, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>asNumber</name>
      <anchorfile>structWt_1_1boost__any__traits.html</anchorfile>
      <anchor>ae64c24bc95485379a81410eb025f376e</anchor>
      <arglist>(const Type &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>structWt_1_1boost__any__traits.html</anchorfile>
      <anchor>ad8c7fbf1e2c414828a595eea76d7bf00</anchor>
      <arglist>(const Type &amp;v1, const Type &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorder</name>
    <filename>classWt_1_1WBorder.html</filename>
    <member kind="enumeration">
      <name>Width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a057b146bbbdda832d91909b75aac7474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Thin</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a057b146bbbdda832d91909b75aac7474a3026a5104645b5d86aa903cc6de423c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a057b146bbbdda832d91909b75aac7474ab0f5a6808e8f9e4487651cb99f697210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Thick</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a057b146bbbdda832d91909b75aac7474ab7b099599322af02c9bf7b1dcbfdde2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Explicit</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a057b146bbbdda832d91909b75aac7474ab1b357c35b95138f9ac67426f4e9b00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba5e191ab41e2db89bcd8af7cba37b2c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hidden</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba739de5d3fcfcdd56059478b44dc078c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dotted</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba664ba009c1db9768b880a97a7ad7751b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dashed</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba8acfc02263e192726d4d1983cc9871fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Solid</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba4b4d9319fbd6f910ded24458411eab9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Double</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6baf1b73b785fcaec95aa6e76b137a0cc4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Groove</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba5289417986aa8f9be7780ec6499a4a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ridge</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba4406fe085c60b80c760f207c30ebd33a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inset</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba68163490fc47f2fe1ab6712c2ac133ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outset</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a298e90bd177b66c5cf84c5eaa60eff6ba7861b0b4d708939521f0a6313e90e1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>acc8471953ee905e5bc363184bf37a8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a735182fbb1f2e119de06952bc3460660</anchor>
      <arglist>(Style style, Width=Medium, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorder</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a81c4210c470038ffacd8ceff211f0ff1</anchor>
      <arglist>(Style style, const WLength &amp;width, WColor color=WColor())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a8f40f4e2ec2371a5c7e3452f3ab3ecae</anchor>
      <arglist>(const WBorder &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a791d126be2248fb6915051252a420e6b</anchor>
      <arglist>(const WBorder &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a9758f4ae235447c98a1b1c13814f7df6</anchor>
      <arglist>(Width width, const WLength &amp;explicitWidth=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a8336b810e01de7acc051644c75a74ac0</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>ad02585c81144d4af539dfe123f0e2efb</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Width</type>
      <name>width</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a599c605367bae4e63e99890130d066b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>explicitWidth</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a68f59399c4cb2a384ee2c8952b872a33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>a117d64f8d50d5a9fb90cdc52ec1edc9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Style</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>af566f4e98887008cfb23f3c5d2115814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cssText</name>
      <anchorfile>classWt_1_1WBorder.html</anchorfile>
      <anchor>adef6a404d7ba30d801903a4e5d2413c7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBorderLayout</name>
    <filename>classWt_1_1WBorderLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="enumeration">
      <name>Position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>North</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0eaf2e38a6995be9664803dbb76be808cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>East</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0ea8a84892f4ad01b663668150ea5a1a120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>South</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0ea22e18e93ad91e56d4d58a74593212257</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>West</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0ea083d8ef2c7e8cea026f902dca9b519cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Center</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a342b3134ad39ee14d6129c4dc35e0f0ea6f0ad0bd2eb8d3c4f86ecd568e33ebe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>acbf879399f66c7d82695b0e6bee881ec</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WBorderLayout</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a0dedcf9a1a5ed39adee1efad66ca27ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a353057bcf43bd82c579db80f3e38cee4</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a63dccee7ef6351a40535df377722f081</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a5f9a17668850dfbd4566b4351334ab48</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a1d6703aaefe8924d71ad48dbd4b7dcab</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>acd496ae37d97427d2234fb3147a2f500</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a1a29297adea327f48c1235022125f069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>af7667b3d486dc649a7ed0c56f8c06206</anchor>
      <arglist>(WWidget *widget, Position position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>afbf14676206fad724c6eb725d4650842</anchor>
      <arglist>(WLayoutItem *item, Position position)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widgetAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>aac75ab996385ab95fa5c774a12eb68a5</anchor>
      <arglist>(Position position) const </arglist>
    </member>
    <member kind="function">
      <type>WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>ab241699474232f2562a5f2b5c4474879</anchor>
      <arglist>(Position position) const </arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>position</name>
      <anchorfile>classWt_1_1WBorderLayout.html</anchorfile>
      <anchor>a322f2277abc4904bd92b4016bb5e27b8</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBoxLayout</name>
    <filename>classWt_1_1WBoxLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="enumeration">
      <name>Direction</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>addc4cd1f8b1158dcf16eb10d429803ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeftToRight</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>addc4cd1f8b1158dcf16eb10d429803eca174fcc4fd0b807e60c838385be19e1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RightToLeft</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>addc4cd1f8b1158dcf16eb10d429803ecaa4a4afece8c59ddaf384c08b276aa70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopToBottom</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>addc4cd1f8b1158dcf16eb10d429803ecaf705eddcc1a4639aeb1908f1c7acface</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BottomToTop</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>addc4cd1f8b1158dcf16eb10d429803ecaf25be1e7bbefae032ceb333e67bda5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBoxLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a9472dd446911a6a6d33b019a34a0c4fc</anchor>
      <arglist>(Direction dir, WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a2932a804ac01e0b314408bf4d366385d</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>aa01f05c0f40fa89e418b802f78f2870c</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>aad2ec4be48cb11a7802b3e6d7cb8f0fd</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a961fe311fd07adbf7b60b571ef7a8278</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af669ef9fbcdb8954d1cfa7bb9e47b90f</anchor>
      <arglist>(Direction direction)</arglist>
    </member>
    <member kind="function">
      <type>Direction</type>
      <name>direction</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>aa101f33971e037bed0e4bfea164cf0dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a34d544a1a2bd8beffa6b8e5e84fbc19b</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>spacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>aa9d0d7ef4ea1753f898d6d71ad8e9b22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a7c1ec58e25d0b7add93f5f4342844db6</anchor>
      <arglist>(WWidget *widget, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a062d26b432841995a0be7b7d7aac6413</anchor>
      <arglist>(WLayout *layout, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a3cbd78251252e724d01937e2f6cc803d</anchor>
      <arglist>(const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a811708ce9336d753c20aaedc14b00d5f</anchor>
      <arglist>(int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a9ebc82bb4cc8f0bbb4e272df6ab4c02f</anchor>
      <arglist>(int index, WWidget *widget, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLayout</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a8ab8fd1d8b5f3634eac9b559605e4ced</anchor>
      <arglist>(int index, WLayout *layout, int stretch=0, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a0d5d6a9e408c6bc7e25020f8c85cb4cf</anchor>
      <arglist>(int index, const WLength &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertStretch</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a0174de2ae36e2992b7209cf789d85271</anchor>
      <arglist>(int index, int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a47182ea3c459afdadb3cc03232a8d110</anchor>
      <arglist>(WLayout *layout, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStretchFactor</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>af5ce73d289874c80e88ed6fd9934bb39</anchor>
      <arglist>(WWidget *widget, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResizable</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a00bdfb4d442bd8e8ad9c33b72692763f</anchor>
      <arglist>(int index, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isResizable</name>
      <anchorfile>classWt_1_1WBoxLayout.html</anchorfile>
      <anchor>a07a62537e92ad4ff14305dc2e1e8dd9c</anchor>
      <arglist>(int index) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBreak</name>
    <filename>classWt_1_1WBreak.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WBreak</name>
      <anchorfile>classWt_1_1WBreak.html</anchorfile>
      <anchor>aad7ecf140e87a6dd8f4dc5c8229c3695</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WBrush</name>
    <filename>classWt_1_1WBrush.html</filename>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ab650511b8300044e2c62b209d8b5ada2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ae7725eeec8605983235ba8bb6b05695b</anchor>
      <arglist>(WBrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a1cd32bceb74be7792cf1b89d5df862a6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WBrush</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ac8529901dfbd7804fa10f8ee91c3bf77</anchor>
      <arglist>(GlobalColor color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a77eaae76488f6febfaba2a5b0b94e7bb</anchor>
      <arglist>(const WBrush &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ac3a156efe8eb36d25680e391a9540b71</anchor>
      <arglist>(const WBrush &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>ab52dc087359100109e5db040af72ea9c</anchor>
      <arglist>(WBrushStyle style)</arglist>
    </member>
    <member kind="function">
      <type>WBrushStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a01a01f9b48e940122c6485ddd078fce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>a9b6a446a81d6c3089a2cf37010fc5743</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WBrush.html</anchorfile>
      <anchor>aaf854f81f54f87eab71c0d550e4f6156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <name>WBrushStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaffe43936b1bbb1ca2b308572fcdeb157</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoBrush</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157aa6f513232fadbbcaf8a576b7aaefc67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidPattern</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaffe43936b1bbb1ca2b308572fcdeb157a574469ed16523a26c683e83c8fee3ed6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WButtonGroup</name>
    <filename>classWt_1_1WButtonGroup.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WButtonGroup</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a2e29884c479c910861aa6f023d324210</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WButtonGroup</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a0f1876538ca9400a0afc7e2d2831e7a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>abbe8605c1e57e75316731af9124bacca</anchor>
      <arglist>(WRadioButton *button, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a3a6b317dc22600acd1344de9e6a05987</anchor>
      <arglist>(Ext::RadioButton *button, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ade4ea1cf5ac08b17e0f92153c98204d3</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a9b2c7ea25d0e83d9ae894c2f0ce9bd67</anchor>
      <arglist>(Ext::RadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>WRadioButton *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ad77d4e097182bea774d3d5d34c548145</anchor>
      <arglist>(int id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a3afa1365a54718ace10b42f2e3a345bc</anchor>
      <arglist>(WRadioButton *button) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>abadc2ee3d7c98c6d4f7f0dcf3384d3be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WRadioButton * &gt;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a92ad438da83c631b10b69096a6d3b653</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>aff9a2079d4fffaf4d2aa5c816bd37abf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a00f6285ab6326a6fef8b9ca7c7646948</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckedButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ac67ce8ffc614cb7319efa4657c57f25a</anchor>
      <arglist>(WRadioButton *button)</arglist>
    </member>
    <member kind="function">
      <type>WRadioButton *</type>
      <name>checkedButton</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a92ed2843d2fdf9dfacc9d3e27b5ac994</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a968222f7cba72561b1712c90efc30d46</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectedButtonIndex</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>a44aa1dc058bbfbc698289d56ba0424ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WRadioButton * &gt; &amp;</type>
      <name>checkedChanged</name>
      <anchorfile>classWt_1_1WButtonGroup.html</anchorfile>
      <anchor>ad5661cc6137de244819f47f492b42687</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCalendar</name>
    <filename>classWt_1_1WCalendar.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>HorizontalHeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a1e3120d5177a5f29412f55cd7c65b1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SingleLetterDayNames</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a1e3120d5177a5f29412f55cd7c65b1d4a6738f5146a720e0df6138950213245eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShortDayNames</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a1e3120d5177a5f29412f55cd7c65b1d4a58ae7bf27446ad315f2c18f494ef46ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LongDayNames</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a1e3120d5177a5f29412f55cd7c65b1d4a481f2bc7524b368484f44d0ba6d74e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCalendar</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a62a4817cfb3da910bee0b0c7a27dfd73</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a42e800f304acd0e6ed55258149354b9d</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aa60744e2ecaeda40a2a9b0a401010470</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToPreviousMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a99c57c17f6afab4a0aa3a74ee9b19289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>abe866003ddb73b9fed91f35b7383e8ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseToNextMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a4e77a4335ac8891a4d51441ce0f9e626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>browseTo</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a59949bcc20f604fd96a73aa342157b8d</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentMonth</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a28bf4605a51c67258ee8e9182a1e27a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYear</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a95a1fdb04b8b21bfb473dcf509e5d864</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aff46e84192787483ec4f00c5b1410a8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ab3b72e0e5a76f3e365d94d056465453f</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aa128787a7b96264b5e755712e720f928</anchor>
      <arglist>(const std::set&lt; WDate &gt; &amp;dates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalHeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a3475efa36daca79a4ce976202dd9a1fc</anchor>
      <arglist>(HorizontalHeaderFormat format)</arglist>
    </member>
    <member kind="function">
      <type>HorizontalHeaderFormat</type>
      <name>horizontalHeaderFormat</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>afde4624cf1ff320b547e68691b4d4d46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstDayOfWeek</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a741e177dd86d834956a65343fefd14d0</anchor>
      <arglist>(int dayOfWeek)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; WDate &gt; &amp;</type>
      <name>selection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ade00a32163a903b22bd441179c95d9d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a317d3018608bbeed934e1823969a3a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WDate &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a8675afd38f2b773d0945af207d7639f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WDate &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a51ad8160985f49f5ff0e726df8103921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, int &gt; &amp;</type>
      <name>currentPageChanged</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a5dc6d29c25661c665e0110dd0dcaaca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMultipleSelection</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a075e2a4c5c39f8b6144865cfd0ae07f0</anchor>
      <arglist>(bool multiple)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WDate &gt; &amp;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aab0005ad0c245d06895848a5b12d6050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleClickSelect</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>ad33dba722cbddf4b9feff69d4ca744f2</anchor>
      <arglist>(bool single)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDayOfWeekLength</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>aae58d984894182574f60f17645e3533f</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a5d5237e806862564ba9a8c9f5b8f5272</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>abf97eba163e425c000b8d260bd1285ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a6a45200e082a7178d7060bdb9f960a17</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a6293a873cab2d27413b05c98546d8f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>renderCell</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>a3513147b88fa57ac287ab2546d00dd96</anchor>
      <arglist>(WWidget *widget, const WDate &amp;date)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WCalendar.html</anchorfile>
      <anchor>acea26f984bfced2b060abd119e42d547</anchor>
      <arglist>(const WDate &amp;date) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCanvasPaintDevice</name>
    <filename>classWt_1_1WCanvasPaintDevice.html</filename>
    <base>Wt::WObject</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WCanvasPaintDevice</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a74c2268a9de31d083ca10db9db2d8145</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ae4e57cdf94ce6f26b95650bd6170d540</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a5ce1b5b6b4c2607c0d461c4347e1f373</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a011ff1caec6097d318a05c7153c3440b</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ae10a371dd76345d825fc4d48fc85a4fd</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a79b27f0948676ac4045ecbabf4f9e9c1</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a97b170b6d53540bc2e27e5b91da8bb30</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>abf398b5c8a8ae39af1368c647d58d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>af5d71bb7c6dd867a94ecf5f4b745998d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ac8d01132ac5c9f4c64199f9090198bb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>ac4842f320acd9eaf7b6335e95b41e8d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a7ff7e0a42f773b43f7160f3c7abbee6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a3ab402eb63ef076141bf6e84a7bccffe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>a559e86f20b9da220625db77a829b1fd0</anchor>
      <arglist>(WPainter *painter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WCanvasPaintDevice.html</anchorfile>
      <anchor>afb8ab21be9302f9451aa8438083c6dcb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCheckBox</name>
    <filename>classWt_1_1WCheckBox.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a6277263fb7405d39bd6d6124e56fbb5c</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCheckBox</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a16025c975c9586c89e548875df811c6a</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTristate</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>aaa80606e36bfd34a73f6b58dc6cac926</anchor>
      <arglist>(bool tristate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTristate</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>ae7c6da01de803c9fd88564e3ef2cbf13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckState</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>a293d15f49d36587b55a04216322083d8</anchor>
      <arglist>(CheckState state)</arglist>
    </member>
    <member kind="function">
      <type>CheckState</type>
      <name>checkState</name>
      <anchorfile>classWt_1_1WCheckBox.html</anchorfile>
      <anchor>aeae048fe7066d5c69a5dfa6498231132</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCircleArea</name>
    <filename>classWt_1_1WCircleArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a60514d5a3a2da148a684b0a0b3a5b235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCircleArea</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>ae2d43a04099e8d29a317700570828365</anchor>
      <arglist>(int x, int y, int radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a10932e173eef6c9531c8086324b7ced8</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a604bd32d585d03c2ea509b57f71412f3</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a939c6645039059067b6924466a477c6c</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerX</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a34a758fe81f9f9705e2bd1c9c4d46c41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>centerY</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a044104f691997c0238b3abfb95217ee2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>a69d4391565a8cb7c707d951362fe22bf</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classWt_1_1WCircleArea.html</anchorfile>
      <anchor>afe7fed59edd0636ca23771400a63d7f4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WColor</name>
    <filename>classWt_1_1WColor.html</filename>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a0aca175990842e4be3d944236e27cda3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a5e0102afbdf3ece70a200c1379ad3522</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a00336e4511fb1fd68f3c66d58c30a4c1</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WColor</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a12eeb92c9177d1033e2dbd72e799ddcc</anchor>
      <arglist>(GlobalColor name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRgb</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ab3e459365133f983d702a310dd600772</anchor>
      <arglist>(int red, int green, int blue, int alpha=255)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>aea520f8d33c730809176bd555463e33a</anchor>
      <arglist>(const WString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a1aa64740fc2dcfd7b30dfddfe2de8000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>red</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a1f176a8557b9ebe2a9260b49acae3c3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>green</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ac4fa50432b68fd0f1134e80cda0754c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blue</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a1126ef11c5211e2b0ec29020ea930f36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>alpha</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a7fe483df7025fbb2bcb13764bffd9fd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a4812291da745a35b8e505848c27bedcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>ad26120c40c96c29c58a22cae5a92d0a5</anchor>
      <arglist>(const WColor &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WColor.html</anchorfile>
      <anchor>a9e457a4ece07294a1eb16fc6dbc22d95</anchor>
      <arglist>(const WColor &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCombinedLocalizedStrings</name>
    <filename>classWt_1_1WCombinedLocalizedStrings.html</filename>
    <base>Wt::WLocalizedStrings</base>
    <member kind="function">
      <type></type>
      <name>WCombinedLocalizedStrings</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a0e421a2f2ff41d7c1e52584db1088b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>a57d46941001a9840c0c37343de705c7a</anchor>
      <arglist>(WLocalizedStrings *stringResolver)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WLocalizedStrings * &gt; &amp;</type>
      <name>items</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>aa590712551f20519174bf24e4fd2aee3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>aad27735fdadc6e0deb52f55e8ca77d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>abf4a64defdd472751aab40d561dddd1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WCombinedLocalizedStrings.html</anchorfile>
      <anchor>acbe64134b2d1c13abf98ed8b1b039f00</anchor>
      <arglist>(const std::string &amp;key, std::string &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WComboBox</name>
    <filename>classWt_1_1WComboBox.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WComboBox</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a0403b5ef9b90f4868a3177245f0bbb62</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a9b2308a7d962ceb17c1ee32627b106d4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a58fff2a9bd76213f107cbc776e15112e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a94b6a87121adab0abbf23562d35a716e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a2092c15c7c0c2f77342d0abdc393ca6b</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a95db6ec7468a1eabbf95f7eba3012a54</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a903e2d98c6860fe09198bdb43f0566bd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a8eafbaa6e87ca46a411b904b78b12db6</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>currentText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>aec0856e1bacf24fded9621054a0c357c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>itemText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>af787aa7aa37e2ce2eddb499c15db52a4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a3d10438b053fe43dcd05e66b7ca78826</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a5d33b665d2fa12b349fa2783ba4d2033</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a20b54b2271b0219c2375775538d454a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findText</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a98d44c32191d2cc80be14da1bf6acb3a</anchor>
      <arglist>(const WString &amp;text, WFlags&lt; MatchFlag &gt; flags=MatchExactly|MatchCaseSensitive)</arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a36ca680db19aac3ac847a422bb821b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>aea94ab9c31cd5030906d73a8134e6e00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a0ed207e9616b51089d97030cc767409d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>ac39b46ccd8134a5397b4cbd87dc9f01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>sactivated</name>
      <anchorfile>classWt_1_1WComboBox.html</anchorfile>
      <anchor>a06401499734540c65db26fceb60bfdbf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCompositeWidget</name>
    <filename>classWt_1_1WCompositeWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WCompositeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a43fc53dd07a7568cb153822c439c4c65</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCompositeWidget</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a202b654d8150d61358a8dd284636abb4</anchor>
      <arglist>(WWidget *implementation, WContainerWidget *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a0557ba9778c04c33eab0be399cc84c02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a332ea77de7e6adb5b0ac25cc1b417ef8</anchor>
      <arglist>(PositionScheme scheme)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae7e478fe175f9af64e0de726494bbab6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ade05ff99765584997aaa4e1d94522f49</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a55d5b1a5d852863ed29dbea622e67efc</anchor>
      <arglist>(Side s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a976e94e38c7a9cc0f212e13a9792912e</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3358bb9a93e5c7999c4f6d39d9880c8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ab20c559ba960c80be16572293df7fd96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>acf95c795e47eee85425c98509aa8e57a</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ab14d3fa5b63d36c1df1148f49b62e92a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a3289852d4a8a268fc8ee2c4c474bce15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a7ba5622622b118e72b9a407d10df7ece</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a24acfbaf36c581e0d1bd07d2c477decb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2b37e2f64cd18ec77b0fdcd5e2adf791</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a37135f5af75e17fa920d73aee823b3e8</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2132b8941b1f5d7febfea902f9625d39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aafed7408935752c6b0c8195ac49f2e9c</anchor>
      <arglist>(Side s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a26b73581331aebc3f50036442aa5e107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a08b3487d9af9606fc3c6243adb7bf7ff</anchor>
      <arglist>(WFlags&lt; Side &gt; sides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>abcd53cd6a4b27ef01576ea2525fd6a92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>addf49ace29b76331067c86bc4ae6ac38</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a06555482bd1410ce970165c71a8e22e8</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a870eeab54f7591c7a1ec9da90561f326</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae2f77711839f8dfe9dcc378ced66099b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aff347ab5d4d5cdbfb0a07aad1636f2d5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ac22140fb020018e0d855ad524c6effff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a1ae4501ce5807c22b71532d9fd564337</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>abca811e17066c225404419d0ee5249a1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a9f814b5ca1939d1e43a4f4c8b00bfbf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a8dd8bb72da33fd11072acb25ed585c2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a247b586fcafc027db2ba6f1ffa37dc0b</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a6b2ad79236863c701e08553146987045</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aed7eec7b9a562b84fdb97f68f37ce694</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa82c263fd93dda5dd21baa74b979441f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>abf72fb5ef4b107be2d986ba144047372</anchor>
      <arglist>(const WCssDecorationStyle &amp;style)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ad1eb3d24f374cb311ef88e43b3036503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>af9a8abf4e8b5be186a31cd951e60bdc6</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>add2437d41d367251cbfa98fa18dedba8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a8726dac662b5dc9c14bed0c6c182895d</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ada75b0a78ebad024ddd3ed2226b5e53f</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>af548a47d09382c9413a688c0eb65df14</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength::Auto)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a078108fab89c90dc540bc7bbd47a85f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a9f45784318e94541bb490979d418a968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa18741866255b277604b97a04730b86b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a5230e4ddc72e1fca9046e4f1166d34a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2c7709c1b62475863600551a10728ef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a874b7a77d0785623f5059ad4dfe93266</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ae4917baf01b575063686110c54726773</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ad0263a7415b2219566a193ff4b9fe10b</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a138b2c77df870d0c294416a44bcf99f9</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a1e46b28cb1c06e7ffe2acf0eac474fe2</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>adab4431e472ee5398e6c97420003ffdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a23066e3ab76634bef5ed39396603f56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a10b26fff7188b259669700c676031f82</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a07ba1eb6802336dbd060fdba935d2730</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ac348ec52af6565bf37c6d52b7bae2ef2</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a7afbf99afdb3fca030b01ac0b958f42d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a1cf4a59e433df7c28e7917a5e03fdac1</anchor>
      <arglist>(bool selectable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>ac19a8fef93bf9540d3ab42797186aa90</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a90e07c1bb6c48732ed4b5d98f91cfda0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setImplementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aa5a3e93a551fd41b180c6b28fa169946</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>implementation</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a8fe3e478986808ff0ddbcbbddcd66072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>a2f8fa4fb1ac7bd056ad9801f9b4cbd6c</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WCompositeWidget.html</anchorfile>
      <anchor>aba02aeb3e18700f8e530021b0131b5ef</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WContainerWidget</name>
    <filename>classWt_1_1WContainerWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="enumeration">
      <name>Overflow</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcc1911965f1669b94bd3f8fbf86a2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowVisible</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcc1911965f1669b94bd3f8fbf86a2d6aa195ca15f69167c8f3087e5bc3e24f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowAuto</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcc1911965f1669b94bd3f8fbf86a2d6ac8fcc7d215f329753187326459cf5856</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowHidden</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcc1911965f1669b94bd3f8fbf86a2d6ac5ba5a20547ae53b1caef3f05d0c3241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverflowScroll</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcc1911965f1669b94bd3f8fbf86a2d6a3c51faeacd0f1d2c6fa287f5e9932be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a520ba6e52a36a7f2efbef1a31a69e898</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WContainerWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>abcdb141e27e673f10c8e0e693307bf94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a1c84e0ffe330d4798f0ce217f75be08c</anchor>
      <arglist>(WLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>aff9884c8efdf90974077e96bcb1701db</anchor>
      <arglist>(WLayout *layout, WFlags&lt; AlignmentFlag &gt; alignment)</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>afaba82a27836f4a82bab48e8b26ccca2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a2cfe66d9b62940f889e99538a9f478d2</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a1439877a32c4b082f312fee81d139665</anchor>
      <arglist>(WWidget *widget, WWidget *before)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a15ffcecaf10e6f04ec5667d2b3f0d919</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a4292867b1872bd31c7d0c3346d988470</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a608f748cbdda763f1a11556ddad9fbe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a7cf9f4f1c261080bce30b6a6ea19014e</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a53c79a7311ffe3c132b50bdbb830856d</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a85abd4d928575717052ff7fa04c3c2c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>aba13c9e62c74bcba53519ee9cf41f40a</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; contentAlignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>afa5f6800e2170ae2f4586a25c72f8c34</anchor>
      <arglist>(const WLength &amp;padding, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>padding</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a326a0c9d7e4307dfd9c6979a2c441a96</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AlignmentFlag &gt;</type>
      <name>contentAlignment</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a042dbe790f34279f1978bc87610933df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverflow</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ae269f870992c5843d3097a63795b10d6</anchor>
      <arglist>(Overflow overflow, WFlags&lt; Orientation &gt; orientation=(Horizontal|Vertical))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a4b1857ba8e8a677887cd20aa657fb77f</anchor>
      <arglist>(bool list, bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a2ba1ccbc634a57f21608c410d28bbff5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUnorderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>ae0db17987ae260b71d860b8f670c0c8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrderedList</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>af7c9ba23a66d27cb7442557284464f3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WScrollEvent &gt; &amp;</type>
      <name>scrolled</name>
      <anchorfile>classWt_1_1WContainerWidget.html</anchorfile>
      <anchor>a64b97ae076fc6d678305fcdf77738a31</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssDecorationStyle</name>
    <filename>classWt_1_1WCssDecorationStyle.html</filename>
    <member kind="enumeration">
      <name>Repeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a6110934e7bf757aa4b2235137027b23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatXY</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a6110934e7bf757aa4b2235137027b23aaabbf4cda2d8db7c076a1fcc15d5519b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatX</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a6110934e7bf757aa4b2235137027b23aaabb992f24c718545ae57cd5ee111bdb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RepeatY</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a6110934e7bf757aa4b2235137027b23aa0aeb307a9966be9867e8cfb44dadeff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoRepeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a6110934e7bf757aa4b2235137027b23aa40aeeeb48d51ff0c73eb495791a1fece</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TextDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2028d60151aa68cca6d0d41b446b47bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Underline</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2028d60151aa68cca6d0d41b446b47bca72c16a3d5fcc40f2c354840200f66b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Overline</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2028d60151aa68cca6d0d41b446b47bca5793fed852e0810c308563a99869ce26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineThrough</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2028d60151aa68cca6d0d41b446b47bcace9662dc82350134b5b840665f98ac2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Blink</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2028d60151aa68cca6d0d41b446b47bca7791a60b982e799bb595b3a8970634f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCssDecorationStyle</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ab7eebc38d1b857016e2b4e521edda0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssDecorationStyle &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a7076ca4b870ba4c59c83cb8326af6e37</anchor>
      <arglist>(const WCssDecorationStyle &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>afa12d38e05ad171e9ec718e7ae0d7b70</anchor>
      <arglist>(Cursor c)</arglist>
    </member>
    <member kind="function">
      <type>Cursor</type>
      <name>cursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a9a5b967e8fca0ea878e856538ca15213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a61135de86e52963c826e76d98fa2b275</anchor>
      <arglist>(std::string cursorImage, Cursor fallback=ArrowCursor)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>cursorImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>afb772ac9426bfd273485251185537b19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ac6bd2a8b86c8092fc437329dac09b302</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>backgroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a973c0007344280910c63589d468a72bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>acde968f183dfd9d6446546c96ca1f43a</anchor>
      <arglist>(const std::string &amp;imageHRef, Repeat repeat=RepeatXY, WFlags&lt; Side &gt; sides=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a814fdc9a6652e7b77a21bfc8e9e1a4cf</anchor>
      <arglist>(WResource *resource, Repeat repeat=RepeatXY, WFlags&lt; Side &gt; sides=0)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>backgroundImage</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a94deb7cf496f241d0d39f9eb7d099350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Repeat</type>
      <name>backgroundImageRepeat</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a84b82fe0eeec3e09a1d0a24c79fefa6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a986681e0391d09bdf7f82d0cf283ae86</anchor>
      <arglist>(WColor color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>foregroundColor</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a269ea8ed4d7bf54ff4d11db611f581c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorder</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a2902bf35e3eb676bb34d1a6b4ea2b42a</anchor>
      <arglist>(WBorder border, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function">
      <type>WBorder</type>
      <name>border</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a35c4ef3dc9cbd213bba8abf5ef307e83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a876f3f4a081622b0500d02032b56b659</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>a5e552350f0955212ea237994a98638dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ae30cbd3f4306be25434c89f269551904</anchor>
      <arglist>(WFlags&lt; TextDecoration &gt; decoration)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TextDecoration &gt;</type>
      <name>textDecoration</name>
      <anchorfile>classWt_1_1WCssDecorationStyle.html</anchorfile>
      <anchor>ae8345994773cfcd490383535908ab9fa</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssRule</name>
    <filename>classWt_1_1WCssRule.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>afcb8249f4038c7185eb37fcecaca6675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>selector</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a10b8706772e9a7616db278a73fe82096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCssStyleSheet *</type>
      <name>sheet</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a3740e3360c7185ff2a3838c606d34cd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modified</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>a15ca55980b693ac64e70ca5f0d8cbf5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>abe99bca6582d1ec43b7135f3a28956b4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WCssRule</name>
      <anchorfile>classWt_1_1WCssRule.html</anchorfile>
      <anchor>adc9c4088ba70dae3f82175a370677ee9</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTemplateRule</name>
    <filename>classWt_1_1WCssTemplateRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTemplateRule</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>ae05ee2d960f007cda1db3fa3bc2db60d</anchor>
      <arglist>(const std::string &amp;selector)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>templateWidget</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>aebf91a4bcb9c9b737e20ce6177624553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTemplateRule.html</anchorfile>
      <anchor>ab10a2ebfc6f80cf3357c963716868598</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssTextRule</name>
    <filename>classWt_1_1WCssTextRule.html</filename>
    <base>Wt::WCssRule</base>
    <member kind="function">
      <type></type>
      <name>WCssTextRule</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>a437f6c4f45fd1388728ed37d6aa214c4</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>declarations</name>
      <anchorfile>classWt_1_1WCssTextRule.html</anchorfile>
      <anchor>a5950660406de9b1e3d17082116718649</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WCssStyleSheet</name>
    <filename>classWt_1_1WCssStyleSheet.html</filename>
    <member kind="function">
      <type></type>
      <name>WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ae94dfb465a5d4f7eb405842dfda08d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WCssStyleSheet</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>aaa08125ae86aa489b65edf98ffa984f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCssTextRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ad2c989b38a7ee084a7c9b681e16e8a8c</anchor>
      <arglist>(const std::string &amp;selector, const WString &amp;declarations, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssTemplateRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>a3ecf53815b4044ea0337db6ce90fb5c9</anchor>
      <arglist>(const std::string &amp;selector, const WCssDecorationStyle &amp;style, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>WCssRule *</type>
      <name>addRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>afba6dc2162b71ee0271545739e374427</anchor>
      <arglist>(WCssRule *rule, const std::string &amp;ruleName=std::string())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefined</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>ae4a8dc5e77f2d90f7ca51af0194e8b0c</anchor>
      <arglist>(const std::string &amp;ruleName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRule</name>
      <anchorfile>classWt_1_1WCssStyleSheet.html</anchorfile>
      <anchor>aac9a375cdf712c604977d2e39ab16bb3</anchor>
      <arglist>(WCssRule *rule)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::InvalidDateException</name>
    <filename>classWt_1_1InvalidDateException.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1InvalidDateException.html</anchorfile>
      <anchor>a615608cd6869cf70c1027e2654f8b84e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDate</name>
    <filename>classWt_1_1WDate.html</filename>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a88823f7de1cc16e9211015733f15eac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ae88e64cff5fa3f28283f26fa7c8e4b99</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ad9f497db41a525c9955aa6c45fa9a692</anchor>
      <arglist>(int year, int month, int day)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addDays</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a55c4709c6cec54f8dd3e69355381630f</anchor>
      <arglist>(int ndays) const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addMonths</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ad85d82a3aa5c2613550e9cf52983d66b</anchor>
      <arglist>(int nmonths) const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>addYears</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a60915b6de93a109dccbcaa589890370e</anchor>
      <arglist>(int nyears) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>aa2d504303dfd4768b6f1ce942fb348be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a6e7f68474aa2fd9570cede81c85f6e3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>year</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a69b9c1a505490006774614a3b5a402f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>month</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a9eb0594dde9b3c92ecf66d399558dd81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>day</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a7e0d6855b08d7293e55c9929ec7737ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dayOfWeek</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a933d7b11edbbc207dfe0baaabeeceb57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>daysTo</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a122bd295f40ad30d63b3a00e4817f0b9</anchor>
      <arglist>(const WDate &amp;date) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toJulianDay</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>acee5169b63142a6543dc0bb709303769</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>aaa48849f8e1cd2bb6dacd5a675fc8bb9</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a29ab4d83fc8e27fa37e64c2ba8ad1d96</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>ab450e46b3da2f0662c946f8952d0b187</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a26f44d313ed4a8ba899879375020dbd8</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>aef3b62770bdbcb7335fd16871d0651f1</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>abf0fc8e2ec380e2bbf96467283877cf6</anchor>
      <arglist>(const WDate &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a1d9b6450f5f6126722f07c971ea9e4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a2be436babc9c5cb836901f4b2805f7ff</anchor>
      <arglist>(const WString &amp;format) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a86383757788870ff2f22bd29536336b7</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a25e1f637674f18ebb4fa528d107b3d46</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a6221e680cd7b1f7d324f1f1932e4a3db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>currentServerDate</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a57a614e3408f39c70605027fe3e3f3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>shortDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a01ad704115e2018a53ede745324d4086</anchor>
      <arglist>(int weekday)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>shortMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a54d59b0ffe528151de60a6880f728fa9</anchor>
      <arglist>(int month)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>longDayName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>a40a03ad1d529da1708b47a9f2d472061</anchor>
      <arglist>(int weekday)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>longMonthName</name>
      <anchorfile>classWt_1_1WDate.html</anchorfile>
      <anchor>af33b02874b9b683239def4d9e7f37e9e</anchor>
      <arglist>(int month)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDatePicker</name>
    <filename>classWt_1_1WDatePicker.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>ae8d610a63de150c34d1eedef47611d06</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a51951906fd4f6b2925059ec9828ae440</anchor>
      <arglist>(WInteractWidget *displayWidget, WLineEdit *forEdit, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDatePicker</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>aca2558c09355ec7902b1da352385e912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a4eea10671eea698aea906802b7f67fde</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>adeaf91b8f2319a28f0090d0a4a07cd68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCalendar *</type>
      <name>calendar</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a6fb5e37c7b81d104c21f2c0f587fe6aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a50e3f4c7c700e0628fccebe0cb5d8268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WInteractWidget *</type>
      <name>displayWidget</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>af91c0bb2fb868faf669380275eb8c667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>abfeb0d23dece4cf7fa7e9b65c0376f73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>adc47d5a1b0faf43dfed193f22f93c559</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a3f18fb47c77a16d8e1772593eaef6d23</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a1c632c278617c650b5cafcbc3b4e6d91</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>aa559e3b283aff87cdcbfd48d3edb78c7</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a00d263440d85d63ad19cfc48482b2f1a</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a2591db4e8902f2997b050b75bfa47899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a772dd0063197bcea023be869dc550496</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a256df5500fd57b0d4c059b492d40aac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>acda30d9035692895a2bb94090babc073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalPopup</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a5ee66d7aafd8fc11fa0ece87af6b76aa</anchor>
      <arglist>(bool global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupVisible</name>
      <anchorfile>classWt_1_1WDatePicker.html</anchorfile>
      <anchor>a6fb616d7418b8af4ea70699630e8c733</anchor>
      <arglist>(bool visible)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::InvalidDateTimeException</name>
    <filename>classWt_1_1InvalidDateTimeException.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1InvalidDateTimeException.html</anchorfile>
      <anchor>a90e3af354cf0450f79debb40ecb624ea</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateTime</name>
    <filename>classWt_1_1WDateTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a29901946960d23153fcf1467ee24a971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a3e4c80c57d9830aef554176d66ca5132</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a88851754ee49eb44b3971191e6499c5f</anchor>
      <arglist>(const WDate &amp;date, const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a791a4236d61e1787caf071040e7c6689</anchor>
      <arglist>(std::time_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosixTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aedfface981120ce328a968815ee7439f</anchor>
      <arglist>(const boost::posix_time::ptime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addMSecs</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a6c8ae3448bb8844644f10d880fc5c5ae</anchor>
      <arglist>(int ms) const </arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addSecs</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>afbeb4251ff1d5a7a3938b723dc0c6418</anchor>
      <arglist>(int s) const </arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addDays</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>abfd5e46c640dcc133aae00b8a2040518</anchor>
      <arglist>(int ndays) const </arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addMonths</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ad0a641ebdeed28686d5a8c818136b92d</anchor>
      <arglist>(int nmonths) const </arglist>
    </member>
    <member kind="function">
      <type>WDateTime</type>
      <name>addYears</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ab3aadeeff2d81f430999b847449cf338</anchor>
      <arglist>(int nyears) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a2c9df5b3b55cea3cfcdb861ff3fcae29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a7987f4190180b556fef65e14026daf92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a5059023135c5c8f2964e4944b38bfe61</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a19937219bdc0cf5d99a4baf0d80de647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a8846e7a9987797b2fff6e6e22ea7fea3</anchor>
      <arglist>(const WTime &amp;time)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>time</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>adef683fd4fb85354fe30b20c69fee15f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::time_t</type>
      <name>toTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aa8f4b59cddc562f9902e554d888c9b90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::posix_time::ptime</type>
      <name>toPosixTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a0d7f04bacc6ea6534bc61ec7305a8262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>secsTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>af7f9824464a5c2b3cd3a3aad84a2faf1</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>daysTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a366cff27e96d4cc86e5b6be8879e25fb</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>timeTo</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a1893f9b41a6ab51e587b68f5030eadf9</anchor>
      <arglist>(const WDateTime &amp;other, int minValue=1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ac72286a44beb5ceff568677a4bcc8e59</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a870e03386cb76213ca8cf8d605d5acf6</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a6f7eecc8e7290178321d2b92a6c56918</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a4d974dc42fa9e2dacff1cf36c11759af</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ae2da173387f965e1a7cfb734e12b570b</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a02a886eb6d9572d34080ab6a74fb0e96</anchor>
      <arglist>(const WDateTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>abb73b8df39ef05dbab3e0e7d7281c7d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>a9c6a96b8d94d4190de5ddb735b05bd86</anchor>
      <arglist>(const WString &amp;format) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>abbce10071edbed23ed425d73b46ad65a</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ae6025f1099ca81feae4288708b4130b3</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>currentDateTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>accc1d6a4815dab7c5e5332b494130178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromTime_t</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>ab8fb88773f890b78b82f903b43e981b9</anchor>
      <arglist>(std::time_t seconds)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDateTime</type>
      <name>fromPosixTime</name>
      <anchorfile>classWt_1_1WDateTime.html</anchorfile>
      <anchor>aeb5f093554829688b36640f0977da541</anchor>
      <arglist>(const boost::posix_time::ptime &amp;datetime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDateValidator</name>
    <filename>classWt_1_1WDateValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ad1df00f1fc29681bd8722952bac6da50</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a652b313001a1544bfaecdada2464d26b</anchor>
      <arglist>(const WDate &amp;bottom, const WDate &amp;top, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>af6c20524605414a8bb242acb718da6f1</anchor>
      <arglist>(const WString &amp;format, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDateValidator</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a77b6801a9e597d4ddc08547a185364ae</anchor>
      <arglist>(const WString &amp;format, const WDate &amp;bottom, const WDate &amp;top, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a65ef611c859119da8eb71f2020599077</anchor>
      <arglist>(const WDate &amp;bottom)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a7452061f89fcc542cd38acbc05f8fa6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ae6354b791d536a6de2d8f619f51e560f</anchor>
      <arglist>(const WDate &amp;top)</arglist>
    </member>
    <member kind="function">
      <type>const WDate &amp;</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a07374f374ac117bcd42b8e741ed565d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>acee1f3949840c056c60bf38e78b911e4</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a72c952300e99cd9384c713b92ddfcc07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormats</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ab92f432fe9b9f63679df120d7f9838f1</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;formats)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>formats</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>af915dd8a2aadea7cf6f2a2a7611dce54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>afa833f63a53d7d13aecdf2f79dab75d9</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>aedca72a61fc33a310ec7a655aef7877a</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a73be0b02ae9d2532a0b951ea51e4f053</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotADateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ab56b3eb0258272cbfba1df195d582011</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ad1ffa06a037d203da6f7c6e121a066be</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooEarlyText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>adc07d7402224e7d6f65a3e1e5a60e59c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a16559b0e658bf4211d9dc797455c930e</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLateText</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>a373d5577bcd4bef7e144ff6c68783f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WDate</type>
      <name>parse</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>abd99f0290618c49cd31344dbf86731a5</anchor>
      <arglist>(const WString &amp;input)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDateValidator.html</anchorfile>
      <anchor>ade82d221d04556f2d219d1b9b80bce45</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDefaultLayout</name>
    <filename>classWt_1_1WDefaultLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WDefaultLayout</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>a01f835b2194ad6c57abbbd76bbe9ef6f</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDefaultLayout</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>acecb272acef4ae61ab28f023950b70a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>a281200191e8568c0dd8f7f355640cfbf</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>a2172639feddcd11fd319eb481a5d20a6</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>a865e47b372c73f913f5a1c7d7124bd1e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>ab07de0e688076a6d722c2558a5675337</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WDefaultLayout.html</anchorfile>
      <anchor>a2c662db2763510aa0e47a84c098dcc62</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDefaultLoadingIndicator</name>
    <filename>classWt_1_1WDefaultLoadingIndicator.html</filename>
    <base>Wt::WText</base>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function">
      <type></type>
      <name>WDefaultLoadingIndicator</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>a667089dada9be1ac765e0daa676f5e45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>a0c0ad40f2d0638cc6d51dbc5e97fac4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WDefaultLoadingIndicator.html</anchorfile>
      <anchor>a0b4731e54dc060bf0451b9429a973678</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDialog</name>
    <filename>classWt_1_1WDialog.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>DialogCode</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a6f4bab24bf9e39be422bb6d9637268e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rejected</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a6f4bab24bf9e39be422bb6d9637268e6a8279eafdc9665e6c91d98d2b512a962c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Accepted</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a6f4bab24bf9e39be422bb6d9637268e6ad4852d715c07070ca1b117cb7e263840</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ab31907fa4f641192b2720ba735226d58</anchor>
      <arglist>(const WString &amp;windowTitle=WString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WDialog</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a97fa6bfc8c31a3bf98284ad66b2df738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae0923afc12895002f30b8ee12ab91aae</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>windowTitle</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>acf71bbc665dff57a7af201b4f32f59f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCaption</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a626d5109624e7442f9a96310b6919a5a</anchor>
      <arglist>(const WString &amp;caption)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>caption</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>af56bc5d90c6da742faa454ddfed4ce00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ab8ae8763648de12a67ada4b8237154a9</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTitleBarEnabled</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>aa23c6db155044c4f2c49269a874dd5cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a77351279e0927eb204ffebbc95d0cd79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a10f2f5df7ee5762845bf7ba334f170ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae56cf798aba9f09a8869df50d3f334a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a8d0a8725d03e5d7d144ef015983a8d08</anchor>
      <arglist>(DialogCode r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afab6f75ebb2d2970ebe0bbf1cf19f288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reject</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>afcff2ea14c4ae79b2fc7bac1a86b0062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rejectWhenEscapePressed</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a7db347dd52c9d487a5e007ebaa664285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; DialogCode &gt; &amp;</type>
      <name>finished</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>ae7f3991e5adf17ec4e9e93fd8a3a2f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>result</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a469ba179a2d620e2f7f6e0142f891c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModal</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>acc8c9734f33b405bf0a706fe2f6e4e05</anchor>
      <arglist>(bool modal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModal</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>a3ded330bb27133ac59ec8d8f0e7a1bcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WDialog.html</anchorfile>
      <anchor>aa3c85e704c0d7825bd342713f50b35f9</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDoubleValidator</name>
    <filename>classWt_1_1WDoubleValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a60ac6a9c4da70a17daa84a41d04b87dd</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDoubleValidator</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a3a7b569012485ce6a217c47ffb26af24</anchor>
      <arglist>(double minimum, double maximum, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>aa1f6b0952651e5503e6ff6657bd09180</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a520fe2f7859670b0c30144dbc4990e98</anchor>
      <arglist>(double bottom)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a708124404d7088f51f458bee1641288d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a931cc4c5d0409093f4a6fd8ab023ee73</anchor>
      <arglist>(double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a160f579d7884d02786a1cc36ec3ecca1</anchor>
      <arglist>(double bottom, double top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a66e68bb1d7f9698f3d515b1de884a33a</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a497f1ef7ea1b403665b9f1b7685954d4</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a86e8f0e07b6c861af2e656575a329d47</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a474314e509e47d2a577a26841fe4a752</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a119b5f1c2396f8d595c2607e76d27b1a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a13fb51475bab73ea71405f6fa9158c6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a6c3fa94752583d7e2de640cf6b91cef7</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>aa0cf3c02568e85e24105c073d8ee319b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WDoubleValidator.html</anchorfile>
      <anchor>a590267f8600a399b07133da5cec299b4</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WEnvironment</name>
    <filename>classWt_1_1WEnvironment.html</filename>
    <member kind="enumeration">
      <name>UserAgent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unknown</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda4cb2c346551f5270f14b2e6a854a5b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IEMobile</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda2823feda697be9f188400d7f481e9aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IE6</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda737c9af8220cbd65cdfe9b0789e87f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IE7</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda7badfc0c8db4cb19c42dedad648c9e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IE8</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda7d42e94541784f88d22215d1926bd3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IE9</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda3a25dce6ae2767dc71b816c1677cd8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Opera</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda18c1a4be49c088c9241119e6c4465de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda45bd0a2565de3bec1a9405956d385e89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Safari</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda1196785434e07b92754e35b08d807626</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Safari3</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdaf9a72317865b4e8c43dec948f3c9581f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Safari4</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda58379ce1ee25778d28d4404ddc7f5048</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome0</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdad818ce77035a393fdbad28799589ba41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome1</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdad65c49f421b84b08a9ad24ccc904ef35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome2</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda35a02d67c3d48cb2ef84d5410eb16783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome3</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda326e7fe860a3d5f395e126207928d53e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome4</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda075c8e89487220456b545be5786ae8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Chrome5</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda643b3c9cb3447cffa5128b870e412f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Arora</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda4d85e3f91e8baf595066d32f1e469cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MobileWebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda0f79ccf97841f36026e7b568601687a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MobileWebKitiPhone</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdae6e1b867b336d35a3b8828842dc79098</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MobileWebKitAndroid</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdab7d94421427961c72d2af8879abede89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Konqueror</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda79971897bce9804d647e1bbcf23ab099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Gecko</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda3f0c504f2120c3409dbc315ed3ee00ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda54ad950d64156edc780c1208764a952e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox3_0</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda75cd4043148d59c681a5de4bb74d3662</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox3_1</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdaa6d072b5c7080ad5705421104352e74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox3_1b</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda2b3d965b83e31a421a4ff80f800322d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox3_5</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fdad70e2c58f8992fe0447f5df72d5d5948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Firefox3_6</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda000338f20477244113024cf8e7ac7495</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BotAgent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a412018893e570badb4b95056c4c934fda49f1a47dc2ade4078772d770c1824a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ContentType</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab293698bb21313768c279dbe3a9803b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHTML1</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab293698bb21313768c279dbe3a9803b6a2088cf5865710d6b46092a96b8505288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HTML4</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab293698bb21313768c279dbe3a9803b6a5370f3c22a92a80c345c545d902dc6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>CookieMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a163671f35f1080badcb791a826f5fadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Http::ParameterMap &amp;</type>
      <name>getParameterMap</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ac333df7571b921b4f22492c2bb95bcd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Http::ParameterValues &amp;</type>
      <name>getParameterValues</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a0c2ff76f4db12bc9ab390f7673af9b91</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getParameter</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3f87915f10f39b18eac28bac65c0cd46</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const CookieMap &amp;</type>
      <name>cookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a30810ecfa507bc6f655c38a6f218dc92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getCookie</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>af39745ca2c6c6fc00c0f78bc7d064e3a</anchor>
      <arglist>(const std::string &amp;cookieNname) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>headerValue</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a43f59c8aced914ac4b51690e8ee90285</anchor>
      <arglist>(const std::string &amp;field) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCookies</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abf06c6d85be1b482c037f80e63890f3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>javaScript</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a9ad466ecabd71a039cbfbee137867849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ajax</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>af39702064f91a549514f28de713b7cd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dpiScale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a06c074249363d4ef4b90bc9cbae96261</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>locale</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a42b10cde31c3df634dc753b5dbd1e800</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>hostName</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad798f03cb67b859cc42ed2e1ced82fcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>urlScheme</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a5dd3ea667a61c3bbc2c6e1e3a879dc2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>userAgent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3ac010296af1ee9dbcbfecad96dc5a0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>referer</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aa68ac8744d2dc060d6c66ab22fbadbe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>accept</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a9160e82a73d21aa1a0a76bf5eeeac886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsSpiderBot</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abe062ba13bf3df36e06d611e04b66603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSignature</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a8d2c52cbf0c79d315088e56c8e5fe224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverSoftware</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad0d4a99a818ca7cb851ef43187c9ade7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>serverAdmin</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aa407aa90c7a3ab9ecb46de0ed9451797</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientAddress</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3cd4cc541b27cfe4f937d2b945f5ff6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>pathInfo</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>adb17bb1f17c56f78418e06872d531c24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>acb2ba1f1f88e9cd6b7a57a2e51518ec6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>deploymentPath</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>aa6c6f66f82b2c6f08317366882d9b827</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>abf911f096b978f4e842596c7401052de</anchor>
      <arglist>(int &amp;series, int &amp;major, int &amp;minor) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sessionId</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a41d6fa0197d24e92cc463cc9d5815f10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCgiValue</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a3aa8ecc5ee3b7c7298ac33c43b65ec1a</anchor>
      <arglist>(const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function">
      <type>ContentType</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a375dfdc05e69eb22b8b644d2fada4d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UserAgent</type>
      <name>agent</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>afd8726dfa8cabcb49895df4a6112ef48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIE</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a481240e2bd08b1f01ff7dce417c1476c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIElt</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ad0a9e4b64f21ddb5269a3b5454f5219d</anchor>
      <arglist>(int version) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsIEMobile</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a65888110662122c6b7a05d12060119f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsOpera</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a48d50e20b390708cdf506240a70b1b70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsWebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a7e93d6a17e128a6a714a96f5faaef351</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsMobileWebKit</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>accc83794f9d7b250dc30e3bd17c11508</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsSafari</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a316fedb63906347ca23242a26919e19a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsChrome</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a598f54d7199f2ef3b07d3c37dc2a41dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>agentIsGecko</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>ab810be7b203ea6c8c4c9b9f279efe667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WAbstractServer *</type>
      <name>server</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>afb1c2e414d043396f4c1ad0b5e4704d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>libraryVersion</name>
      <anchorfile>classWt_1_1WEnvironment.html</anchorfile>
      <anchor>a8d55627d202b6d8866c7703a6e9dddf1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::Coordinates</name>
    <filename>structWt_1_1Coordinates.html</filename>
    <member kind="function">
      <type></type>
      <name>Coordinates</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>a416b99925a4a45bde5f64024bf1a60eb</anchor>
      <arglist>(int X, int Y)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>ac815a7cef6b961e1bc2a0c8dfb4e203c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structWt_1_1Coordinates.html</anchorfile>
      <anchor>a8a66b0bce898256585044d213758b399</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Touch</name>
    <filename>classWt_1_1Touch.html</filename>
    <member kind="function">
      <type></type>
      <name>Touch</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a4c3d89b499562061382a8b1d83c99ab9</anchor>
      <arglist>(int identifier, int clientX, int clientY, int documentX, int documentY, int screenX, int screenY, int widgetX, int widgetY)</arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>document</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a4eefd5ddca76caabdd788bf240624186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>window</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>aa8e1c489d4fe2910bb2a5053bf7d05d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>screen</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a9740630a871dec96707ca95085fe2c89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>widget</name>
      <anchorfile>classWt_1_1Touch.html</anchorfile>
      <anchor>a503701081a16a9daa1bdc33ceaf3ea8f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMouseEvent</name>
    <filename>classWt_1_1WMouseEvent.html</filename>
    <member kind="enumeration">
      <name>Button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a67958762760e6aa6973109a7b3d46210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a67958762760e6aa6973109a7b3d46210a3f70178895b26ccf8f0a2e27cff95cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LeftButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a67958762760e6aa6973109a7b3d46210afbce5dfa6d97366c49bd9a7aa1c2b7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiddleButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a67958762760e6aa6973109a7b3d46210ab4d71def93cd1b2482a748e576949758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RightButton</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a67958762760e6aa6973109a7b3d46210a3680e4c90e452cb6b29a7d4df8c41c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Wt::Coordinates</type>
      <name>Coordinates</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a958d03f5470457b0437cf129655c51c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMouseEvent</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ad99367bf6494aea5f92869d32aaecf1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Button</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a3cb45d106522eaa8b597b2e274053e90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>ac84d28364a178e547d2bc417e3eb2423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>document</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a76d0dffbee01451f043ff603eb133334</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>window</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>aeac308aadc18ee38d80e49d9357bdcea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>screen</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a3a6f116184b391a58bbf7bd2fccbacd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>af875dd9a33e6a5dd7cf6aa9dd927e8ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Coordinates</type>
      <name>dragDelta</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>abc8cd49bcbf8244ee6f92a16eca7561b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wheelDelta</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a4354738e0bce7e57764a465f5e19895d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>altKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a322292eed48c4d640f172648c660ef49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>metaKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>afca8f1bed7ec531f0b7b4c01173eb1cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ctrlKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a8a25240a3b4a7b296d5c333c03a1fb75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shiftKey</name>
      <anchorfile>classWt_1_1WMouseEvent.html</anchorfile>
      <anchor>a53962bfb61abd94b0a96568ed322a68d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WKeyEvent</name>
    <filename>classWt_1_1WKeyEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WKeyEvent</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a93efdf1091659752a18f107f2c7612e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Key</type>
      <name>key</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a1a1dd4cf1ac3cc427505c2660cbf069d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; KeyboardModifier &gt;</type>
      <name>modifiers</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a56601dff9d7ed5ff5ff294f7025a6908</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>charCode</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>abe057e50123becd86400abeaea8b5e9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>aef6d350c375bd06e7df8aae0898aa744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>keyCode</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a313eda54335c00c80827b39cdae15ef2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>altKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a7d382409feb5545edb8bb0561a144006</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>metaKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>afb60842e8e3797a8d0079cf774b81496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ctrlKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>a334af6e260dda1c17e5876de7405851a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shiftKey</name>
      <anchorfile>classWt_1_1WKeyEvent.html</anchorfile>
      <anchor>aef80abe3417494c7ef95066859bbf4f3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WDropEvent</name>
    <filename>classWt_1_1WDropEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WDropEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a392415b39dbff17302e63ba344894ff3</anchor>
      <arglist>(WObject *source, const std::string &amp;mimeType, const WMouseEvent &amp;mouseEvent)</arglist>
    </member>
    <member kind="function">
      <type>WObject *</type>
      <name>source</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>adfe27a00e34b7322a52bc7dc73d4d5af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a14e3c3a1cb956319cefe63bddc29a0de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WMouseEvent &amp;</type>
      <name>mouseEvent</name>
      <anchorfile>classWt_1_1WDropEvent.html</anchorfile>
      <anchor>a8c4ed93cd012f2dbf9b9041c4bb926ab</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollEvent</name>
    <filename>classWt_1_1WScrollEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WScrollEvent</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a1b1dc654c40ecdfd742936e663728610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollX</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>af4f336af6117589e8a6a43642b9c70d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scrollY</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a093916a7dcca58334c8c290f7d783ccf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportWidth</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>afee0cf410002fb82cc1f8b60e2a83911</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewportHeight</name>
      <anchorfile>classWt_1_1WScrollEvent.html</anchorfile>
      <anchor>a90a726129be2e70944cea3d605eadead</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTouchEvent</name>
    <filename>classWt_1_1WTouchEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WTouchEvent</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a7afa4ca1ec20f4dee50ae232913a7ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>touches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a0ae0cd46fdd1bc63fe79377f2ac91b09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>targetTouches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>a398d890eb259022d8e556019b0b268df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Touch &gt; &amp;</type>
      <name>changedTouches</name>
      <anchorfile>classWt_1_1WTouchEvent.html</anchorfile>
      <anchor>ad8701e2d84c37a91e32844a07b00040e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGestureEvent</name>
    <filename>classWt_1_1WGestureEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>WGestureEvent</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>ad2b17234b1545a852353281f9d82572a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>a3593b0e1fe5b243c67c69f907449261c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>rotation</name>
      <anchorfile>classWt_1_1WGestureEvent.html</anchorfile>
      <anchor>a07e145dae0c12c6c4e2577c44143d106</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileResource</name>
    <filename>classWt_1_1WFileResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a61cd3c164de338e8c750a4e852c85109</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a3ba8b11f98f8404f41f2721f94ef9260</anchor>
      <arglist>(const std::string &amp;fileName, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ab756e5ea65534bfa89dccfc1bd1ce06d</anchor>
      <arglist>(const std::string &amp;mimeType, const std::string &amp;fileName, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFileResource</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a60bcdd2873274df4143c79444d178004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a02a899ebef188895c4f1707e529c0ef3</anchor>
      <arglist>(const std::string &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fileName</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>aeec71fb64b2a1bef2ebb7f61f30639e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a72db1d052a130e22a99e60e064e30006</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ab01b1ad9dea02d17a87d44c6dcae4c1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBufferSize</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a8f1eb8202a696db4e80e082d5d84a692</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bufferSize</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>ac1fa1a9e6bc1f3ee726d3850a27e12b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WFileResource.html</anchorfile>
      <anchor>a7a801fa115d455a2b8cc29938a29fe85</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFileUpload</name>
    <filename>classWt_1_1WFileUpload.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WFileUpload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a71fa85fc383df6e36c2bcf4d877b63ec</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMultiple</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a17f8e368c2ffc9836c65e470b311de9d</anchor>
      <arglist>(bool multiple)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>multiple</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a61784c68272e562e023a356fb1d3d55a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac7ad1324c86d378da9da9740a631a662</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>fileTextSize</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a39a9998018c87f25d7d884a3a0418cf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>spoolFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac0897be7484b668e6cc940c7673b1ca9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a17c00f860b120e0c70d8599d781cbf58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>contentDescription</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a7933d0052ba63d938870dde50b9aabda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stealSpooledFile</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a541d634e9f9e546f59417682811f01ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a51c7d5c96d671374ac9651d4fc3c9f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyFileName</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a4207ca5ea74962583d146409301c3416</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Http::UploadedFile &gt; &amp;</type>
      <name>uploadedFiles</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ab1ffd4c3c203e6772f4a1b2e235888e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canUpload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a66376fb4668a037760a91abad9f83f8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUploaded</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>aba40acced8b3ab758f53d17f15afcf38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>uploaded</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>aacb4622c8cd83d1635a8c0db13c8c0fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>fileTooLarge</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a29dc78a0162c676f7b72904d595440d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a3abaf94bdba04e7833aa18bc7e8d0f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upload</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ac17094f2fd6ae8cac1035161f7d80b9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgressBar</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a6600c5a1232057418b3fe63d5db1c004</anchor>
      <arglist>(WProgressBar *progressBar)</arglist>
    </member>
    <member kind="function">
      <type>WProgressBar *</type>
      <name>progressBar</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>a6ba92fc8abf219fd42972dfe8fa5081e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::uint64_t,::uint64_t &gt; &amp;</type>
      <name>dataReceived</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>af7e87df88e456f3472bcda2dc07dae4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WFileUpload.html</anchorfile>
      <anchor>ad23982f1823db145b0da23508a7aa7fa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFitLayout</name>
    <filename>classWt_1_1WFitLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WFitLayout</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a6d164d46d0d57581b175cd424fd14a02</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>ac961be1e914193e5f46992ef326d0939</anchor>
      <arglist>(WLayoutItem *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>afd4c47377c0aa0a3a55db13a0ff2bae2</anchor>
      <arglist>(WLayoutItem *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a9a058c59e6fc3d7526d1d3c57c940049</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>a68002f0345e96fdfec1ccaa823c52a3e</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WFitLayout.html</anchorfile>
      <anchor>af8f23224493fcb1958fa676fd079b5e7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFlashObject</name>
    <filename>classWt_1_1WFlashObject.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WFlashObject</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a1ba25b0dc80aaea9bf6bebddb4566297</anchor>
      <arglist>(const std::string &amp;url, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFlashObject</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>ab171e2e30fe09b82db7e97b9b9589265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>ad4cb831ed24e824d7feeb2426994e2e3</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlashParameter</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>af5b66c371c595a6c749535280c2823e7</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlashVariable</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a00d24cf3b700d448f504279b4c3f2501</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsFlashRef</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>afca00f0fe23c516684b7505bbbf8af62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WFlashObject.html</anchorfile>
      <anchor>a00676cbb898bc23f09548c332121a67a</anchor>
      <arglist>(WWidget *alternative)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFont</name>
    <filename>classWt_1_1WFont.html</filename>
    <member kind="enumeration">
      <name>GenericFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Default</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4adbffc4d9f5fa5f34900aebcd0b15bde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Serif</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4a76dafddb4003414cd9c5581a2d0cfde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SansSerif</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4a2f4002af014819d1eb4843d40d0dc22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Cursive</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4a34fccfcaa60090f00390d9d0b8959c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Fantasy</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4a24fd87a4f64979b28c42bbb9b73f2042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Monospace</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a29dc2c43365227caeb3d151dc849f9f4adbcd306de435d5aecc6f80255d8924f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aed1f6f3ed136085227e54c74f3bcbcbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalStyle</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aed1f6f3ed136085227e54c74f3bcbcbda8332fa5755d4809540bcc57c86b55b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Italic</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aed1f6f3ed136085227e54c74f3bcbcbdaa807084ea3007cb08b98a2593002f5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Oblique</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aed1f6f3ed136085227e54c74f3bcbcbda92c065dd7e86795818dceb6db5fdb96b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a64cb5e27be68b9f210d5302e23f0b8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalVariant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a64cb5e27be68b9f210d5302e23f0b8c7a98a079ddb687a3d916c6cfd94360302b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SmallCaps</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a64cb5e27be68b9f210d5302e23f0b8c7a6d9be1f2c12a2e1b4ce13537505f427c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalWeight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2fa4d5997214d1f422668a289ecaaa7392e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bold</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2fabcc33bf83e80792439727f8989258fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bolder</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2fa8cb7f0f4ce9e4a02d1afc05856558bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lighter</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2fa5d62f7b71f48269896532ec567701353</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Value</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a87c97b2df78c225a081b916178138a2fad24130ba55c0c97f126c9640c457bb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XXSmall</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146faa6439821f56d3b2f609f5af6cd506570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XSmall</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fab152ee83d3060fef7504981ea753d272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Small</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fa15bccc177a5d27332e245d5a0d298eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fad7898454d7c34adf5ca205639a77c892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Large</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fa1fbdeb7721717c1098f918f232cc96b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLarge</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fa7361b98849128d4eade8f16375ef150c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XXLarge</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fac0dbf95df3f79bb4780841669d776f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Smaller</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fa33310a2d66ef90bcce466920b0884538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Larger</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146facf27ef48ceb695bee7e8b6087825e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FixedSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4d90d27f5888987091261e7ac227146fab8fde835312f7e4aa67998564f292f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WFont</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a9839e47278aa3da5b613d29d6643e106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a4146081cd9ae22a540400e4a69255d97</anchor>
      <arglist>(const WFont &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>adf4922a79463304dedc2114049c054c1</anchor>
      <arglist>(GenericFamily genericFamily, const WString &amp;specificFamilies=WString())</arglist>
    </member>
    <member kind="function">
      <type>GenericFamily</type>
      <name>genericFamily</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a27f8c5ebedfef28401f6c047da3794e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>specificFamilies</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a3da83e0629520dc11a8c6701ac6aa324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a1a13d9f8bfe72ebc6e9a5c08be58d881</anchor>
      <arglist>(Style style)</arglist>
    </member>
    <member kind="function">
      <type>Style</type>
      <name>style</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aad6e63a8b1983de676d3490c9f370e11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVariant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a2d4e225bebbc447727cd271d3c2c227d</anchor>
      <arglist>(Variant variant)</arglist>
    </member>
    <member kind="function">
      <type>Variant</type>
      <name>variant</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ae4890c91c42f93ff8ea517e59960245d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ac27d9f5d3a23115e3881a2d0ac9cb771</anchor>
      <arglist>(Weight weight, int value=400)</arglist>
    </member>
    <member kind="function">
      <type>Weight</type>
      <name>weight</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a59074e98ba2d7bfb8a88b14126f7a545</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weightValue</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a9fb38299d26f63e5915f50e42a4e2996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>ad449c8c5c3b78e66d51fe6db0c0b9d58</anchor>
      <arglist>(Size size, const WLength &amp;fixedSize=WLength::Auto)</arglist>
    </member>
    <member kind="function">
      <type>Size</type>
      <name>size</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>a27bf3326d9829276598808bcbefb63e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>fixedSize</name>
      <anchorfile>classWt_1_1WFont.html</anchorfile>
      <anchor>aa93cf00e45120cc6a6ccbb6334e913d0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WFormWidget</name>
    <filename>classWt_1_1WFormWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a63194da5d63a46188b38bbda2936cf61</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WFormWidget</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>af9027662449d08a70e361611f6fcf4c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLabel *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a82f0eaf7fb35132644b429e2b3b8930f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>af7db6da14a0530408a7b68668d0d11ff</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>aa773d16013d6959149ce5081e84b259c</anchor>
      <arglist>(WValidator *validator)</arglist>
    </member>
    <member kind="function">
      <type>WValidator *</type>
      <name>validator</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a4643be79e2c92bc448ce46e7d314335b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a7960606393d6158abb4a2d8c9d8fd2ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>ad26d15f452d47832a4467608977f03f5</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>afe33f5c3658ddbd08fec9f6c203c578b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>ac424175d810c406d25efa64774d184c9</anchor>
      <arglist>(bool focus)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFocus</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a5a2234b9417267c7a932571654e58679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>abfd96a78d98db8572c51c9b18ab3ec88</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>ad7d39967608f2ef1582a313eb9d08a07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a353ae79a10748c870f1fa2ce1f174eaa</anchor>
      <arglist>(bool readOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a06ffc301c0cfb7f9da4c74deb469282a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmptyText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a92de7a4d9ca6796607dc9fd26f608436</anchor>
      <arglist>(const WString &amp;emptyText)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>emptyText</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a0f9f7ac3c423521f9ab0df855704eb71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a5216ba1594b5dc525cc47cad593c7ba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a4f7fcabf3e2f51b884230c179ee52137</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>blurred</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a5158413489fa4721d4689cc4639c914e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>focussed</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>afe56345bd7225852e2f8ef92bc048f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>a503448cefdd06c5fe18bf13e911e8bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>ae6f44795e053299e31a3ab3e433c7deb</anchor>
      <arglist>(Method method)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WFormWidget.html</anchorfile>
      <anchor>aff5d72ac52040b97a77c21b0b38d44c8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGenericMatrix</name>
    <filename>classWt_1_1WGenericMatrix.html</filename>
    <templarg>T</templarg>
    <templarg>Rows</templarg>
    <templarg>Cols</templarg>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5fc110fa4b41c04fd76318d8d30ce2f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ae63c07b13313cb5035e725e251d2be31</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGenericMatrix</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8752490de727d5ce6dd3120da518f49d</anchor>
      <arglist>(const T *elements)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>constData</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4b288803d1799dbcf6312f8ce0fdc283</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDataTo</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ade63e535a39caa2560a60dd7c969098d</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a4e9300685974b67610b9f6ad437a5ab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayType &amp;</type>
      <name>data</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a5c1080432c41e410199703af7c307aa3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>aaf623a4a2a09bc9c853774c77daca3b4</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a12186aa1e3c4c483f4f28c8a1f7a4e40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToIdentity</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a665f5d9bb6ed06aabfacadbf27e9e8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Cols, Rows &gt;</type>
      <name>transposed</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a259f772b9ff66a343e359127f4829090</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a82563312760fe55b669dce9ecee195cc</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a8ce22371debe5dbc5f9fcac8f926ac6b</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>af98a51740a0fe89f62c19005b8c03858</anchor>
      <arglist>(int row, int column) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a475533c4b5f89995053f2954557bde0b</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>acb15e0a9486e0986e3572e5fb5ce6f9f</anchor>
      <arglist>(const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator/=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>a23bd0e7f286f42c83a4c47cf6e857b57</anchor>
      <arglist>(const T &amp;factor)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ab91384a67a371d98ba2b39abdefa5b03</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WGenericMatrix&lt; T, Rows, Cols &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classWt_1_1WGenericMatrix.html</anchorfile>
      <anchor>ace9cd1cfb0da44619c9a60abd5979b37</anchor>
      <arglist>(const WGenericMatrix&lt; T, Rows, Cols &gt; &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget</name>
    <filename>classWt_1_1WGLWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <class kind="class">Wt::WGLWidget::JavaScriptMatrix4x4</class>
    <member kind="enumeration">
      <name>ClientSideRenderer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5d3425efa2e26e226a67935d096826db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAINT_GL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5d3425efa2e26e226a67935d096826dba3026bf815fbdf1e1f6049c6e8653e0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_GL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5d3425efa2e26e226a67935d096826dba49d7a736e09d5579fa52b840b56efcf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_GL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5d3425efa2e26e226a67935d096826dba4819fd831280292fd1a9d861132434b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>GLenum</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae94560816975bedd91b9d63fc4b710a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGLWidget</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa6d4034bfecbcbca2190ba1cbdb53fd8</anchor>
      <arglist>(WContainerWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WGLWidget</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a61a742adcc8fc1f5c71ea679ff276522</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a173846477e42933b8cfd342db5de116e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a81c3bc38f708aec828ea1d1cf698633a</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paintGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a867c0405122daeb78dad8a013c91f004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateGL</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aac1505244222b8425bbd2f0a36c67545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab6e91b16dfa5e22a6c02cf12c1bbe799</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSideLookAtHandler</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae6a073cc4e88ddf5599270b14acb0133</anchor>
      <arglist>(const JavaScriptMatrix4x4 &amp;m, double lX, double lY, double lZ, double uX, double uY, double uZ, double pitchRate, double yawRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientSideWalkHandler</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a990af8ca034e1f496b3e9f7acaf5c6c4</anchor>
      <arglist>(const JavaScriptMatrix4x4 &amp;m, double frontStep, double rotStep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>acf46ce2f59e3a57831b1c452d972fce5</anchor>
      <arglist>(WWidget *alternative)</arglist>
    </member>
    <member kind="function">
      <type>JSlot &amp;</type>
      <name>repaintSlot</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab44c8692c63dd82a2b5bcf70961319c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activeTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3adf76ce67f434d6966c639c98953998</anchor>
      <arglist>(GLenum texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abc8754b8435b1b9ff9e4628574682e88</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a618261b8a88a6ec63e4e825dc86ba859</anchor>
      <arglist>(Program program, unsigned index, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af19725ea4e17cb73015f1fe017daab16</anchor>
      <arglist>(GLenum target, Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af5b7790e850fb70d4e2236f3e2368d1a</anchor>
      <arglist>(GLenum target, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abfe0430556af2b69b1974ed05cfe6ac3</anchor>
      <arglist>(double red, double green, double blue, double alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a72ba397b13e4a1ea7a8cf3f392153237</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendEquationSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad6a0b90c3639981fb97f8f8a2f421e41</anchor>
      <arglist>(GLenum modeRGB, GLenum modeAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ade3074a25a1c74dfbbcac27dbd461b42</anchor>
      <arglist>(GLenum sfactor, GLenum dfactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blendFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac3047e378ef26ed04b355c91721c8f6d</anchor>
      <arglist>(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a800f42f541b3576eeb80019a7cf4c6c6</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8f91c6352be703a0257bfd0afc8f56be</anchor>
      <arglist>(GLenum target, const Iterator begin, const Iterator end, GLenum usage, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDatafv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a542d941618c30f90bdd02016dd6e3749</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, const Iterator end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferSubDataiv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0ae2e097a8b4e5c4fdec22019f73fff7</anchor>
      <arglist>(GLenum target, unsigned offset, const Iterator begin, Iterator end, GLenum type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>addcc25de08105c363cc43e442cf52d99</anchor>
      <arglist>(WFlags&lt; GLenum &gt; mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearColor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4e80c72c4b3f05a199ea9bf2037d28bf</anchor>
      <arglist>(double r, double g, double b, double a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDepth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad81ab5cdaa1ce285bcc694ef9276129c</anchor>
      <arglist>(double depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStencil</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4ceeb658e93f6a31deb3fb095218b114</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>colorMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a980c3d63dae9852cb520464be428bf1b</anchor>
      <arglist>(bool red, bool green, bool blue, bool alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a96a9e906dc1da6636e6eb4a8c7f441af</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a17179814d71e5f295056795f9c498970</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, int x, int y, unsigned width, unsigned height, int border)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTexSubImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a235cb115e3874b5a6a8ffd2becc8a449</anchor>
      <arglist>(GLenum target, int level, int xoffset, int yoffset, int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>Buffer</type>
      <name>createBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4840bc58bf91af2cd7ad2457e1909ca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Program</type>
      <name>createProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a02b50faf2228b119fe22b4d282bef5f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Shader</type>
      <name>createShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>afddbf886d2cc79a0ed4050a1cfe1af3e</anchor>
      <arglist>(GLenum shader)</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1312b2a2ed7810709c98bc2adf72046a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Texture</type>
      <name>createTextureAndLoad</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8830082d2a0a7c44eafb519e5392dd24</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ae3a06231ee36de34f76553bdebb01cca</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteBuffer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>adecaf38ce4889c723ec739d550ad1e63</anchor>
      <arglist>(Buffer buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af547d2c344045beb68cc1b9042f48ce0</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3bfbe2e8f5004a01e04718520eab65ce</anchor>
      <arglist>(Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTexture</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3486aaa9626e524f5293118c01e81c1f</anchor>
      <arglist>(Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac209744ac0ece438b8b7ffe380799b8a</anchor>
      <arglist>(GLenum func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0226f1a5f96d52d27cdd94a5994c7315</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>depthRange</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aff57f61a4f563882e9460c11fde14c68</anchor>
      <arglist>(double zNear, double zFar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachShader</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a1087bacbf24f0c7a82ae69ead7a944cd</anchor>
      <arglist>(Program program, Shader shader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a5a41276a341fa2e3ca86cc10ba1cc4ee</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrays</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa32b9c73b58e1e33699f4c27cd90cf22</anchor>
      <arglist>(GLenum mode, int first, unsigned count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawElements</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aaabb0fe26ffdda39fa0381a5e32fcc50</anchor>
      <arglist>(GLenum mode, unsigned count, GLenum type, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aaf3453e58ec98f21349c78dc35f35169</anchor>
      <arglist>(GLenum cap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableVertexAttribArray</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a70614ccf90c76fef8162580905dd6a7b</anchor>
      <arglist>(AttribLocation index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6bc0c8c32f70a72bde9f109106fa3b19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad89c117d6a540bec3fb0b1a6fdab6021</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frontFace</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8d6173ea13f95b6212ee165790e31258</anchor>
      <arglist>(GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMipmap</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a9fc7c929fb4bbed2a2ffe6e82f7c9f2e</anchor>
      <arglist>(GLenum target)</arglist>
    </member>
    <member kind="function">
      <type>AttribLocation</type>
      <name>getAttribLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6ceed270b1a7a7b306e047fe6a11003d</anchor>
      <arglist>(Program program, const std::string &amp;attrib)</arglist>
    </member>
    <member kind="function">
      <type>UniformLocation</type>
      <name>getUniformLocation</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0efd916e56562f9721faa3fae4f318ef</anchor>
      <arglist>(Program program, const std::string location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hint</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a60500634c2080fe460fbb7b900b43869</anchor>
      <arglist>(GLenum target, GLenum mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineWidth</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8263d1194622588549f886d6bd286017</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linkProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a3f2d536b3a2efd7cacf492f37a655f5f</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pixelStorei</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a665757917d17c385bf140d05c278e7ba</anchor>
      <arglist>(GLenum pname, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>polygonOffset</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a92f0f539294b4e071883a4abb572b1be</anchor>
      <arglist>(double factor, double units)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sampleCoverage</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a637af34795420250680f9785e86c1044</anchor>
      <arglist>(double value, bool invert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scissor</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a67aa948fdf124ad035a58740b58a6df9</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shaderSource</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2d37dd24f16b6b21fdd00da3795725a6</anchor>
      <arglist>(Shader shader, const std::string &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFunc</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa409e924469752c92e843a7ea699c4c6</anchor>
      <arglist>(GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilFuncSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a20a9b0307f1fe56ebaf15bb2633b52cb</anchor>
      <arglist>(GLenum face, GLenum func, int ref, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMask</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa8c3c09a8369e13516ca7ab0ffb02e79</anchor>
      <arglist>(unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilMaskSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a764074c6a0c12fe196e5ec8de6663142</anchor>
      <arglist>(GLenum face, unsigned mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOp</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af323ad020c915d44166a483b22d9341e</anchor>
      <arglist>(GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stencilOpSeparate</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aae0e891dcc8b9ed56385d7fb4ab34263</anchor>
      <arglist>(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa9ee76bfbb937818824ba434acceacdf</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WImage *image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a083bff48d16b0af87274623fb7c31ff5</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, WHTML5Video *video)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texImage2D</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a8e38cabff05317c99a71ba8eb96469a5</anchor>
      <arglist>(GLenum target, int level, GLenum internalformat, GLenum format, GLenum type, Texture texture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>texParameteri</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abac768779ed44759d762a942f1d3c1c1</anchor>
      <arglist>(GLenum target, GLenum pname, GLenum param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6b02c6a2aaa1aaf6802f42ced843cef4</anchor>
      <arglist>(const UniformLocation &amp;location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7c58ef915c0f0dfd681d23ab6fdbea86</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a16adc3005430e229621e80b20d8bd3b8</anchor>
      <arglist>(const UniformLocation &amp;location, int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform1iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a122014822bc7b2e457ad8dc74709ade3</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0e99527c91dcb5b580e7eaa22113011f</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac56fbf95fc1f0070c84bd1d24af7e409</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac05c454c7f4ce41e3aed8495f27ee322</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform2iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab876c0f45f4ca7b12c539a5e6389c13f</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4f6a054f4902cd574b357944fa4205af</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ab8c6d8893a5042f0bd210e8e4a3c1ef0</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af389d5e9bcd3e0c7af205e6fa4e5c96c</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform3iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af143d0086fa329f1be91f5b94cd23137</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a7ba3292d9578808b90c11ff8bb5d6d4e</anchor>
      <arglist>(const UniformLocation &amp;location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a85b8eb858697b66c94f9fcde64b2ecfa</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4i</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad201c7a916796921e52b74c79a19f43e</anchor>
      <arglist>(const UniformLocation &amp;location, int x, int y, int z, int w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniform4iv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abe0fd6375d820e9d00f291ee3dd99e21</anchor>
      <arglist>(const UniformLocation &amp;location, const Array *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a23f88a4c2f0018c1f28882ca87737c2c</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix2</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6f8eff162f76c7f8235701f19aad9b07</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; T, 2, 2 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a810a75144569105dad79a9d6d7bcec83</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix3</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a04320c5230e859976031169cb5790285</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; T, 3, 3 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a2705b583d7025ca84679df556d8c0d49</anchor>
      <arglist>(const UniformLocation &amp;location, bool transpose, const MatrixType *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a45ab6ecc3c905584142062bc52a7c805</anchor>
      <arglist>(const UniformLocation &amp;location, const WGenericMatrix&lt; T, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aa63161958fe1fb5ab60d22b84bec09f5</anchor>
      <arglist>(const UniformLocation &amp;location, const JavaScriptMatrix4x4 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a4f29ecdc7c2fd1935ec29d5d953116f0</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateProgram</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ad2153bce90cddf7fc459fe4f1329e8fa</anchor>
      <arglist>(Program program)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>abe8a985b723658b7a3ab145b27dea772</anchor>
      <arglist>(AttribLocation location, double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib1fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>adb01338e3d34a2c9b98d7224c138f245</anchor>
      <arglist>(AttribLocation location, const Array *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af987f03a08db04a7ba2592a3d11d4d9b</anchor>
      <arglist>(AttribLocation location, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib2fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a81a4e08dad61fd54f8ce218cc874e63e</anchor>
      <arglist>(AttribLocation location, const Array *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>ac9ce062f8afa522c395946e18b08cfd4</anchor>
      <arglist>(AttribLocation location, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib3fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aaf8a572df5f3df22e60de2273ea01334</anchor>
      <arglist>(AttribLocation location, const Array *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4f</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>af0de2acadf10f24274e1c1fb91b09857</anchor>
      <arglist>(AttribLocation location, double x, double y, double z, double w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttrib4fv</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a0fc9a0a1d8f114c2203fb06b9bb276d2</anchor>
      <arglist>(AttribLocation location, const Array *values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>vertexAttribPointer</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aee176b126361862324108eaf2fa8f189</anchor>
      <arglist>(AttribLocation location, int size, GLenum type, bool normalized, unsigned stride, unsigned offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>viewport</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a507e325d11e91fda58285388adf49d81</anchor>
      <arglist>(int x, int y, unsigned width, unsigned height)</arglist>
    </member>
    <member kind="function">
      <type>JavaScriptMatrix4x4</type>
      <name>createJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a6f729efd3e92fa137684cabbfb469ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScriptMatrix4</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>aae864d04f6379fae87312ab4dd7f157d</anchor>
      <arglist>(const JavaScriptMatrix4x4 &amp;jsm, const WGenericMatrix&lt; T, 4, 4 &gt; &amp;m)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WGLWidget.html</anchorfile>
      <anchor>a596e6780d7390138d440c2f37bca288f</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGLWidget::JavaScriptMatrix4x4</name>
    <filename>classWt_1_1WGLWidget_1_1JavaScriptMatrix4x4.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::WGoogleMap</name>
    <filename>classWt_1_1WGoogleMap.html</filename>
    <base>Wt::WCompositeWidget</base>
    <class kind="class">Wt::WGoogleMap::Coordinate</class>
    <member kind="enumeration">
      <name>MapTypeControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a302ab44e934f301001c3acf79ddc0d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a302ab44e934f301001c3acf79ddc0d0cab4888bbfce9abc7e1bf9fd52e9c4279f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DefaultControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a302ab44e934f301001c3acf79ddc0d0cae4a7ffd51ec10ca611336505dad09837</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MenuControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a302ab44e934f301001c3acf79ddc0d0cac428b71c3898abd67ca433a41bae7024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HierarchicalControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a302ab44e934f301001c3acf79ddc0d0caa31736b7a72e1f243ba17cdd25989594</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGoogleMap</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aa3161e65e7327f093995ba2ca783cd9e</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WGoogleMap</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad7b54de74f2db00d4b71be6071af0be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMarker</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad80935926cc2a08f6dff26de3480dcc6</anchor>
      <arglist>(const Coordinate &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPolyline</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a7ed22111f2c65851d7b4f5f2e43230e5</anchor>
      <arglist>(const std::vector&lt; Coordinate &gt; &amp;points, const WColor &amp;color=red, int width=2, double opacity=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOverlays</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a77204daba9840d892e3621b129e742d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openInfoWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a90b58b02052aa788efcf0b9d92335112</anchor>
      <arglist>(const Coordinate &amp;pos, const Wt::WString &amp;myHtml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aa9f62ed546a090cc9dbcf3d10769bc80</anchor>
      <arglist>(const Coordinate &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a34df0d680b54a956342d2e095229f9fe</anchor>
      <arglist>(const Coordinate &amp;center, int zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>panTo</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ac1d54272ff541cc54b29ed4fee288931</anchor>
      <arglist>(const Coordinate &amp;center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a6b08ef4a408d75d10d71d005d3c65783</anchor>
      <arglist>(const std::pair&lt; Coordinate, Coordinate &gt; &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomWindow</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a66cf38a3c31b97c08321c5ac9bf71270</anchor>
      <arglist>(const Coordinate &amp;topLeft, const Coordinate &amp;bottomRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a9b4583c4557d756ba1cecab1ab00bf9b</anchor>
      <arglist>(int level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>afbd9cf2dc56673f4870aa91a71c3301c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a74363a089b5b1dcbbd644ab810c94464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>savePosition</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>af6addd98268d64aa33834280b8819d65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>returnToSavedPosition</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ae6abfd1d0942d0559e511caa5f2f5c97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkResize</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a75c3d2a4e9c4acdf786750a10f7691a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDragging</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a83be42bcd7f4be38e04fbaec72a95b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableDragging</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a9b8b0c3f121f498e4cf5256390880ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDoubleClickZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ae4993bd2e7baf017183a4ff3b554c53b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableDoubleClickZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a5cfa10ca7087f3a7f032bdbdcc422e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableGoogleBar</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aed48586350d3e4908459a47ce0822348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableGoogleBar</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a3982558cba9768c4815e7fbb6c23d92f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableScrollWheelZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a39dc1da1fe51f1c285dac04e565fdfa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableScrollWheelZoom</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a90462279e5092088aba4e79c2f4eaab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapTypeControl</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>ad5b1aabd260b3b05e9888718264c40e2</anchor>
      <arglist>(MapTypeControl type)</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>a3b1b5e513502222e89d8fbcfb79a9198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>aa81efcc86e7ab1b6a6701e97d9e3fb02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; Coordinate &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WGoogleMap.html</anchorfile>
      <anchor>adfdd221d9ea430870f052a2180028f73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGoogleMap::Coordinate</name>
    <filename>classWt_1_1WGoogleMap_1_1Coordinate.html</filename>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a4c9df44997cafefdbab28fe680901930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Coordinate</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>abbb42d1557e16098bbae3da50d99a9d3</anchor>
      <arglist>(double latitude, double longitude)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>aedbf38dfae561e239c102e482f0780c6</anchor>
      <arglist>(double latitude)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLongitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>ab3c170ef039993e331448f2ea5d63daf</anchor>
      <arglist>(double longitude)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>latitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>ae53fbf51fbdefe0607557ca3fbe9d93c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>longitude</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a5a3de1da170a93a81f3bcda1b372dc17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distanceTo</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a4d69943233187fc9fea559e347879015</anchor>
      <arglist>(const Coordinate &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1WGoogleMap_1_1Coordinate.html</anchorfile>
      <anchor>a4496fee048f0ea03d2533b787e3273a8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGridLayout</name>
    <filename>classWt_1_1WGridLayout.html</filename>
    <base>Wt::WLayout</base>
    <member kind="function">
      <type></type>
      <name>WGridLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad6dc690b71e636f9d99f1ab6bf257002</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a82fb0e2743d9081893b83003d5263dbd</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a35a10fd71fa00cad962bd0980d9cdc00</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>adfbab1a8c0090423f24371bb5281fcb7</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a95300e5b406b82d9e1993bd96c80cab7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a2dd5c84a8054c1bcb602cb72cb27f898</anchor>
      <arglist>(WLayoutItem *item, int row, int column, int rowSpan=1, int columnSpan=1, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a8e0ae47aa0e7283ce3d4be05249c05eb</anchor>
      <arglist>(WLayout *layout, int row, int column, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLayout</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ab6e0f9aaecfed4dc978a3c0534f844ba</anchor>
      <arglist>(WLayout *layout, int row, int column, int rowSpan, int columnSpan, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a6e64afee237de5665fcd014f407130b2</anchor>
      <arglist>(WWidget *widget, int row, int column, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>add85db41b29855aa620adbcef7e19dae</anchor>
      <arglist>(WWidget *widget, int row, int column, int rowSpan, int columnSpan, WFlags&lt; AlignmentFlag &gt; alignment=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a60713a99ab98907fe5c9f99417fb6493</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>horizontalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a4fe774ed02137f1834f79e9214d93fc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad2a2188bece8a47628dae340108962ae</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSpacing</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a455f8a42d2339a3485a34a9bb4f140cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a540aa44a75a66fe61d5bae8e37ced84b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a7958b26122eb898572bf3117974de00b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a4605de0523f5613096b6cbd983123c8b</anchor>
      <arglist>(int column, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a33099b99582099b9ea4fadcc5b4b9f91</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ad8d1199b57063fb7286be6dab13c998c</anchor>
      <arglist>(int row, int stretch)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowStretch</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a118a1d8599100e6b9ee96618eff91637</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a180c33a8f9e21a7b58f12e055fdb469e</anchor>
      <arglist>(int column, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>columnIsResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a1fe8bc99a587181d85a73465ab20d022</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>a6028853eb5a66d868323d0e034b69390</anchor>
      <arglist>(int row, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rowIsResizable</name>
      <anchorfile>classWt_1_1WGridLayout.html</anchorfile>
      <anchor>ab60cbaf413636b09b09d3b6b43875286</anchor>
      <arglist>(int row) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WGroupBox</name>
    <filename>classWt_1_1WGroupBox.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a9b12382d30cb1aecbe6be0374a0a8dc8</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WGroupBox</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>af6ba26c8f1d3b8fcd5bcfbc9dfcb993f</anchor>
      <arglist>(const WString &amp;title, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>afc668f60e7b6cbeb609c2cb355538d68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a369081aa62b840875cac9ee5d24bd64e</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a44bbe83b4a9af80c5d50e5671c2d2df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WGroupBox.html</anchorfile>
      <anchor>a2ac619eeb41a1c4a9da2404922fc861b</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHBoxLayout</name>
    <filename>classWt_1_1WHBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WHBoxLayout</name>
      <anchorfile>classWt_1_1WHBoxLayout.html</anchorfile>
      <anchor>acca9faa9fd4fd7c0be8816b8bd68ad98</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHTML5Audio</name>
    <filename>classWt_1_1WHTML5Audio.html</filename>
    <base>Wt::WHTML5Media</base>
    <member kind="function">
      <type></type>
      <name>WHTML5Audio</name>
      <anchorfile>classWt_1_1WHTML5Audio.html</anchorfile>
      <anchor>aea5306ece0966777559ee120a2127cb2</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsAudioRef</name>
      <anchorfile>classWt_1_1WHTML5Audio.html</anchorfile>
      <anchor>a47f8875cff3af7b3714200b8b484b5f1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHTML5Media</name>
    <filename>classWt_1_1WHTML5Media.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="enumeration">
      <name>Options</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a5e3e4388b65cf7d9acd01306ee9e10e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Autoplay</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a5e3e4388b65cf7d9acd01306ee9e10e3a1c0932603bbc72bc35090cf7481098d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Loop</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a5e3e4388b65cf7d9acd01306ee9e10e3afadbbd02ce6b418ac0477a8e9c4d1b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Controls</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a5e3e4388b65cf7d9acd01306ee9e10e3a7565510984d0f4640cbeb727ab175a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PreloadMode</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a4b0dcdd59b42e2937b98c3dae081eed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreloadNone</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a4b0dcdd59b42e2937b98c3dae081eed6aa72922385a730be7faae603c2eacb914</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreloadAuto</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a4b0dcdd59b42e2937b98c3dae081eed6ab4f7157dd2af00b7468b22ff8de8b991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreloadMetadata</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a4b0dcdd59b42e2937b98c3dae081eed6a8a5412d64ee9059f9651a3e75c22e1a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WHTML5Media</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a21024629c8aa7deb29869abf32a6a5f2</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptions</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>af85822a204001fb1de970738743820fc</anchor>
      <arglist>(const WFlags&lt; Options &gt; &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; Options &gt;</type>
      <name>getOptions</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>aae699facbd5f3599c920911bfd7d53c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreloadMode</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a610d5cc91715adb27eb270eb1ce2eff0</anchor>
      <arglist>(PreloadMode mode)</arglist>
    </member>
    <member kind="function">
      <type>PreloadMode</type>
      <name>preloadMode</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>ad0db107003cada25e082d27197c8ecbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSources</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>ac3e0aae629eef92b0777d4c8ea9cb8a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSource</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>ad9722ff6302a3e83f7a50abdb38cb43e</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;type=&quot;&quot;, const std::string &amp;media=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSource</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>accedf7641b95c0cba351fa56ad0353a8</anchor>
      <arglist>(WResource *resource, const std::string &amp;type=&quot;&quot;, const std::string &amp;media=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternativeContent</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>aa936f26ee6ee7fc3a4a240c078af1ec3</anchor>
      <arglist>(WWidget *alternative)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a0b701d940f23a054200913c90e59a398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a700fd0f7096b9d5a10480020b1ac56ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>playing</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>aec1267856ddb72a82e0d872e42bd3163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>playbackStarted</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a631ea59e60821c90fa18f7ee7659ccc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>playbackPaused</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a3aef2dd6d73dfd827f1827641eb99fa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>ended</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a4617c95b120eedc0cb4e90d9aea98e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>timeUpdated</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>ac22a695f76473d14bbf0cb0c084ff64d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>volumeChanged</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>ad51258fe57a9bd455cd08226057ef791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsMediaRef</name>
      <anchorfile>classWt_1_1WHTML5Media.html</anchorfile>
      <anchor>a8440736283c86a450dc72b2f27272047</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WHTML5Video</name>
    <filename>classWt_1_1WHTML5Video.html</filename>
    <base>Wt::WHTML5Media</base>
    <member kind="function">
      <type></type>
      <name>WHTML5Video</name>
      <anchorfile>classWt_1_1WHTML5Video.html</anchorfile>
      <anchor>af6e20e2f527a81db4fd3d55e46a88ec0</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoster</name>
      <anchorfile>classWt_1_1WHTML5Video.html</anchorfile>
      <anchor>abb0c3e2be39815b4bc6d53908f6f3596</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsVideoRef</name>
      <anchorfile>classWt_1_1WHTML5Video.html</anchorfile>
      <anchor>ae197ff7dd2ee6e14dc5b41a0061a3672</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WHTML5Video.html</anchorfile>
      <anchor>a808cb87ff2296ed4ff84fc0eea9c8972</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIconPair</name>
    <filename>classWt_1_1WIconPair.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WIconPair</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>abcba8fda209d3dae4869fa8d82d5ba36</anchor>
      <arglist>(const std::string &amp;icon1URL, const std::string &amp;icon2URL, bool clickIsSwitch=true, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a84029cf28869da70946b078841518e54</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>state</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a538584ae901a6d69b7808e326cda09c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>ad6eed0ffbd0915da07e0365eb07ec515</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>icon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a4b9167325de2f95cce47714d2531dfc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showIcon1</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a97187962ca2272b1665aa2ca267c6d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showIcon2</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a774952e5c30f47d0b1d213e01448325d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon1Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>ab5bbb66929dfbdf8918c7ddbf70639eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>icon2Clicked</name>
      <anchorfile>classWt_1_1WIconPair.html</anchorfile>
      <anchor>a9dabd7d16e62298ebab6a95054e50321</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WImage</name>
    <filename>classWt_1_1WImage.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>aa3566a1fb818f5a57c4cc0d298cc71c7</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a42eea962cef07ec071ebae0518d1b48d</anchor>
      <arglist>(const std::string &amp;imageRef, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a3482c9d00484accd1c81fb715c767f6f</anchor>
      <arglist>(const std::string &amp;imageRef, const WString &amp;altText, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WImage</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>abf4394e0350e28074875dcbd3ce30ff6</anchor>
      <arglist>(WResource *resource, const WString &amp;altText, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>afa619104c48e0152f5847d72a5397fc3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>alternateText</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>afb3144944ad2203d35d08c29bab7111a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImageRef</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>acea9ce518f4eec6b19fd4bacc44a52e8</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>imageRef</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>ae3a7a79cd15e7aa7e4e7c3a72873bc68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a509a0636d08916dc14bc1d6eefa79c58</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a2ae66c010a7c8c0fffc772c8dd36f91c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>aa5737b44a5161b8494b2691c20315417</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a32baad2b361ff4660a8354a98e998535</anchor>
      <arglist>(int index, WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a79b9dedd023e423b1b2575588ed7ff51</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>ad1900179902128ddd3d26922c33a3b97</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>ae2dca02b06799eacebc7474569c234b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>imageLoaded</name>
      <anchorfile>classWt_1_1WImage.html</anchorfile>
      <anchor>a54258a16b4ff221694fd79701ce8cd98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInPlaceEdit</name>
    <filename>classWt_1_1WInPlaceEdit.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WInPlaceEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>ad1b55ac6fa3b62c38e3e112fd0a088a9</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a92e099fb0bd5952b57bea38701635d00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>ac45af87bce6ad792a9f9aa3d3b829701</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmptyText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a2d0d57ceb95526cf5e26f783dbb57a23</anchor>
      <arglist>(const WString &amp;emptyText)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>emptyText</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>ab2730eb661ac03214ae446d48b35bd4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a9c2c7f27fae36c6fe373ac9e5b92961b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>saveButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a4c617cd4e05e50ff03b20de1c0aa26d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>cancelButton</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>afa1a731ca5151ba8f6052fe6f516d345</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>a9c060014e820680fa242e051ebb77595</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtonsEnabled</name>
      <anchorfile>classWt_1_1WInPlaceEdit.html</anchorfile>
      <anchor>aac994b226bc2c33ecb36032b8f488933</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WInteractWidget</name>
    <filename>classWt_1_1WInteractWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WInteractWidget</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a76de423b005efb0d216fd6e7204abbc1</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a8669f2d35aad5091837b97bd00f25223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a6d4c957a92eb6ffec59a638dd384c6c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a7602bfbe38090d4acca674afc02f15c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a38f06d1ad95e7599b055f49931236c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>escapePressed</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ab581bba7f0ce02380e9339198bac2f78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ae11e050cce0d4a8f742afa3ef92bfe8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>doubleClicked</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a8865f4bb679e5c3ff2c946ef83248e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentDown</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ad29946ac46183ca238229327479084ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentUp</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a318d761e35388a52eeb3406e6717b28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOut</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a0511484098ce87ed0038b2881ab316bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWentOver</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a89a46ebf7fbcea5a494c4dac13f1dc15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseMoved</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a40c3643603fa861b1ec797eec794aa4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseDragged</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a1ea435a0495d652f36d84f3656cbb8b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>mouseWheel</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a656a0e4d5af72af0190d84dedf0093c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchStarted</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ac7d10a6cae1e23a791b44c0682a3c627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchEnded</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ad378d76c2d222e1ad72f8967b7c2d1a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WTouchEvent &gt; &amp;</type>
      <name>touchMoved</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ac1ea20c5d68b3219612af9d1171b9252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureStarted</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a3c568c747c955aba9967e41aac8ddb9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureChanged</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a700a49b63018898968ac59aeba50a691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WGestureEvent &gt; &amp;</type>
      <name>gestureEnded</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a0e4cba113eacf8d1047977c407e7dfad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDraggable</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a556c14d02388720b1d95b2149be2e867</anchor>
      <arglist>(const std::string &amp;mimeType, WWidget *dragWidget=0, bool isDragWidgetOnly=false, WObject *sourceWidget=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ae7ded9ad52a90fce9d54e8d1c299fd72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>a6400f1359677b000c182b945d5705629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WInteractWidget.html</anchorfile>
      <anchor>ac331a4996af95f7a60264f67d51a74d2</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WIntValidator</name>
    <filename>classWt_1_1WIntValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a89d08b52740d6791ce4741c1cc74cd5b</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WIntValidator</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>af81e1d2d1a0fce7e92fdf3b8b67bfbe1</anchor>
      <arglist>(int minimum, int maximum, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a58ab417ac57782691b6ad6987ad7b8dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottom</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a365500d492560d016b3ba7f263ce282c</anchor>
      <arglist>(int bottom)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>top</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a9534fc0b7b7864e71a80b77dcfbff5ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTop</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a8a804c3ea0811b5c32de974592a1c88c</anchor>
      <arglist>(int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>afe180f56f061c98fcc9de6be20effe38</anchor>
      <arglist>(int bottom, int top)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a15807b522c601992d5275a729ed69285</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>af956eb115e0b77053c33cf6872ace2e9</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a9bc399a9536652c9ab52301669909b6a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNotANumberText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>ac799cd9012ceebded234968a8975f9a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a680b57bde8dacfe52e8e65d4abbcf4c6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooSmallText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>aed9ac49dea2069f723dd1f95a5f02744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a2e474c6f5ffecff9c8d7cc27810b211f</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLargeText</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a873f37b94a25ab9e1102c48f8bd3c7b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>a61217a65efb5d2e06262e3710224ea46</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WIntValidator.html</anchorfile>
      <anchor>aaa26351e1a00502da10a9d67a7eea817</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WItemDelegate</name>
    <filename>classWt_1_1WItemDelegate.html</filename>
    <base>Wt::WAbstractItemDelegate</base>
    <member kind="function">
      <type></type>
      <name>WItemDelegate</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>ac016d3abb5a129df3a4a690fa9094bd0</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>update</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a2cbc2240449a1000650f3c3b5e64bc8f</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateModelIndex</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a8d97be988b846205f61b646c3a424040</anchor>
      <arglist>(WWidget *widget, const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>ad886d265dc00b95d9fb90c022a6322f9</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a378af3d59a2765edca259cd2fb75dc90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModelData</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a7f5f6ee8d506749f9e16463c5502f0f2</anchor>
      <arglist>(const boost::any &amp;editState, WAbstractItemModel *model, const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>editState</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a4efa5822211a5791df55d2d464a5cd4e</anchor>
      <arglist>(WWidget *editor) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEditState</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>afacb5ea1866c2212ad3cf0a616c78857</anchor>
      <arglist>(WWidget *editor, const boost::any &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createEditor</name>
      <anchorfile>classWt_1_1WItemDelegate.html</anchorfile>
      <anchor>a832398b35176a47de56dce8fc89e58dd</anchor>
      <arglist>(const WModelIndex &amp;index, WFlags&lt; ViewItemRenderFlag &gt; flags) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WItemSelectionModel</name>
    <filename>classWt_1_1WItemSelectionModel.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a42fb83302389cc2942cc09a198c0ee00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndexSet</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a4c366757fa7e6b5b6519d34e3c2ac084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a96e391104f8846557ed95f5a93f4f452</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>acbf2a0659f9b5f04becbf5dd02aff9b3</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1WItemSelectionModel.html</anchorfile>
      <anchor>a7bddf47881159cdd36651891954f3a39</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSignal</name>
    <filename>classWt_1_1JSignal.html</filename>
    <templarg>A1</templarg>
    <templarg>A2</templarg>
    <templarg>A3</templarg>
    <templarg>A4</templarg>
    <templarg>A5</templarg>
    <templarg>A6</templarg>
    <base>Wt::EventSignalBase</base>
    <member kind="function">
      <type></type>
      <name>JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a3100e4e460f900ce97b1de554bae1108</anchor>
      <arglist>(WObject *object, const std::string &amp;name, bool collectSlotJavaScript=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSignal</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a6f1d8251daf0abf670c7a654b778d81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aba4f375bcfd61c8938ceeafedd1b79b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a449dbc079722b0ed9a9fd5df43e359f0</anchor>
      <arglist>(const std::string &amp;arg1=std::string(), const std::string &amp;arg2=std::string(), const std::string &amp;arg3=std::string(), const std::string &amp;arg4=std::string(), const std::string &amp;arg5=std::string(), const std::string &amp;arg6=std::string()) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>createEventCall</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>afc04a6ee10c4ac0effe04b406feeb998</anchor>
      <arglist>(const std::string &amp;jsObject, const std::string &amp;jsEvent, const std::string &amp;arg1=std::string(), const std::string &amp;arg2=std::string(), const std::string &amp;arg3=std::string(), const std::string &amp;arg4=std::string(), const std::string &amp;arg5=std::string()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a401ed9f5d5e0611b6dbd6eb28022f65f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ad39bf916e97103eb678bf2246373d22f</anchor>
      <arglist>(const F &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>ae3d48968885531f8d64f05d8b024b817</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a362028c525116906c2dfce28b2566318</anchor>
      <arglist>(T *target, void(V::*method)(A1))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aabe4c91b7d3fdf44f4f047b69b4cf3d1</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>aa2eeacaf71554d7cd8288478d76cf11b</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a16d978f531a0b816837bd2f244efa3d8</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a8de959fa99c06c11953b0ac02dcac7e8</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a9da2fb64bf9cdd9e0a7a1fd4341a2745</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5, A6))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a66ef05cc8d6f98bfbd5c7402c3997627</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a75643865204ab65b538f4ff80ed8f309</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1JSignal.html</anchorfile>
      <anchor>a8bcaf238774e3b0efd9c31c903550fee</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::JSlot</name>
    <filename>classWt_1_1JSlot.html</filename>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a0d7d51d1bfe2c1fe86fd0da1aa6100a2</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a5a029953497443c38ba50514194a7925</anchor>
      <arglist>(const std::string &amp;javaScript, WWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JSlot</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>ade213c06a4ee987a4ec39446e6954e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJavaScript</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a4e28a8ef6d2965aeaac0c5dcf587bbbb</anchor>
      <arglist>(const std::string &amp;javaScript)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exec</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a3d65b00a8015e556580527b52750ef87</anchor>
      <arglist>(const std::string &amp;object=&quot;null&quot;, const std::string &amp;event=&quot;null&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>execJs</name>
      <anchorfile>classWt_1_1JSlot.html</anchorfile>
      <anchor>a520731f1245cb9a757675a93372c761c</anchor>
      <arglist>(const std::string &amp;object=&quot;null&quot;, const std::string &amp;event=&quot;null&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLabel</name>
    <filename>classWt_1_1WLabel.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>aca64fdaa3c35e2127ce3903781584c24</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a2d42bd4a25a5a8fc9ad4896e078f64d4</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLabel</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>aa52eaf9dc8abb5f538cec01bb617c1d1</anchor>
      <arglist>(WImage *image, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>WFormWidget *</type>
      <name>buddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a9bc62e3dad89cc51108bbaadaa47407f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBuddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>af468c613eab7d184c68fd6ae20978de5</anchor>
      <arglist>(WFormWidget *buddy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBuddy</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ad01592a750814678ef198b8aecd87ae4</anchor>
      <arglist>(Ext::FormField *buddy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>aad258cec78e988d24cb457500de2b8a4</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a8d8d0acd3bac7808415de310328dd8ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ab77dd95cd3a13e19c916bb803f28a520</anchor>
      <arglist>(WImage *image, Side side=Left)</arglist>
    </member>
    <member kind="function">
      <type>WImage *</type>
      <name>image</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>ad664977a4924cecface67bce34551ad1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>a50e413fa171f301129b39a4d4ed6d2fd</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>af1cbfcf44cd42532b81de8ed754a64da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WLabel.html</anchorfile>
      <anchor>afafb4849c9498834e9c8aeef19b5dcb7</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayout</name>
    <filename>classWt_1_1WLayout.html</filename>
    <base>Wt::WLayoutItem</base>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>afee1a345112b107158765695fc6837eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ad4a778298c01d290692afc77e441c629</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a886d2ec4b6b97524ba3dff93252e6540</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a8c8d94070a51e669f8077249b67742ae</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a3f5e0f62a0deb8f2473e52c5270128d5</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a799b3cce5c1717b18e54c14471e84033</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayoutItem *</type>
      <name>itemAt</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a3d48e5e4f56ad5d1b0e60180ebc91442</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>afecba709ae19b93ef9bbe167650dbc5c</anchor>
      <arglist>(WLayoutItem *item) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>aaf26f397f48824ed1e359d6a603eebe8</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayoutHint</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ac8fa1927e7c9b15e3e673cbf6a473c34</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>ada2f5beaa8a0153451ba55581ea9bbf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a82078a08c5a21aa67bd5a83c377d437d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af0448e22813516009edc5555572a2043</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>aeb31f2caad3ed9b1ab2b06327cc92bb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af18bae8c743c9f9a5cabee58826ffb45</anchor>
      <arglist>(int left, int top, int right, int bottom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getContentsMargins</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a90756cc8765259a26f8d54fd4531c7b3</anchor>
      <arglist>(int *left, int *top, int *right, int *bottom) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a7ea1c353ac9d38a94ad08fc0cb8d6c25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>aa1549c20751b9a50cbc47d3a47adcb21</anchor>
      <arglist>(WLayoutItem *item=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAddItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a8cf7d6517ab800c975a25dfc6682c58f</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateRemoveItem</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a31c7495263f67a4fbc8b384784af628d</anchor>
      <arglist>(WLayoutItem *item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLayoutInParent</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>af196e38edc970646d765f003a6cc352e</anchor>
      <arglist>(WWidget *parent)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a0c3ceda2095c8414c6f10cc4c632f2bd</anchor>
      <arglist>(WWidget *parent)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WLayout.html</anchorfile>
      <anchor>a15f0f5f75cc008b12619d643153889da</anchor>
      <arglist>(WLayout *parentLayout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItem</name>
    <filename>classWt_1_1WLayoutItem.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a40dd93ac8deba8535e0e5e6645f64ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a95f14880009c9121d2f2d06cdf3204f0</anchor>
      <arglist>(WWidget *widget)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a3f81b4d198401ae493276a61be6784cf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a06b127060eaf8a0b87a994b483d493e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a05a18a6a59ef9e36bcb5d47199b18ba1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>ab2f17122cf9589657bc0e6fa5e3ea560</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>a4d2c60ec55048746b9f197d9b5de2a0f</anchor>
      <arglist>(WWidget *parent)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WLayoutItem.html</anchorfile>
      <anchor>ad810fbebeb2dce998e538eb31c060430</anchor>
      <arglist>(WLayout *parentLayout)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLayoutItemImpl</name>
    <filename>classWt_1_1WLayoutItemImpl.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLayoutItemImpl</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>ad558805de90c6edc63aa7603f64d4c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateAddItem</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>a17f642513739083112ab2a69a05ca0a4</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateRemoveItem</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>a34f32973eaa21e827dabdec5a797e2b6</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>a8ea165afae63f97652bdb6854f2300f7</anchor>
      <arglist>(WLayoutItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>parentWidget</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>aecaf3ff1b598f7aa99730b337e5ef2f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHint</name>
      <anchorfile>classWt_1_1WLayoutItemImpl.html</anchorfile>
      <anchor>a2ea7b787edada76fc0c9b7908caf673a</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLength</name>
    <filename>classWt_1_1WLength.html</filename>
    <member kind="enumeration">
      <name>Unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FontEm</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a3c8be5b087b150df97498adf7a69342f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FontEx</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0adcb9f05790b02548f1185fbceac6bd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pixel</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a0b1fa4c1bd7adb92e1a04d62b96d30ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inch</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a7e715eece268ff7455eb7f80e049c839</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Centimeter</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a92c81cba9e5ac72dd65295572da618c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Millimeter</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a160938d7f938d245ee31f5e34be0f6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Point</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0aaf7ad2af268eb2197f6ebd323a8a3ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pica</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0affd121933f44c8231c523747efa64a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Percentage</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a908caf5d6be7e244e24598e6d22cd4c0a304d9ef07db638690997830a7b348db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ad2a8e7901084735819bc1b29fdb9a930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLength</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a1c06a75adecaa2dc0097e82f61a20e9a</anchor>
      <arglist>(double value, Unit unit=Pixel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAuto</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ab4c9733029342fdbc1dee34a523ee40d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>ac4063de548d24148fda45a7bced29ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Unit</type>
      <name>unit</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a37b71e44633dd09a63b8a1ebb06e9a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>cssText</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a0a25adc9027a39ead32e06a201ffc00f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a45e8d143f73d728cac9c68b537edd2b4</anchor>
      <arglist>(const WLength &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a42fb15b07a6ba7ab12c688f2f05209bc</anchor>
      <arglist>(const WLength &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toPixels</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a3f4a8633434fd5190a60dd693f4a2021</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static WLength</type>
      <name>Auto</name>
      <anchorfile>classWt_1_1WLength.html</anchorfile>
      <anchor>a0cf39ca4225776879d56ade60320c31a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLengthValidator</name>
    <filename>classWt_1_1WLengthValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>ad6ced22261c4dd0f249011a872c1ecbe</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLengthValidator</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>aee3614e5244c8bdbd226a781e014d82d</anchor>
      <arglist>(int minLength, int maxLength, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a6a772dfac01805c714374fd290ff6e6d</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a68dede1a5faa6d83f9347d8dde68f6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a1f1742e015228319a10dd42a38ef79f4</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximumLength</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a829f8c83606ed31a982e99fcd63b15fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>ade2cb48af62ad35c7d7e50155fbf0e45</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a398750e14a071a4a7aff0d46d2266aaf</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a61299b45c89e93a8d7aa7f2570242286</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooShortText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a39f2dd4516c2b53c84343d5adfe2f384</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>aa24dd0a946f937e0dde081003bf30fec</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidTooLongText</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a5ba8fb18ad613678b7f744b05dda55cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WLengthValidator.html</anchorfile>
      <anchor>a2e8143bc9dedb9d4f7f77f3048bf5ff9</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineEdit</name>
    <filename>classWt_1_1WLineEdit.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="enumeration">
      <name>EchoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a2654d590e41b758cca16739d4bf0159c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a2654d590e41b758cca16739d4bf0159ca4ebd4885d3cb474d78a43c414d71181d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a2654d590e41b758cca16739d4bf0159cad8804194006eac81d4072805a0d74666</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a287f11cd278eccfd293c7cc715f72b65</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineEdit</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a40fe6e402a904911e7389e4e16498b05</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a4c6c5a52deefa5a246e0638f1572d0d8</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textSize</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>af2886f31812bd56dea9897606546f5f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>addb99c6ab5483836adf44a2706a410af</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>ac74b58779cb635898cac13e81d8b0c7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>aaeca334d8a47be029b6a44912b01ed5d</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a0f5d01ba6e862a856b283d600e65e6ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a27c9bc232bea0ab76ee266be3325a10e</anchor>
      <arglist>(EchoMode echoMode)</arglist>
    </member>
    <member kind="function">
      <type>EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a7454516e7195cecf2f990af35b1470d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectionStart</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>adb99191dd8589416f75060e73799eddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>selectedText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a838b9d03e94a86be02476bb32044fc75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSelectedText</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a2376aae9311b5e658e44e52b1ffe38fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a5b6904686629a61be78396dc47dcfe05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a7eb722b7f1657a8714280533d8f25b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>af347d0ad651b76abea5ee5dcae295db1</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WLineEdit.html</anchorfile>
      <anchor>a337dcba8f79f886b86c0d9bf7b721c75</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLineF</name>
    <filename>classWt_1_1WLineF.html</filename>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ab533503505006e748bf0681e7f673ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>af5c42eaf0f3bf07d59be34c5c1a8d3cc</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WLineF</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a76ec4074899bddcd5f5f7c98b325aa9e</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ae77953fa42db1dfa3ca31ea724b9fa2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a3cd53cb1c953a0eb8d46d6093c4fd464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>ab35731a2fb8572145cf44ddaead5cbb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a266e3d68414a37bdd4e594796e70b51b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p1</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a26d62a64bdc03ec0c89d081c3542becf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>p2</name>
      <anchorfile>classWt_1_1WLineF.html</anchorfile>
      <anchor>a4775a8b23cc30daf2917ac938711706f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLoadingIndicator</name>
    <filename>classWt_1_1WLoadingIndicator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLoadingIndicator</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>a760be320d6a5ca3d8035606d0803ed36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>a0ccda9318560b1c16086899504842ad4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WLoadingIndicator.html</anchorfile>
      <anchor>a33f6df2d9f56e8431874b2a0efc70ab0</anchor>
      <arglist>(const WString &amp;text)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLocalizedStrings</name>
    <filename>classWt_1_1WLocalizedStrings.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WLocalizedStrings</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a04d2e40e52b9827bb5eb4759b9928f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a71b2ca0b40eed56ee1acba8f865e7220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a2ea29ba180ed9af25cf561f0df6a995d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WLocalizedStrings.html</anchorfile>
      <anchor>a05666a0ae917e4fd6deafdd2f4b98ba2</anchor>
      <arglist>(const std::string &amp;key, std::string &amp;result)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger</name>
    <filename>classWt_1_1WLogger.html</filename>
    <class kind="class">Wt::WLogger::Field</class>
    <class kind="struct">Wt::WLogger::Sep</class>
    <class kind="struct">Wt::WLogger::TimeStamp</class>
    <member kind="function">
      <type></type>
      <name>WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>aa2eef50d172fa9766e3500675c814535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogger</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>acb96bbbeede82e03a9489f0fb1c43e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStream</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ae851860f76c299bca96321b7d867a503</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFile</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a6d8a07bc92824fe32a123094e7516544</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a8287b40a0699797f63de2fe5deaaae9a</anchor>
      <arglist>(const std::string &amp;name, bool isString)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Field &gt; &amp;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>afbbcb96569a0296566d50c0cf1333c2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLogEntry</type>
      <name>entry</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a38d62bf3508e191c214c26d1959e9988</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Sep</type>
      <name>sep</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>ac368dcce6c4605855bce2807aad0d267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TimeStamp</type>
      <name>timestamp</name>
      <anchorfile>classWt_1_1WLogger.html</anchorfile>
      <anchor>a96559cbf73a0d3647aeeac6d45bcc6b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WLogger::Field</name>
    <filename>classWt_1_1WLogger_1_1Field.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>a0abefe7874986ba1fb424c63c13870a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isString</name>
      <anchorfile>classWt_1_1WLogger_1_1Field.html</anchorfile>
      <anchor>a6d4db14999409ed24e3cdfcb81830e0d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::Sep</name>
    <filename>structWt_1_1WLogger_1_1Sep.html</filename>
  </compound>
  <compound kind="struct">
    <name>Wt::WLogger::TimeStamp</name>
    <filename>structWt_1_1WLogger_1_1TimeStamp.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::WLogEntry</name>
    <filename>classWt_1_1WLogEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>ac3c172c5fa69234cb4f720b67656eb6d</anchor>
      <arglist>(const WLogEntry &amp;from)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WLogEntry</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>ac67d1795817f894bdc6f27d07083f37e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>af8046b0ecb69a59ae7beb9c45996f2a3</anchor>
      <arglist>(const WLogger::Sep &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>aba127b67d182be2f88d292dd65706faf</anchor>
      <arglist>(const WLogger::TimeStamp &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>acee453e6fa56712d4930cf4a172eaff8</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a90e49944bd11d007e86adaf7391450cb</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>WLogEntry &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WLogEntry.html</anchorfile>
      <anchor>a2e998923dc2ec6d908372c91e3aefedb</anchor>
      <arglist>(T t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMatrix4x4</name>
    <filename>classWt_1_1WMatrix4x4.html</filename>
    <base>WGenericMatrix&lt; double, 4, 4 &gt;</base>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a04573deca065c719da5933a5370e2d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a1a85e8ec8c8f80ea1643b0bc72006c63</anchor>
      <arglist>(const WMatrix4x4 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a179ae2bb8dcf43871511e2386e920465</anchor>
      <arglist>(const WGenericMatrix&lt; double, 4, 4 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ae7bb65db266e934915fe8b1ce126eff8</anchor>
      <arglist>(double *d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMatrix4x4</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a3e09a062ad58e4ea5a153baddec50621</anchor>
      <arglist>(double m11, double m12, double m13, double m14, double m21, double m22, double m23, double m24, double m31, double m32, double m33, double m34, double m41, double m42, double m43, double m44)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>adad3c97a21999be0826bc244193ec0c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipCoordinates</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a271c40069f274452261ca0f0e328700a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frustum</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ac55add720d259f8d601401bc87ba9b71</anchor>
      <arglist>(double left, double right, double bottom, double top, double near, double far)</arglist>
    </member>
    <member kind="function">
      <type>WMatrix4x4</type>
      <name>inverted</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>ad9803d00b3214247229c2e61948a3e3b</anchor>
      <arglist>(bool *invertible=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lookAt</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>acc42a660a8a642498c5e88581238767a</anchor>
      <arglist>(double eyeX, double eyeY, double eyeZ, double centerX, double centerY, double centerZ, double upX, double upY, double upZ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>perspective</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a82082588cf44d60636cd934a598743d4</anchor>
      <arglist>(double angle, double aspect, double nearPlane, double farPlane)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a018751f0f4359ccf43fe3e4ca53f20eb</anchor>
      <arglist>(double angle, double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a2cd4dd1510fd69374b8a6bdf4cdffebd</anchor>
      <arglist>(double xFactor, double yFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a8074ced26218dd52541abd094faf9815</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>adba26fe582056591d246e8cbea8cdba7</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a65cea270b294bcf2db233d1f6113cdd0</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WMatrix4x4.html</anchorfile>
      <anchor>a598fe5520127436df6fdfdf833b8b869</anchor>
      <arglist>(double x, double y, double z)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMemoryResource</name>
    <filename>classWt_1_1WMemoryResource.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a70c4b30cfef23b4a1ae692a4c90ead2b</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a8e72d3dae82e6c1a417bdc8a0439ab34</anchor>
      <arglist>(const std::string &amp;mimeType, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMemoryResource</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a2060c05ef2cb27ef6d7a5cf204a053f5</anchor>
      <arglist>(const std::string &amp;mimeType, const std::vector&lt; unsigned char &gt; &amp;data, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a330bf924bd2d01de7dfce15778b56d48</anchor>
      <arglist>(const std::vector&lt; unsigned char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a9ad4324110014390132405e941c9c87c</anchor>
      <arglist>(const unsigned char *data, int count)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>mimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a00b0908ba8be1c51ba964a31d6d43712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a057ea5ac18daacf2894c28e5bfbbde60</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WMemoryResource.html</anchorfile>
      <anchor>a7800a19988ddf5af4e4ffe0f323316ae</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenu</name>
    <filename>classWt_1_1WMenu.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a9a67c54e9bfe9b2f594a54dd18a9d8a4</anchor>
      <arglist>(Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aedc7dcfb468fedd82eb6e01ddcdd3f77</anchor>
      <arglist>(WStackedWidget *contentsStack, Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WMenu</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7e2fef60ee49edaa9056b3284964576e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ad7840197cc0caf0430792b9f4a0df60d</anchor>
      <arglist>(const WString &amp;name, WWidget *contents, WMenuItem::LoadPolicy policy=WMenuItem::LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>acbccfeebf2c93244516dec81dcc56fda</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a63819cb0a445ab7ad364f5b0e241b67d</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a7bafc33564cb06d980d75e2f4d89f28d</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aec1801d047dc0f150d1cc12b801aa6c2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemSelected</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a0303879705bcdd8dbffc2d1528670d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemSelectRendered</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8737f262f99d0db0a0f4b7aeb01cfe2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a97c9be1df48cb0d27e2e4b904b51e184</anchor>
      <arglist>(WMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a1040233afcd0372468faff230c685825</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WMenuItem * &gt; &amp;</type>
      <name>items</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>abb90d70d722ce95e748b3ed0b88168b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WMenuItem * &gt; &amp;</type>
      <name>itemClosed</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ab9fa68e381972fb5385478b1e9eb6c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ab3d880e2b089bb084d5634130d61f4d7</anchor>
      <arglist>(WMenuItem *item, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a20e921974ecea341bdcfd5df9596ed53</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a39e27cd34e0031206e4d0baecf4c9d0a</anchor>
      <arglist>(WMenuItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemHidden</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a207ebaad9bb29b1c936b28068e28a96a</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a294d53469b71cb5d35fa59865c3b75cb</anchor>
      <arglist>(WMenuItem *item, bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ac647478bd0bf0086a52a9e572755b3a2</anchor>
      <arglist>(int index, bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>add9599868dd2d679c532e15ce42ef424</anchor>
      <arglist>(WMenuItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isItemDisabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>acec9860582f2f043fd3dbf42649dbce8</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>currentItem</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a4e94081f83aee45db0ffd43073f2b8ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a467ab0da55b4584f1b46abe931354f3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8f241ce7b48d30c0c5f60abcd8e38a90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderAsList</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8bc28b9d703b93569846441213877d4f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renderAsList</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8cc3a34a38722aa07ad8e5e183ed6af3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ae1807eba0b1002808dbec779d00a79dc</anchor>
      <arglist>(const std::string &amp;basePath=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aa8e47ce1b3e21eb64202e6ab1b5e48b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aa5cf3b5b9919d2f130c8acd156447132</anchor>
      <arglist>(const std::string &amp;basePath)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a8cdf2f75f67efa0c10c6fb25fd1cd4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WStackedWidget *</type>
      <name>contentsStack</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a76785bc6b3ca3f99835bd8a75e6c69d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>aea92a8e3abe2ac6130eb93acec605ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>internalPathChanged</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>a1b4eb0bd90bb2b9a0661fd04ec35224a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>nextAfterHide</name>
      <anchorfile>classWt_1_1WMenu.html</anchorfile>
      <anchor>ae7e3b026c0275dcb0ea62d4449e36468</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMenuItem</name>
    <filename>classWt_1_1WMenuItem.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5e276ed0505694a7b89a1dd0c62aa55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5e276ed0505694a7b89a1dd0c62aa55aa58296165dae031cb608e3d198ed0dee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5e276ed0505694a7b89a1dd0c62aa55aa7917744540a0fbf7f6822014550f990b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMenuItem</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a772f165f3dc02138c28d74f1f42d1a45</anchor>
      <arglist>(const WString &amp;text, WWidget *contents, LoadPolicy policy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae9f4792069fcf2f3410c002fdab2d2f1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a2061c3c242e98e53c820bfa500db492c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a4291756303dbf128b718679cdb907a5a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>pathComponent</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5ab0b5430b9fb852a45886deb0ff01b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCloseable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a59b6dee6c95ae958f0c3b76d5ef7272d</anchor>
      <arglist>(bool closeable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCloseable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae03b46148932c131c587309d467e8726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a9da31eaf6a40078207bbf484d21b9285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a0b58d771300d77ca4469cb3c593fc5a7</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae1f847ff58f4cc42074d17533b6d630f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a0adfa71810c98c38de6e320fc055fef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ae3d9bf7a2961a00164fea173e21b8506</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a68e76f69ea40e66b9f478a84a06e44a8</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>af0516fd47f049e1ffc571bccfa45c65e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>aa45b04a291e4d07d704bab6fd0341794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a777dd93e35f1eb7d91e6f6f2795918da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ab762c297976419ee419884572b7e7506</anchor>
      <arglist>(const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>ac3cb0dce81168657669e9574950618dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>menu</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a768d7928949e1d54c0e85dba488e3ea6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a961bb119e2231aa47d31d829178899d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>itemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a185b334943c3e07d63d3e45a17e960f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a9acd8465249e221093f87d9a726c33af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createItemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5dd1286e97b110b621e00e02e58a15d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateItemWidget</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>adf18031f469001bdd5333cff0a66a9a4</anchor>
      <arglist>(WWidget *itemWidget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a3af62f2a97827c844e021ad2dd3f6085</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderHidden</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a42439ed877132ef8da02b6215bd441ab</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SignalBase &amp;</type>
      <name>activateSignal</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5f1d03e160011fcd39759b681f8bc063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SignalBase &amp;</type>
      <name>closeSignal</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a41f18df878ec8f23247c4c1e9d2ee5e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WMenuItem.html</anchorfile>
      <anchor>a5a000f3fe0b005bec22153f44a50bd12</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageBox</name>
    <filename>classWt_1_1WMessageBox.html</filename>
    <base>Wt::WDialog</base>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a02fe68c3f577dad4438c85564418292f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMessageBox</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>aa77b55235ca91e331c8574171caabfbb</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, Icon icon, WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>aef66b54dc12ec478e218d561880254e8</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a1e1dffabe0d91e84f6f504ffb600c4a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>textWidget</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ada70275e7f0d9fc067cd5a1c553a031f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a194dc23e212770e494d459f2426f9ae8</anchor>
      <arglist>(Icon icon)</arglist>
    </member>
    <member kind="function">
      <type>Icon</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a0ff9580eedf4a3e6b74f27eae71e23ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a9d07bb99d17c38128c79f9c7ecd42963</anchor>
      <arglist>(const WString &amp;text, StandardButton result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a1757ee241b2df0045623a6bcad707dc6</anchor>
      <arglist>(WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; StandardButton &gt;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a71c9a2cce4be7c3a5e33718c8ec924c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPushButton *</type>
      <name>button</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a0e95f906d321b5c5cb574abc25716aec</anchor>
      <arglist>(StandardButton b)</arglist>
    </member>
    <member kind="function">
      <type>StandardButton</type>
      <name>buttonResult</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ac07ce4dd360c8305cdc1e08642e32a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; StandardButton &gt; &amp;</type>
      <name>buttonClicked</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>ae9d2caaa82244b2b195e9d3e011bc740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>show</name>
      <anchorfile>classWt_1_1WMessageBox.html</anchorfile>
      <anchor>a18abecfdc7233991563e5b08c3200aba</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WMessageResourceBundle</name>
    <filename>classWt_1_1WMessageResourceBundle.html</filename>
    <base>Wt::WLocalizedStrings</base>
    <member kind="enumeration">
      <name>Scope</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a384dd7fde994d5419c87b069b3c3226d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WMessageResourceBundle</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>aecfe527e2123bf7793d926f71dc2ed23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>use</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a01368946b2a2aaceab3a64cddb1cb1e2</anchor>
      <arglist>(const std::string &amp;path, bool loadInMemory=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; std::string &gt;</type>
      <name>keys</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>aef1673743006fac449c095690aeff413</anchor>
      <arglist>(WFlags&lt; Scope &gt; scope) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a8dd275eff8f823ee58a1e673a79b71e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hibernate</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a5e6c391a95229691fcae8c058c637b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resolveKey</name>
      <anchorfile>classWt_1_1WMessageResourceBundle.html</anchorfile>
      <anchor>a22878a466da85139384133f01c7fec77</anchor>
      <arglist>(const std::string &amp;key, std::string &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WModelIndex</name>
    <filename>classWt_1_1WModelIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>WModelIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a29431c83f8ed71654e213ec4aae21813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a0e6568dd7113662c3c378e2084729581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>aa4f1385223391c46ee200a57672f6046</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>internalPointer</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a44aabe692bba87ba144c1ab9a7f98eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>internalId</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a7ae49c4d0edaf9a520e6f5e8a62c3904</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>child</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a2c01a7ea6cbb423eec3f4d12f26324c7</anchor>
      <arglist>(int row, int column) const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a0e6380caae0e785fdea9e30e0a95eec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a7f05920329ca4b7fdbb10931afdb634e</anchor>
      <arglist>(int role=DisplayRole) const </arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a04877832f757772b8dc7e6b30fb3638c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a1d4b05ee51c5c6961d6123565fd77c82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a9fe91b75030a8a7373e3262fbbc6cad6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a6bb6b3624c4d75e3a495860e46c04f9e</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>ace2743acada845b3d4912e70c9787eac</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a29a0a0ab3e961b8087d95b7c62555cd1</anchor>
      <arglist>(const WModelIndex &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>encodeAsRawIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a93c11e136a0fdc596eb745cc7fce7033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>decodeFromRawIndex</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a084da8a1b7f4de1f1c126aeb721425e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>encodeAsRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a7626f089fcd0440dff3f91a4b3ecb04e</anchor>
      <arglist>(WModelIndexSet &amp;indexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WModelIndexSet</type>
      <name>decodeFromRawIndexes</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>a14760130fe8b1abb354c6bba3d60f07b</anchor>
      <arglist>(const WModelIndexSet &amp;encodedIndexes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isAncestor</name>
      <anchorfile>classWt_1_1WModelIndex.html</anchorfile>
      <anchor>abe65ea47581a12a7db6caa9c0b2f8bec</anchor>
      <arglist>(const Wt::WModelIndex &amp;i1, const Wt::WModelIndex &amp;i2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WObject</name>
    <filename>classWt_1_1WObject.html</filename>
    <member kind="typedef">
      <type>void(WObject::*</type>
      <name>Method</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a6ef714d6ef0060b78c039e729b913aa9</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WObject</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a1da12f5d82488adcca912c596b9398ea</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WObject</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a45d6c07b134db69687bd1b49025799c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a5c5cc1d7aada99baf97d0dc203e42154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a64ce31cadb378c4eba81224f43bf493d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>objectName</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a5cad0cc3f73402de1422747653ece18f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlots</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a92d8b00edc79b7a60d41d7c088f50436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLearnedSlot</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>ae06fa3064a80f857b3b05123ef412bb2</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>ac00d775170f47e715894b24de6b869da</anchor>
      <arglist>(void(T::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a18c9870a4944cf1e802c9b94fc2a55a6</anchor>
      <arglist>(void(T::*method)(), void(T::*undoMethod)())</arglist>
    </member>
    <member kind="function">
      <type>WStatelessSlot *</type>
      <name>implementJavaScript</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a6b6619da758adfc3c0c8cd4a06d9a4c9</anchor>
      <arglist>(void(T::*method)(), const std::string &amp;jsCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a945f972be4331bfe46221263e04ae9ed</anchor>
      <arglist>(WObject *child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChild</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a1f811eeb5f0aa37b5b1931497cd9f163</anchor>
      <arglist>(WObject *child)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WObject * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a66c8da3f967545ceb585ed574f68b8cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WObject *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a2af8f7ec8d3807d434e1f70d1245c6b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>aae1e4d3444723814adfc9717e14b693a</anchor>
      <arglist>(Method method)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static WObject *</type>
      <name>sender</name>
      <anchorfile>classWt_1_1WObject.html</anchorfile>
      <anchor>a413deb54de40ee278dd554e4960d58ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WOverlayLoadingIndicator</name>
    <filename>classWt_1_1WOverlayLoadingIndicator.html</filename>
    <base>Wt::WContainerWidget</base>
    <base>Wt::WLoadingIndicator</base>
    <member kind="function">
      <type></type>
      <name>WOverlayLoadingIndicator</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>a1070617b610083d12d150d5a7c3f37a3</anchor>
      <arglist>(const WString &amp;styleClass=WString(), const WString &amp;backgroundStyleClass=WString(), const WString &amp;textStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>aa2e776a3e592a0426aec553446819e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMessage</name>
      <anchorfile>classWt_1_1WOverlayLoadingIndicator.html</anchorfile>
      <anchor>a14abae6e7193229ad71d7804c6e7467b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintDevice</name>
    <filename>classWt_1_1WPaintDevice.html</filename>
    <member kind="enumeration">
      <name>ChangeFlag</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Pen</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1a5115beca6c99c7926b34aa1497ee7ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Brush</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1a794b5f529f07d07aeda7d3efcf0d2a3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Font</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1a6fbbb5b0f6fd27292f8c9f6205551a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hints</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1aedd545e238e65eb64dd635e04a964876</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Transform</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1a9e4822cf50f25dac9f08bbc6c87ed794</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clipping</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1a5c823e2787166e516c3def8821a42936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shadow</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a1a2feafa01212eba9ad6c7b484ad8da1afb1b79f7df6cc8b064a3ff29833215e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WPaintDevice</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a239035e9459e17407da0c8e2d28715bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a9a0d38acb408d4520d0dd520c93d47e0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a24c7e1363440e6994b44381ebf443157</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ab3a4c9799e46ab66c0f6cb4182e9cb72</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a605316797b1aa4be60c24d95fc5a1ab4</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>af92ff3c6d2f5c351c6931306d9cc1162</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imageUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>abd267ca3adb6c394079042810864ac9a</anchor>
      <arglist>(double x1, double y1, double x2, double y2)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ab3c368b79fef8bc53681821610dd2077</anchor>
      <arglist>(const WPainterPath &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a65ffa97ccee3d4960a132646eca9a6eb</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a04d6f9e0653a9785662c1e987b597cc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a75827be2076716985533dbc75dfdc512</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a7dc74a2c7c98e38c7851277313d313f6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>ae1c75c6bc0e5a2d6322b176f6f13403c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a8ac85385056ee15548f50f0ba4f94837</anchor>
      <arglist>(WPainter *painter)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WPaintDevice.html</anchorfile>
      <anchor>a04c9ccfb802ce41a41b5b128c16d0709</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPaintedWidget</name>
    <filename>classWt_1_1WPaintedWidget.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="enumeration">
      <name>Method</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afa5ee04c391e6ac67d58740fc80c6923</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InlineSvgVml</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afa5ee04c391e6ac67d58740fc80c6923aeea4494d5f2a458fbdacea02d1e009a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HtmlCanvas</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afa5ee04c391e6ac67d58740fc80c6923ace6fa43830fac95b0f042cd1438e41df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PngImage</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afa5ee04c391e6ac67d58740fc80c6923a21638ccefa8f41adf2fde2986a8e02ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>afdb2dbe95de7b97d77a1778724395db6</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPaintedWidget</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a3e28c52034a50cb9c2c2e7a9e979a90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a2a3a3be8b9a8c6d56fad4b64b370fdd4</anchor>
      <arglist>(Method method)</arglist>
    </member>
    <member kind="function">
      <type>Method</type>
      <name>preferredMethod</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a701e81be3104d98a02f4cf7da9ec3a7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a3d4b42ac400fb9ba56c6b02aa4615775</anchor>
      <arglist>(WFlags&lt; PaintFlag &gt; flags=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>aa57b940110d240951d0e3a6d03390319</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ac4c031c7ab47e85f27aac09b7fc37bea</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>af11281366adb6c4d7966b3b19651ea0f</anchor>
      <arglist>(int index, WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeArea</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a0147ad94c849d437be8bfde14df579a5</anchor>
      <arglist>(WAbstractArea *area)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractArea *</type>
      <name>area</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a38786c86ffb7c62ee13b18f0874cb262</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WAbstractArea * &gt;</type>
      <name>areas</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ae3cfb09afc47aa57c1ca9fda0e3cbb5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a0c4a7fd06c6e3092283dedc02214f64e</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>ad8ce22eff41754c8616f45851f57fb1a</anchor>
      <arglist>(WPaintDevice *paintDevice)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WPaintedWidget.html</anchorfile>
      <anchor>a15c48f15b7b920ab2577caade798a2fd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter</name>
    <filename>classWt_1_1WPainter.html</filename>
    <class kind="class">Wt::WPainter::Image</class>
    <member kind="enumeration">
      <name>RenderHint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a605a81a1712a0dd0189044fc598fd5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Antialiasing</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a605a81a1712a0dd0189044fc598fd5ffaadc2e7f25121334e55c3f569173ec5bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowQualityShadows</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a605a81a1712a0dd0189044fc598fd5ffab9625abcca35b8cb964fdb52a4dbf3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a420b1e54536d4815534f31208a825b54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa9e93aac4be32b5c0943360d9cf8c1cc</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPainter</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a611557a8722bc49df70a1a2dd79628c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>begin</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a6b81663b5599f0736ae5099ac7325d44</anchor>
      <arglist>(WPaintDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a7a748d6ee49034a0996f9404eac9c2d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>end</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a50beb0c8cb77c12e2dee807e4fe4bcb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPaintDevice *</type>
      <name>device</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9d2e545f5506fd743a286618351c9b51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderHint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af859825a00ff428e773c2abeb328f078</anchor>
      <arglist>(RenderHint hint, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>renderHints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a6be5dd738e97d35b91aaaea1d086b4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa79220ed9456f67a393009e5c5eea27e</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a96c03e411d46cd720f454504f53491bd</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa34b0972745692d55bc03ff1c57f1f4c</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChord</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac8735155d03ab0332a66880e251b0fc2</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a5a1969356a8edae0cdd3abfc141082a7</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawEllipse</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac46f725e54280bd6ace0e941eced790c</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae36e5ce0c6a324ec83ebbc397a513202</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad69c06dbcb10d8f12bce1c369ae34c31</anchor>
      <arglist>(const WPointF &amp;point, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aaf6ea6a37b0fd8244d1b7afa3c24b55c</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a58a14d4610582eed6c76e0bda6117e3d</anchor>
      <arglist>(const WRectF &amp;rect, const Image &amp;image, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a508b7828bbbf5805838a30a830c34f36</anchor>
      <arglist>(double x, double y, const Image &amp;image, double sx=0, double sy=0, double sw=-1, double sh=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a259601487cb2ec23a2f6f3d64c0c5913</anchor>
      <arglist>(const WLineF &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a1c9ad3f225f7ca93800431adfc5731f0</anchor>
      <arglist>(const WPointF &amp;p1, const WPointF &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ab596b1cfa230d37e9c429adde84d5985</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3b25c4144914fe09ca3b3cb63979bd69</anchor>
      <arglist>(const WLineF *lines, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae1ac3c9c64907e53817ca5a28ead70d2</anchor>
      <arglist>(const WPointF *pointPairs, int lineCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aebfb0fc62a58789f7b21650485ef9985</anchor>
      <arglist>(const std::vector&lt; WLineF &gt; &amp;lines)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawLines</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a762442b01f5603492e9673cb84081596</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;pointPairs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a2ef57868d6fbf99a901cbe1f29723b50</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a5c46ed008445a80feb258774a3af3b62</anchor>
      <arglist>(const WRectF &amp;rectangle, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPie</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3d8bc8608db5dad5e8d499b0fed58b85</anchor>
      <arglist>(double x, double y, double width, double height, int startAngle, int spanAngle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aca2e989c3cd9bc635e6d13786cc73119</anchor>
      <arglist>(const WPointF &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoint</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9159b8ae72494b4973642143296daa96</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPoints</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>abe40c21da61567a23b04c81c9ea038b2</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolygon</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a82600053c72a0f939eb37ab45f2c1f3e</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPolyline</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>abbc6b39bef49d5fc67e09953fbcd4faa</anchor>
      <arglist>(const WPointF *points, int pointCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad1fcb68312327194b3dccc67adc3bd33</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a368289c57968343089d82c26acc62ca6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a14fa5d0d5f3a05f8279bb0b4a06a8671</anchor>
      <arglist>(const WRectF *rectangles, int rectCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawRects</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a36818dd1aea0c8f50dc0385dca39a6b8</anchor>
      <arglist>(const std::vector&lt; WRectF &gt; &amp;rectangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a8565a90a75207b318a2ff608e19df806</anchor>
      <arglist>(const WRectF &amp;rectangle, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ae2a04838933687fd0791e1187b28fdca</anchor>
      <arglist>(double x, double y, double width, double height, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a761f8f85d14fe171fcc91823bc4dab5c</anchor>
      <arglist>(const WPainterPath &amp;path, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4b9ce79b5abd8584fd2cf85876ab140f</anchor>
      <arglist>(const WRectF &amp;rectangle, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillRect</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac99ee3d64df9742e167c01d750c899be</anchor>
      <arglist>(double x, double y, double width, double height, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strokePath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a93cb3a37591c6dde4f006e8eada2d1f8</anchor>
      <arglist>(const WPainterPath &amp;path, const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a9c727b82879ab055f3fcf4c9cdfc1f8d</anchor>
      <arglist>(const WShadow &amp;shadow)</arglist>
    </member>
    <member kind="function">
      <type>const WShadow &amp;</type>
      <name>shadow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af34ea21a473d776dc659d25efa63a593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad63f01349e9163992d440e9aa85f916b</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFont</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ad9cac6c8eaba94226f54343cde9676ea</anchor>
      <arglist>(const WFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a159ebf24df790e409d4060f7bd4aa725</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>brush</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ade2b538d5028082f3aba87625634184c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>font</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ab218488ea091c9ae543142bdca4da9bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a1b60e758e7eb1865369a061cf07bf54c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a4163898f999d4ecafec52c3f8890f380</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasClipping</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aa99949d6a71d44f1240db64c32b6d803</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a65be44d995c5f06f065f68d15c8889a5</anchor>
      <arglist>(const WPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a601eba54f63b581080531100f5b5db78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac0cc4dedd2cf8801e12d7550bce2a2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ab6d68d362e43f8e8df7e4400e2324d8e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0167a7c8c8d72ee0cca6f735b65a7938</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aaf5755eca15cb6e73fc24edf3bbd5758</anchor>
      <arglist>(const WPointF &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>aef98cc3b4fa2da57efc9721a8bd2a6e5</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>ac0aa03db16f695b9bec3ef38588a5f3e</anchor>
      <arglist>(const WTransform &amp;matrix, bool combine=false)</arglist>
    </member>
    <member kind="function">
      <type>const WTransform &amp;</type>
      <name>worldTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a6fb5733c524d07b679c4af6526d0c032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0262e162bb4be43f800c6c7b784c8d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a3fd8699e88d695cfd10043d18a666991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a70dcfbed2b7bdeb39ddbc7f213b5a9ce</anchor>
      <arglist>(const WRectF &amp;viewPort)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>afd9272b6a583b273a64105e88fb65e42</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>viewPort</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a7838d09f494223b51a5e22b73a71740b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>af223eea7db8164e404f6725705569fa6</anchor>
      <arglist>(const WRectF &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindow</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a7d56a3fb66457c02584aa4bed8ce6023</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>window</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a0bcac25d9328887ed15669b4a4ae52de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>combinedTransform</name>
      <anchorfile>classWt_1_1WPainter.html</anchorfile>
      <anchor>a8d8e9616413abf58f949cd47c3bf1381</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainter::Image</name>
    <filename>classWt_1_1WPainter_1_1Image.html</filename>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>ac951720ffbbd0702fa760582217ca4b1</anchor>
      <arglist>(const std::string &amp;uri, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>abbf1888512763e7f4b604d33dd3b2f0e</anchor>
      <arglist>(const std::string &amp;uri, const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>aa20ed1f5a8a75f02588d0536d59311db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>aeca25023755c950910b54638547a36cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPainter_1_1Image.html</anchorfile>
      <anchor>aeb3a311eb466a2e7ea8af148b03a4d5d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainterPath</name>
    <filename>classWt_1_1WPainterPath.html</filename>
    <class kind="class">Wt::WPainterPath::Segment</class>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ace0add71a1ebc8b45a821aa8d70d3e3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a364b46c7a45bcb18e235ec0b41268a15</anchor>
      <arglist>(const WPointF &amp;startPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPainterPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>abea96512cd12bc8630f81b2ed91deb80</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPainterPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ab9efa54a1626d775bc208bf3caef10db</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>currentPosition</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a7022e9937045d3da2b5e54a875b33003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>adffb5d532acabefc8f885da5d531907b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a52e236ff7c41d05e1b29b0dcb2b1059c</anchor>
      <arglist>(const WPainterPath &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>accbaa725ccfc0291695b4f47b5b58923</anchor>
      <arglist>(const WPainterPath &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeSubPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a9db15664f1cea3f12a2c7ab1337a343b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a9801a3988b2a57c412ba175142d2e3ff</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a2cdd1952ade53cc4b2f2a0146fc8c00f</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ac52bacd9bb3b07043e56be2af56f7f66</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lineTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>aafdba97cf01c017fa9e8f18169c7a205</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ac5a13ec3faf642cd05a57988366e005f</anchor>
      <arglist>(const WPointF &amp;c1, const WPointF &amp;c2, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cubicTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ad751c7f66795ecdbe1fc7098dc11977b</anchor>
      <arglist>(double c1x, double c1y, double c2x, double c2y, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a3b1188816772497c5ae7a627a77e1d09</anchor>
      <arglist>(double cx, double cy, double radius, double startAngle, double sweepLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a6e4d29695685a08198be2c2dff53e49c</anchor>
      <arglist>(double cx, double cy, double radius, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arcMoveTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a366810aa107d35409f9fbd33b8e91dbb</anchor>
      <arglist>(double x, double y, double width, double height, double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a5cf7125271a74e15a52db05876b8c878</anchor>
      <arglist>(const WPointF &amp;c, const WPointF &amp;endPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>quadTo</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a2eaf3d30b6cf1590a3f368b8b94d49ca</anchor>
      <arglist>(double cx, double cy, double endPointx, double endPointy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ae8783aad1c538e0180b2323a3a926999</anchor>
      <arglist>(const WRectF &amp;boundingRectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEllipse</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a3dadfaa8235becb01221431d1f1a97d6</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a52f1c2008c15cd133e8fb405d8b0466b</anchor>
      <arglist>(const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>ab5b658698acf7a87948e7c0adf6c1151</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a8f2e9933f699b967fe5776c98080a410</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectPath</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a7a5d7f8d62eda600ab05926c8f8014be</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>controlPointRect</name>
      <anchorfile>classWt_1_1WPainterPath.html</anchorfile>
      <anchor>a2662ae29dce3cafd3a44cded9ef3112f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPainterPath::Segment</name>
    <filename>classWt_1_1WPainterPath_1_1Segment.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::WPanel</name>
    <filename>classWt_1_1WPanel.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPanel</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a4c05851cf3ea39b796974b84eebd68bd</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a3e2feec27482003f4abd921c22b1b0c3</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>title</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a56ed246e0065e1ed78e639c1adc32adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a9671893042605eb936c7301f6de09d3f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a310ea9e57d6ed4c10cbaf865063486d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>titleBarWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a7986e7f194f029f8356b07b6909a66a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ace945a192f671220a5a2cda671dc37ca</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsible</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>aad805b67215219f72d8f3b849c898860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>acbb49b380277b5b78b18902a671abcb4</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a9d9d4cced04f55464b20744ab88aa145</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>aefd66ff6dd8e2a1108e70efec4eab1b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a2ac9a05172675559b6f988083a4fd666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCentralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a74f87b8eacf87d9df2704fc97ce9c37f</anchor>
      <arglist>(WWidget *)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>centralWidget</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>a699291066eef6f3dccad30cb592ad97c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ac0926907f1ce9da82dcdc114aeda6e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WPanel.html</anchorfile>
      <anchor>ac5c430375eae4b14e46214fd8a103062</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPdfImage</name>
    <filename>classWt_1_1WPdfImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a79e69ca31a1b8fd1629a9d9b751b9171</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a7280381d516142fd3db54fb376d17726</anchor>
      <arglist>(HPDF_Doc pdf, HPDF_Page page, HPDF_REAL x, HPDF_REAL y, HPDF_REAL width, HPDF_REAL height, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPdfImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a86fde83dd116371ab099f79b83199145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a6d17905ce2d0d0930d6597f7c5ab050e</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a478e01406f34497731a24a5f173be340</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>ac3bc4dd8a8085c2d85113a90a59a1774</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a4d350a7e2c59500222cdf782f3bb4042</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>adca51e1ebd4dc3b2a2acbe40b439caa7</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a65b1b5e12bbbc0325ea1f912672abc35</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a0ff5e4c7ce2c9baea108d4f728099672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a0b90c88a78d6b5aca5bcae704564a1bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a289544df08b2d7164a4d968e9804bc89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a3f035d8dbf510e084bf68e49d8e73bff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a172fc6977e598044e9bbc263b6599c81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a358347b05123b87af1ced8d038b34f38</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a0ccbbad3ceaad9c0cfd9abcb32ee0b64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a672d635742591046bf7799c3b033b5fd</anchor>
      <arglist>(WPainter *painter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WPdfImage.html</anchorfile>
      <anchor>a768cfc5e797651b9186a5adeb66565a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPen</name>
    <filename>classWt_1_1WPen.html</filename>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab83dc2d8e9289a528b1ea53c3dbd0a16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab7d789ec2c036b9e9f2dc79a93bb2102</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>aef30d1dd75f1e36ee96838d669c6d465</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPen</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a5ef68d49214e848b42aaa7f2a3e1160c</anchor>
      <arglist>(GlobalColor color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a322f0678855f2be570120505d84b1f28</anchor>
      <arglist>(const WPen &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a7ea4d349a8fa4cf2a3c6c0fcc4121167</anchor>
      <arglist>(const WPen &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>aa8e1366df77b346d0250878d64ae81a5</anchor>
      <arglist>(PenStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenStyle</type>
      <name>style</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ae14d2397498286da5c9f544061071fd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCapStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ab4f231f9c2ca03455d59457fe4e564c5</anchor>
      <arglist>(PenCapStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenCapStyle</type>
      <name>capStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ad61121a36aed6777b4d2145375d6e93d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJoinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a11848f3d7c2c73bc630c2c7da83f3671</anchor>
      <arglist>(PenJoinStyle style)</arglist>
    </member>
    <member kind="function">
      <type>PenJoinStyle</type>
      <name>joinStyle</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a436008672a646c0346cecc7729185dcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a8d175a6438c8251c2c5440f9cd085954</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>const WLength &amp;</type>
      <name>width</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>ae29a27dbdb0473a41a2a0586bf9906af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>a4296a360d3853c46e68e20a574c1f8b6</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WPen.html</anchorfile>
      <anchor>aa6e63fd317dd56b0cd9cc76f59d3d069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <name>PenStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gab70170afb6347d18ff9dac17e05e133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPen</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eaa8125e799a1289cd6dd0b2595a496a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SolidLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133eac1888b9cee513c2bf98c6fb9f4e307ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea7667698a6fb5adbf8f128519cbb93af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea26ade9ba6072abfcef185cca70227d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea45cac3164febb16cf7028403e01077a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DashDotDotLine</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggab70170afb6347d18ff9dac17e05e133ea758c17a422e91d2e497f15054123e302</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenCapStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ga819ef9a03fb79c9834508b79eac604f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FlatCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a394700c2ab47fe2b23564ced1c1e129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a39a378820d5058a3677f9852c5783783</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundCap</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gga819ef9a03fb79c9834508b79eac604f2a3d1c8a630cb15cec7b33434d9564182a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PenJoinStyle</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>gaaf495faaba3ae03366a1646a4b5526be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MiterJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bead2f7df311a138e580c95d728b0128004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BevelJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea9550acce5f4da6e134f34392d7b072ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RoundJoin</name>
      <anchorfile>group__painting.html</anchorfile>
      <anchor>ggaaf495faaba3ae03366a1646a4b5526bea3be2fdf749560b7229b3472d8ff6ad12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPoint</name>
    <filename>classWt_1_1WPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>aef6bc93627e0db21cc0729716b6f06d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPoint</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>ac38958b7d00843fdc9983f149d0511f9</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a4f78a5aa9dd51cc346e8cfeb077c9716</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a663e99c2f8f021aec35ad8392c375731</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a801c846b8debcb6eb93e2dad30990a76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a20a3f0ac58b3e5b00e2bea9fcb314c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a45cb53a528919e8897a1bd91decd6e76</anchor>
      <arglist>(const WPoint &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPoint.html</anchorfile>
      <anchor>a721a1e0a065ab6d945dd850c3e9ad039</anchor>
      <arglist>(const WPoint &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPointF</name>
    <filename>classWt_1_1WPointF.html</filename>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>acb4536b133ba1a6ec010a7d489ba9d52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a5287bb6bfa0fa598be6433aca25cbd5e</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>accedc0584f923309397c08691094ac26</anchor>
      <arglist>(const WPointF &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPointF</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a45202fe46ac4cc4383dc2fd2ed184aa2</anchor>
      <arglist>(const WMouseEvent::Coordinates &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a07f37f26155b5b1d7c44cb4f7c572064</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>aa7910f613cfe0b89caed7b6991ae1e9c</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a27c5b399724d9e6575d14fa189039c7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a707fac2acb24215c90783fb5d1781e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>acf34a0e5f35c76c61109fc5d4268fde8</anchor>
      <arglist>(const WPointF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WPointF.html</anchorfile>
      <anchor>a2469e492ddad621c6e8856f8ae9e4069</anchor>
      <arglist>(const WPointF &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPolygonArea</name>
    <filename>classWt_1_1WPolygonArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>afa52a76e46a98a1fcec1d5bdfa816d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a27b4a6851ec95b3716084d745e04b383</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPolygonArea</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a1d32a9af6194e2b3ecf357816e2d90c7</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>af6876fcbc964c2322008bc40eb1542ce</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a870b19dc309ab6386a91d2742463088a</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a42ec8b148f31ddd30ea2df8da1456d94</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a73d7505c0ceb966de94b1f7cd2a1491f</anchor>
      <arglist>(const WPointF &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>af69651570f280e4f647a32108712940c</anchor>
      <arglist>(const std::vector&lt; WPoint &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoints</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a9e036986557cab012105947f07cf5d13</anchor>
      <arglist>(const std::vector&lt; WPointF &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WPoint &gt; &amp;</type>
      <name>points</name>
      <anchorfile>classWt_1_1WPolygonArea.html</anchorfile>
      <anchor>a3ba6dfe5e328421904816f94915303f2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupMenu</name>
    <filename>classWt_1_1WPopupMenu.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPopupMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>acbb4d1eb7c4c9c22732db1f8d326755d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a6109cb59b9a36024e9691efe15392770</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>aa17fe5a8c7c687f5073ff67e0e207b27</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a92bfbdaba4957d7aa7ab074ddf6c7901</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a496f42a6d5a83e6dd3ae81fce13721e7</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a50eaba20dd39974f03e891bd2a74c4fd</anchor>
      <arglist>(const WString &amp;text, WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a192321f03e32aec24dafa9eedb67db08</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a7dde07454b4b7557f87b480dc9911569</anchor>
      <arglist>(WPopupMenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a8f4135e800cafc0366aab88fd31848e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a9da2dff4c6de6845a5a15b1a7c22572c</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a8b63c8824aa820d8d3669e563b6f57f4</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a83f2a98f8ef6a107dff0d9df61e4d92e</anchor>
      <arglist>(WWidget *location, Orientation orientation=Vertical)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>aa46285d2d5698ffc27551e8bb3b35d46</anchor>
      <arglist>(const WPoint &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>ae7d3aad5856e9ef376519201a07273aa</anchor>
      <arglist>(const WMouseEvent &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>exec</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a7e5609129a21ed9adf212516526eb663</anchor>
      <arglist>(WWidget *location, Orientation orientation=Vertical)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenuItem *</type>
      <name>result</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a9cc90b57b1e6bf95c64b0bd542b372e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>ac4cb24c44b31cec44008396f202d432c</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>aboutToHide</name>
      <anchorfile>classWt_1_1WPopupMenu.html</anchorfile>
      <anchor>a6e8aadc13b909ea3bad826515560d504</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPopupMenuItem</name>
    <filename>classWt_1_1WPopupMenuItem.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a9b2bfe15b548815e43613beebe38aa7b</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a454f4abbbda784c874a51ea8d22acb5e</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WPopupMenuItem</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a566df86714a068d75045e87a51999faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a183a8134d58c76f62bd84d405f904654</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a3c450003749c0d1f933c12dd202c111e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a7a5dade11f634972fddd4e7c7e84bffa</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a42b266f00f46f4b7eb9a3f636f2d6c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a8f1b98cf1c4362bcda671bbf833cbb7b</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a891cd208357fc5d4402acc12f951b338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupMenu</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a4d73ac894229ea7ad28e900a7f59b7d3</anchor>
      <arglist>(WPopupMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>WPopupMenu *</type>
      <name>popupMenu</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a81aa0047544facf555292a0a0efd86f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a1cb91298582f9404d22c268c3bba034f</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a06ece0c0b2d50ef0ac624dca2fcd2047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a981f24ef341a504ff6c529fd5f52dd01</anchor>
      <arglist>(void *data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>data</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>add3e4ef46b78735e27053d4b816f6442</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>triggered</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>af193b89a72881939e4f02c3d6139ff12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>ac5bc72416b24de408e5a8c61362e6230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WPopupMenuItem.html</anchorfile>
      <anchor>a9ade078579b04bed7d66aea9dcce5668</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WProgressBar</name>
    <filename>classWt_1_1WProgressBar.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WProgressBar</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>af11f55059b78f4f40cc88ab5eae8f849</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>aff1c1c21642bc4f2d3f9405fc2491ce9</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab436c64554ab4adc3a780a7ad6da6500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a1925aa3e7aed457e7b80dd91f728afe1</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab78f72af41689214a92a0f23ec668235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab16ba89c58804410f4080bcc76f8d4aa</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ac0cf5ad1588716d0ef9501fddc421b8c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>af27e4dde74755a6eeae59b81c8ae7ca6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a6fb308103fbdad5d58c90450c657678a</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ad327e01413b06eb86f38f0ff38796572</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>add10d474c0ebfca950260ae2fcea876a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; double &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>aa95aa9075fbffc7bcc2ef13407e6a8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>progressCompleted</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>a4a0b07947134a74df39df42e076a6130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WProgressBar.html</anchorfile>
      <anchor>ab3a6a25af643a68683e0da40989590c8</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WPushButton</name>
    <filename>classWt_1_1WPushButton.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>abd74d092403f1cbe17f8ea3529c0528f</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WPushButton</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a6525ba8c05bb27ad80c4a0a0ff32cf71</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ae76e2ad608c2acb0686dee57649a596d</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ac9eeba268762744f72158d9ec8de26fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>aeb5668bdbe96e460047de04ed5759af9</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>af0f52faf4a50b1d80d03d6a32f3c7a28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRef</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>aa5830a2118836423f0c16d12bbfd57a0</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>ref</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>ab8cbbcd9fd3051a490e9b71ee3416037</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResource</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>adbade65e5201991aa9e7dd131cf66fc9</anchor>
      <arglist>(WResource *resource)</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>aca1303c5fa3c4efeab3003cfcaa65947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WPushButton.html</anchorfile>
      <anchor>a57084964c8ecf099bcf3e4767a5cca68</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRadioButton</name>
    <filename>classWt_1_1WRadioButton.html</filename>
    <base>Wt::WAbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>af2a014f58ee5e9105e409c7e7b0219ff</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a1b05a25ac8803ad9cb96b441f0c09eee</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRadioButton</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a234ed5e2d0e698b80d4e7c8b65f027c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WButtonGroup *</type>
      <name>group</name>
      <anchorfile>classWt_1_1WRadioButton.html</anchorfile>
      <anchor>a908574da36efe50c70fc6a9d77f045cd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRasterImage</name>
    <filename>classWt_1_1WRasterImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WPaintDevice</base>
    <member kind="function">
      <type></type>
      <name>WRasterImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a5849a1646b9739c75e01d3bdb17b7773</anchor>
      <arglist>(const std::string &amp;type, const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRasterImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a660f5904f28a7f10861afa014e8df882</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a7d61c2108242fc61ecdc14c42a50443f</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>af3663ee7373f3be11fdcb5a991bfdad8</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a4d87e6c8d6132a9b4a077d171b8bdeb4</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a6ae45a8f4d44be9d935a9ae4b9c7ec3a</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>ad90e19e0dd8ead44c0a43c136b8b5a47</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>aff63adfbd50d736260018c2d0c5bbba2</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a8b04b69af81e9f8e6294ac52612aa2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a9b460b1dbf35675a4a43c377682f4989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>acf75d51af5965dfa9f06c8bdab084c5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a007f7f513d23ffe9c24947462780dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>aa04944c08a0995ff2eaa42c5bd431de6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a636543ffb0fffeb7a9e0dd8a166d3167</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPixel</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a96888a696b1f98c2d36fda556595ab08</anchor>
      <arglist>(int x, int y, const WColor &amp;color)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a626f46e6b7cac223224c72bf3684b61d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>a1e6ce062a5b45b1bb7d8c65d17c1315d</anchor>
      <arglist>(WPainter *painter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WRasterImage.html</anchorfile>
      <anchor>af4e9da55569320bdc3168749ba66d3c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectArea</name>
    <filename>classWt_1_1WRectArea.html</filename>
    <base>Wt::WAbstractArea</base>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a56e72183f3e07a8161bd2795baaa9fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>ad0eaa4bb51b94b7f695fddde8df3adee</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>ae27e82fa1034ffb2855ab142ce8d19d3</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectArea</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a44f5f1b92b79e2355998a54cea5257c1</anchor>
      <arglist>(const WRectF &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a14c6788e518a2db3a3128110763695b8</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a47b5e476e13e51c1c98c9d72017e9d56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a0e19203a36ccf624d85be131f3b1ac30</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a020c4bd1576ca7a5c138f5ecccaa0592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a07614d6f30cbe7ae69b8aa562ebe0922</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a930186d9bf4721d3b65b4a64032c7c74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a6ed26185f1c92c5fc9e3f80f2a7733b2</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectArea.html</anchorfile>
      <anchor>a7dba50020eb443edbf16c0389c99bdf0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRectF</name>
    <filename>classWt_1_1WRectF.html</filename>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a7676cc3fde735f0eabc02df2ecb636c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a3d26d539fec651826796afb2a5b87a83</anchor>
      <arglist>(double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRectF</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a23619ae019639c2057975535cd55c05c</anchor>
      <arglist>(const WPointF &amp;topLeft, const WPointF &amp;bottomRight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a0a62dd7b49290cbc39e5fba781a583a3</anchor>
      <arglist>(const WRectF &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a249ad5fd8e9f8944c4766d46b6f14e0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a7f162f054257cad98c19e6a75c789710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a6e3421e306699075d52111f60da2d057</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setY</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a95ac1538d8f47afee7fa031dccf8a9bf</anchor>
      <arglist>(double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>af297f3a2020d409fa148f3e12e28097c</anchor>
      <arglist>(double width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ac035c1a098d61f09b746ec63d338ff9f</anchor>
      <arglist>(double height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>x</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a45bc90a0a76945e0dcd8c38a12194dd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>y</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ae1e0121826ab777d95f43fde599db13f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>width</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>aa753427e56e604c9731ed230d3040003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>height</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a294cb52820c4c50d64c0af0da9af7c08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>left</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ad7ee063d60ea848ae3b37cf662b5827a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>top</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a81a752c33b1fdb0988d81d3d411ea894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>right</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ad7d9f3b2208430ef38aa96a7d6592108</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>bottom</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a577ea0708a4a4bb6f10febc9c1b8e567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a584b65722cf37b9ebcdb906b55c0d6dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>topRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ac596407f8db4cb1d57f55404a97e7845</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>center</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a152c145b940ce78d0e2071ea06b8e9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomLeft</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>aa567de202e36f066e90a020e44a3763a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>bottomRight</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ad84efe11dde39872210dd03133ae6585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a90cc7f1034d1b298e6793e35023af281</anchor>
      <arglist>(const WPointF &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>ad686bb2322ed6e2d2e9c73d59bbf6ea0</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a2efed036fc6fe7be636788893be65d5f</anchor>
      <arglist>(const WRectF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>united</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a86a64a17d5a11e2ea9b44fc9d2360ef6</anchor>
      <arglist>(const WRectF &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>normalized</name>
      <anchorfile>classWt_1_1WRectF.html</anchorfile>
      <anchor>a8f0e63244aed0c98c2a2a63899408f05</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WRegExpValidator</name>
    <filename>classWt_1_1WRegExpValidator.html</filename>
    <base>Wt::WValidator</base>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>ac73905fa4427ee0ab0ee83e6eeac0373</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a7536b67e2bedd2dfdb5b89c9dd56602b</anchor>
      <arglist>(const WString &amp;pattern, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WRegExpValidator</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>aa3a0d2b4c2bec81325eebfab1530d3dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegExp</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a71190cef122cc6000be16d9703393cd9</anchor>
      <arglist>(const WString &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>regExp</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>ad4af69a61c23bf59db1b7c6bedf56311</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a461e39a6e009efe786d3189f5ca91584</anchor>
      <arglist>(WFlags&lt; RegExpFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RegExpFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a50d1c191711ad6d900b274547dd069ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>acd0bc1ff9dc23f4f34c6840e3d0d5edc</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a6ca44df82213538b13026d27f721669c</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a41fdea26cc852b40a1f1c16c09624f01</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a41b52e1428a6561c5be695702e20318a</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidNoMatchText</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>a144ed2ffa928a0f6f28e456880126397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WRegExpValidator.html</anchorfile>
      <anchor>aae5e8bce20a76f654cd007b8b85cba0d</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WResource</name>
    <filename>classWt_1_1WResource.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ab4a2f71811a597a3603b039968dcb6d7</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WResource</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a776c19c9bbc95330941744cd129bc01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>suggestFileName</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a8f2c3c2aa013cebecd73398dadc3d6d0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>suggestedFileName</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a966ece2e5a3e39d861e156ed0151402e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a9394f6c2ff6cadf8d1076ec52c5e909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a06bb9dbe3ae195c320cfed7b062d448a</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>aca0470f44682d5b785045269235a23b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>generateUrl</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a5060efcabde5f793c9d44c5ca557417d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>url</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a11169bf885f297f6f2ebbc1789aeded2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>dataChanged</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a1527418354a584790c372e86a40c6027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUploadProgress</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ae0b96cdd80b982c74adb9a762c77d479</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::uint64_t,::uint64_t &gt; &amp;</type>
      <name>dataReceived</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a37f002b4919486e057469b92d70c755d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>ad8bbe65a888cc43e0d356f18509b9a0f</anchor>
      <arglist>(std::ostream &amp;out, const Http::ParameterMap &amp;parameters=Http::ParameterMap(), const Http::UploadedFileMap &amp;files=Http::UploadedFileMap())</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a3a740f8cc29e2e6e4e58defc9c88b8b6</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>beingDeleted</name>
      <anchorfile>classWt_1_1WResource.html</anchorfile>
      <anchor>a24f65859427f54012fef2fa9da14870d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollArea</name>
    <filename>classWt_1_1WScrollArea.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="enumeration">
      <name>ScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a266104fe2b2f25b8f908de58e21ebbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAsNeeded</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a266104fe2b2f25b8f908de58e21ebbf7ac387af3baf5e109899bdddbf72586aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAlwaysOff</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a266104fe2b2f25b8f908de58e21ebbf7a8c3f17ce7b5a537f91f6926e98dc3aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScrollBarAlwaysOn</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a266104fe2b2f25b8f908de58e21ebbf7a18cdc324ca6e869655208c8d02274a5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WScrollArea</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a2114c3abfc3b2aa78677f1d65dde9402</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>ac313ec45cd9aa9382fc5b540ad9008ae</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>takeWidget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>abef337f8179db15f4448bd60980ff371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a76426cecd85e75ed4add6b26853a0bb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WScrollBar *</type>
      <name>horizontalScrollBar</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a5d25cb403fd03c5a4bc0116ab6278135</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WScrollBar *</type>
      <name>verticalScrollBar</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a6f3aca1de426f4a256997e3a780bc251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a7870ea2ccdbd40d62cd3633d58ba5b0e</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>a61394643cb1195d2e40d0189fe8f3dc4</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalScrollBarPolicy</name>
      <anchorfile>classWt_1_1WScrollArea.html</anchorfile>
      <anchor>af94d4c195ed2f0fa8114277c42cd59e2</anchor>
      <arglist>(ScrollBarPolicy scrollBarPolicy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WScrollBar</name>
    <filename>classWt_1_1WScrollBar.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>abad5971aa318817e38fb85eaf33e8f1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>aad9b9a1d141c02edc2853176135a052d</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>tie</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>a6eb5c19029a90ae5b748411dc0dd4c89</anchor>
      <arglist>(WScrollBar *one, WScrollBar *two)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unTie</name>
      <anchorfile>classWt_1_1WScrollBar.html</anchorfile>
      <anchor>a9d78abc2a0c36b6dfb707ca8d427e017</anchor>
      <arglist>(WScrollBar *one, WScrollBar *two)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSelectionBox</name>
    <filename>classWt_1_1WSelectionBox.html</filename>
    <base>Wt::WComboBox</base>
    <member kind="function">
      <type></type>
      <name>WSelectionBox</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a079089ad7d220d5fd2b17d342fd65375</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a0aa28564501cd4c2653fdc45c4fd1a20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalSize</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a90bcf3611a6f54e0358b7f208b0cb478</anchor>
      <arglist>(int items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>aa3119417024e25b7b24e66cab17edb31</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a22a94e26ce301d967efa0893093f73c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; int &gt; &amp;</type>
      <name>selectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>ae27b849b2eeef1bf35ddbaca3659e539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectedIndexes</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a4fcb25c6d7c00f5659959180df9a337c</anchor>
      <arglist>(const std::set&lt; int &gt; &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WSelectionBox.html</anchorfile>
      <anchor>a2925ed26e7e56d8ce7bca40dc338f5e0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer</name>
    <filename>classWt_1_1WServer.html</filename>
    <class kind="class">Wt::WServer::Exception</class>
    <member kind="function">
      <type></type>
      <name>WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a4e347c4f853f527999c8c46c62d16f6b</anchor>
      <arglist>(const std::string &amp;wtApplicationPath=std::string(), const std::string &amp;wtConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WServer</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>aa8eb08f58abb174af9e10d0fc4ee0b9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerConfiguration</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a0f3ced6ffd8b8c53d8e34cf27a5e2d94</anchor>
      <arglist>(int argc, char *argv[], const std::string &amp;serverConfigurationFile=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntryPoint</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a84f84652ccb139850adcf5ea75f50fa5</anchor>
      <arglist>(EntryPointType type, ApplicationCreator callback, const std::string &amp;path=std::string(), const std::string &amp;favicon=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResource</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a7b78b5e35d2dc3086faa54f82124cf38</anchor>
      <arglist>(WResource *resource, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>af1699e7cee79223e6d35c1c5eae0aa5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ada0ea6f20704b1255f5c28764c776f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a493c35784e8f0ba28281483415eed7e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>httpPort</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>acf48af4046dbb1ad353e54de480dd0c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>appRoot</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a6b0f98b3c7fcac1dd21bdf929e3b8428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readConfigurationProperty</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a11cf397651bd2b470c65aa43b2a60271</anchor>
      <arglist>(const std::string &amp;name, std::string &amp;value) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>waitForShutdown</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>ada2b943932a470be299594c7e896e275</anchor>
      <arglist>(const char *restartWatchFile=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>restart</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>a5d514ec2756c5c4ffe44b10e0b03c5a4</anchor>
      <arglist>(int argc, char **argv, char **envp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>WRun</name>
      <anchorfile>classWt_1_1WServer.html</anchorfile>
      <anchor>abca6890dab44d87bd3af64705ac072d3</anchor>
      <arglist>(int argc, char **argv, ApplicationCreator createApplication=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WServer::Exception</name>
    <filename>classWt_1_1WServer_1_1Exception.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1WServer_1_1Exception.html</anchorfile>
      <anchor>aab549bbb4c5cb7b9827b65aa0dd218df</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WShadow</name>
    <filename>classWt_1_1WShadow.html</filename>
    <member kind="function">
      <type></type>
      <name>WShadow</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>aeedaae98b1623a1c99b939baaad08e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WShadow</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>af265324ab60682594748eb555c00af6d</anchor>
      <arglist>(double dx, double dy, const WColor &amp;color, double blur)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a454f7ea63fb64088cd4ef12e4cc34595</anchor>
      <arglist>(const WShadow &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a911369f486a8210ad446bf06b70bb2f4</anchor>
      <arglist>(const WShadow &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ace38cb8714d1aaae21d50bef8dcc6b7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>af9dd7c26509053e501de5ce0965b14a4</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>offsetX</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a12ad0e7cc7f2e781c351c5d475bd87db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>offsetY</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a11aba63f01a65e742026e4bb8e1703c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a6e9b6616a273f18bd1356d41b15b8030</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const WColor &amp;</type>
      <name>color</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>a5ef06b2d2327e943b5211b5480f3c29e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlur</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ace7c00e0277344fe481d8e7b8815d1bc</anchor>
      <arglist>(double blur)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>blur</name>
      <anchorfile>classWt_1_1WShadow.html</anchorfile>
      <anchor>ad48adb3264123006ad9e649b849366bc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::SignalBase</name>
    <filename>classWt_1_1SignalBase.html</filename>
    <member kind="function">
      <type>WObject *</type>
      <name>sender</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>ab1020c5c3b431a74d9ab3d2b1d24932c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>a13a3106be8949b273edc74aa61be14ce</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>a5161bdd49ba2dee3ddfa085c51e68bdb</anchor>
      <arglist>(WObject *target, WObject::Method method)=0</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1SignalBase.html</anchorfile>
      <anchor>a462d1a3c0a7db6a5ad03cee69e6e8c28</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Signal</name>
    <filename>classWt_1_1Signal.html</filename>
    <templarg>A1</templarg>
    <templarg>A2</templarg>
    <templarg>A3</templarg>
    <templarg>A4</templarg>
    <templarg>A5</templarg>
    <templarg>A6</templarg>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa481062b581f9d2f071bf07b421d87ca</anchor>
      <arglist>(WObject *sender=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Signal</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>ae665a336ae3e576bcb372f16c306d4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a15d1150af031537b492674ee651bf4a3</anchor>
      <arglist>(WObject *target, WObject::Method method)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a04c1f708f726035cac24a8f5726e4b74</anchor>
      <arglist>(const F &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>ae6b9bffa47c0ffdd1667e8f13e8dab74</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a7f296d5965c03785c7a635431f7f6a79</anchor>
      <arglist>(T *target, void(V::*method)(A1))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>aa1a8436d769d11f5cb0c1febafd1e27d</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a239b63678084087ba15fd17f6ab1a312</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a976facef99c1a6a53871bd7118c7e1bc</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a906499f6b97c28d1da8b5c615aee41dc</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>ad5eaf26f300335ccbf37ed71026ff1b7</anchor>
      <arglist>(T *target, void(V::*method)(A1, A2, A3, A4, A5, A6))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a8d9cf8a1e83634462fe2b492b3beb1c5</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a10c70ce5cafb6170e56e8df36bbb9a7a</anchor>
      <arglist>(A1 a1=NoClass::none, A2 a2=NoClass::none, A3 a3=NoClass::none, A4 a4=NoClass::none, A5 a5=NoClass::none, A6 a6=NoClass::none) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1Signal.html</anchorfile>
      <anchor>a4a65919846e7d1cedabd0e9acc65563a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::EventSignalBase</name>
    <filename>classWt_1_1EventSignalBase.html</filename>
    <base>Wt::SignalBase</base>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a1ef1b9ac79778e98e703ec3a2de30a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a9abebc3c61cade46272159698960e214</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preventDefaultAction</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>afd8983929683ffc4c6dda8a91a7bda7b</anchor>
      <arglist>(bool prevent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>defaultActionPrevented</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>ac840555229d96847ffb11960958e0fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preventPropagation</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a63f088978e6dd375b3a329f458f9db3f</anchor>
      <arglist>(bool prevent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propagationPrevented</name>
      <anchorfile>classWt_1_1EventSignalBase.html</anchorfile>
      <anchor>a0660648ca23b59a30ddc3226ad4a55b3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::EventSignal</name>
    <filename>classWt_1_1EventSignal.html</filename>
    <templarg></templarg>
    <base>Wt::EventSignalBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>aba826d0b0c74751fed4ab8eb9b05732b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a6efcb92576b5aa846a3354dd26918a9f</anchor>
      <arglist>(const F &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a79396e66db668bd56de65943f83dacd2</anchor>
      <arglist>(T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a60c4413956cb5484be2670982721202c</anchor>
      <arglist>(T *target, void(V::*method)(E))</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a9d1fd7a2f0b8421e170d5423b0df5c59</anchor>
      <arglist>(T *target, void(V::*method)(const E &amp;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a3508b7434fbbaec9369c9fc489f10085</anchor>
      <arglist>(const std::string &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>ae026eaa8a8d978d83f46526ff58c6abc</anchor>
      <arglist>(JSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>ac75c46b1f601b482d62feefad593638f</anchor>
      <arglist>(E e=NoClass::none) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>aba7df462ab43f885c1a4edfa7962eb02</anchor>
      <arglist>(E e) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::signals::connection</type>
      <name>connect</name>
      <anchorfile>classWt_1_1EventSignal.html</anchorfile>
      <anchor>a1f2db23ff04515852f82eece414e7f3c</anchor>
      <arglist>(WObject *target, WObject::Method method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSignalMapper</name>
    <filename>classWt_1_1WSignalMapper.html</filename>
    <templarg>T</templarg>
    <templarg>A1</templarg>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WSignalMapper</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>a5c23094be042e549bb54a09c14fd5bd2</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapping</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>a89ccb4bde41e6e326072077214756ccc</anchor>
      <arglist>(WObject *sender, const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>mapConnect</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>a1d2c6572bf0b8dbd21e2f0d0b19dfc30</anchor>
      <arglist>(SignalBase &amp;signal, const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>boost::signals::connection</type>
      <name>mapConnect1</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>ab5ecc06f3bbd26be127027b058bfbadf</anchor>
      <arglist>(S &amp;signal, const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; T, A1 &gt; &amp;</type>
      <name>mapped</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>abd2fae2a26c9f89928d32f6e209671eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>af4bc239e4f47ae25e6544be3dd1676de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map1</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>a236a9f2bfa71fd1f990f04e105782976</anchor>
      <arglist>(A1 a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMapping</name>
      <anchorfile>classWt_1_1WSignalMapper.html</anchorfile>
      <anchor>a395e321c3c545225a3669608044b2454</anchor>
      <arglist>(WObject *sender)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSlider</name>
    <filename>classWt_1_1WSlider.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>TickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksAbove</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4ad2ff66b50fd871c8087f5d5ab3a96a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksBelow</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4a7f3790c208f56c1ba4104839c750e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksLeft</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4aa3643c713a52ea96d4a4d4102732cbb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TicksRight</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a393f2ee54ef0816e7fb774db7b449cf4ac9e3b1846ed47193c0f42cda600b8073</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a339c6e8b9a32f232039a51270a36c8e3</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a062f657c1dcfc53224aacb97374513b1</anchor>
      <arglist>(Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSlider</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a86b98ee70f4d0d4f5e3fe23b3939a8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>abbb9b8059f3a19cd36ffbfda00467016</anchor>
      <arglist>(Wt::Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>afdb2cf9f61821fdf8ca376ab11f78453</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a3497303ace2820b3bd457119cec35411</anchor>
      <arglist>(int tickInterval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tickInterval</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a9ddb7b0dd68ca38051ff302f4c02ed5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a58e4a2a02c31b47040d35d646ad2ec0b</anchor>
      <arglist>(WFlags&lt; TickPosition &gt; tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; TickPosition &gt;</type>
      <name>tickPosition</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a2ec5814fd492f1b4057bae0965bd546b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>afc41362dafd1f53f4d0d52385c04d40c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a0b701be67d81634d95f4ecb9f1ff372b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ae1fcddb363795d572da2ae68362771e5</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ae77592e0f0514cb23dfc7e060fcf37e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>aea0dad399f79f2014dbd3f06d7cdd6d0</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a5b000d3d26cc6e08c84de252477137ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a2031dbb839f0da2ade7e8e88d32079e4</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a26548e39f70fbbd0383eecf302ddb73c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int &gt; &amp;</type>
      <name>sliderMoved</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ac7257988652fc39910b1088cf02ecc5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>ab2c74e01222219a65b799cd78800a114</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Wt::WFlags&lt; TickPosition &gt;</type>
      <name>NoTicks</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a4eea09fd0af7a1e252940f3e8b141f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Wt::WFlags&lt; TickPosition &gt;</type>
      <name>TicksBothSides</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>adb2b7b683aa56fee39a4b62b17b37fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WSlider.html</anchorfile>
      <anchor>a250baa8de6f9dc769dd0b1cbd4c05fe9</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSocketNotifier</name>
    <filename>classWt_1_1WSocketNotifier.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a5be2fe0fe94d449a0d6b1ac77f7b548c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Read</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a5be2fe0fe94d449a0d6b1ac77f7b548ca057d53943ca8e7e9381526747c689d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Write</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a5be2fe0fe94d449a0d6b1ac77f7b548ca85abb8bd7445d145faa84c8545b1d5f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Exception</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a5be2fe0fe94d449a0d6b1ac77f7b548ca17c50ed02a1f9aa67ece3d5e71b66141</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>ae60a2f36b909f50404bfb15864562347</anchor>
      <arglist>(int socket, Type type, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSocketNotifier</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>aff88999b1c55254f8b129193a53ee485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>socket</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a3a1bde7ddf5a3bdde74906343027e355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a42d21d0c22cdf3b3ed7ee10dbdc82aed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a9cb21fa4b5827a205b21f9b656baca6d</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>a893c8fcee0191bb2ae56df27697f8f7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WSocketNotifier.html</anchorfile>
      <anchor>acf78fc846ca6f915111533575dcc9401</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSortFilterProxyModel</name>
    <filename>classWt_1_1WSortFilterProxyModel.html</filename>
    <base>Wt::WAbstractProxyModel</base>
    <member kind="function">
      <type></type>
      <name>WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aec8bd731a505369b12695beeecc1fd19</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WSortFilterProxyModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>acf3b4890f299bb548b0351f6e68610b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapFromSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>ab32e734793e3a6e657b3b5655831885e</anchor>
      <arglist>(const WModelIndex &amp;sourceIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>mapToSource</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a290351f93612a5180c055328e2ff3663</anchor>
      <arglist>(const WModelIndex &amp;proxyIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSourceModel</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a805bcc6964e8c0194638c05f30d2a8cb</anchor>
      <arglist>(WAbstractItemModel *sourceModel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aaf272fe23196b67a409e7d0de03fd8d5</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterKeyColumn</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a9c1714947d1910e049ec26067e0cf4d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a1c9dce68769668570bb5bccc3e0a9969</anchor>
      <arglist>(const WString &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>filterRegExp</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a2e5b064ec7ebf4e738b7e423a7449ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterFlags</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a0e907bc557a0d657cbd38493babbfc05</anchor>
      <arglist>(WFlags&lt; RegExpFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; RegExpFlag &gt;</type>
      <name>filterFlags</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aadefa2d17ddeb4c19a7327c2e115962a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a0ca42014aa2f383154409032c9a3c8d3</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>acbbbb4a3a95a61ea1289036d4069f0bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a63686e0718a623c6507f61195e020917</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a35cfadde9afc4495dfab93234e5e169b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a4dfdc62d591249454cbb38e5099f19b4</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dynamicSortFilter</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a1d977245afeec04711241c70bff84c5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>ad295e3835ffd9f5e602b3dbb29f93f22</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>aa4d6d01a9ec7bbdb1d77f31fbd332791</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a6ad76d2a537d2f8e3f6f084a10e493a3</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a018f06cc89846655bd0db3c7a9eebfcb</anchor>
      <arglist>(int row, int column, const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a54eea17b2e88ebebcdba479f2f2ffc9c</anchor>
      <arglist>(int section, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>abd144908bf36785333b43c48b437dbdd</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a0a65e908c140bc48c5e0a5fb3ada12b8</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>ac05897acd82abbe355dc57c79a2d01be</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a119a5cdf51974371db37ae6972e5955b</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>filterAcceptRow</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>acabfd24268c9b37e6dc296557423e5a5</anchor>
      <arglist>(int sourceRow, const WModelIndex &amp;sourceParent) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>lessThan</name>
      <anchorfile>classWt_1_1WSortFilterProxyModel.html</anchorfile>
      <anchor>a5fc984dd492c02e47de2d87df6816d17</anchor>
      <arglist>(const WModelIndex &amp;lhs, const WModelIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSound</name>
    <filename>classWt_1_1WSound.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>ae26e36590aaf75d0a5a346ac59594afc</anchor>
      <arglist>(const std::string &amp;url, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSound</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>ad2b9aa6ce656708845c21aff965e02ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>url</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a1cf98567462319d880ddf3459bc8c8cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loops</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a47126fa920874bfccf12c65ace9c9473</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoops</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a6cf72578210c7a6ff345372afa85d198</anchor>
      <arglist>(int number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a6ca6b48ebc9e49ee6745228961df3817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WSound.html</anchorfile>
      <anchor>a7c3ce5dc7204f5c156bffd71487e3f72</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSpinBox</name>
    <filename>classWt_1_1WSpinBox.html</filename>
    <base>Wt::WLineEdit</base>
    <member kind="function">
      <type></type>
      <name>WSpinBox</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a6c5011835f73ca3bd0ea84042023dcf4</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>ab238b68b3a4b5b5228bdcec5718fada8</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a0e03c840ca852bd1b2868b1b8f702691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a9d8bb92b4ee1723459b0da8c9f9f5ae9</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a8478eb93136c9d775bb5bb3492e0eb61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a2067110adfa9c070a2075beee6e0e2a0</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleStep</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a48f42656f848c2b8fc1e554aaed0e7b5</anchor>
      <arglist>(double step)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>singleStep</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a6c99873b0a0e05b4d7ee2931b609b3da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a8e86dbc1b1f11545f35b7f69cd0e6720</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a552d928e6918c4d4b1998fd88bfffebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; double &gt; &amp;</type>
      <name>valueChanged</name>
      <anchorfile>classWt_1_1WSpinBox.html</anchorfile>
      <anchor>a3bd5685d184893af09ac1ecff20fa912</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStackedWidget</name>
    <filename>classWt_1_1WStackedWidget.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>WStackedWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a32b77a6dded133822098ac759d108bbe</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>affaa67bed3b16d9cca3c83a1d9386918</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a47fd91b7a51f57f341fde82b611cc1a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a82b399a7a80f64617b1e8995999476d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a7a199e9cf57bee54333880534070767c</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a4a2f79cf685ade6ad529e0673e22e6b0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WStackedWidget.html</anchorfile>
      <anchor>a460ba17f219b8cc75748735417b04828</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItem</name>
    <filename>classWt_1_1WStandardItem.html</filename>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abe5aebe20c0c5309be95928996e3acf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a599f5dd0b5f6ca0a4bf8025e81be4ad1</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a1cce25693284be45efd3a8a13e9f10ee</anchor>
      <arglist>(const std::string &amp;iconUri, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a302d98cd8d22708e14cbe171b4864d42</anchor>
      <arglist>(int rows, int columns=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WStandardItem</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ab8f7298a52e2884445b5bb7b68e451e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a7922bbfa1b9236f2c3f20ed8082bc2e3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a5cd26b1515b25d32b2872210918d7e68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a6ef82d367150a352795bdb2f780db14a</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>icon</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a8589c64bc69cd96b77487341a681e251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a760bedb0ba3b5f33b0ea8bfa22e5961e</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>acb892e03bc947f0d8a88362ffed90f54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a76442b01365d83b068da168e08b63290</anchor>
      <arglist>(const WString &amp;toolTip)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>adc6f732a90772386087c83d723abb01c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af84903204e2b648662a88bfb1c1f1b27</anchor>
      <arglist>(const std::string &amp;internalpath)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>internalPath</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0a91034168e95924077ec66e1a2d45de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrl</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af17035241a875c0c453d01f48db0a3eb</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a92e9bd9515807142c644a728576ff9c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abbbeb294638fa8a226268084eb9de07d</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3ec85da5d9a6c62fbe420cb002cb18d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckState</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a6cb0c54ca4ef5dd9edba40600c5b6bef</anchor>
      <arglist>(CheckState checked)</arglist>
    </member>
    <member kind="function">
      <type>CheckState</type>
      <name>checkState</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad29e472a0ebe23901593c0d0a1abf89b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aedf80dfed644a525e5d726a4b6e74b94</anchor>
      <arglist>(WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a81bc3d55f8117f5c80edcb3c9c6b871a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a5de5f61ac9b8b57c09da2f55c3a248e1</anchor>
      <arglist>(bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a197e297e6ba98d3b3d4853c7b5a5db32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTristate</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a10320a132e0ffaa3690df4e4d44f4c7b</anchor>
      <arglist>(bool tristate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTristate</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af228b01baec73491dd845016dba539a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>afbe54e68e576c4902c9085f8966c93ef</anchor>
      <arglist>(const boost::any &amp;data, int role=UserRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a5b94df87dd78d97534e016f24234f787</anchor>
      <arglist>(int role=UserRole) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad28fd8e888080cb173b2d876a77786c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af93e0c455c2272dd950dce0644504b15</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0b025885afc1500285359821f52bb531</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a221176a45599230e03d04e4c08f04499</anchor>
      <arglist>(int columns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ae157a0e2b44598cb25803a25d0d8bfe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aae8a2684f85098c41aa34895920a6c84</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a60bcb4a8bd91aecf585c8318ef705f14</anchor>
      <arglist>(int column, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abd54c7797f40c036b38300ba9cdf69b5</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a095602cce3f0c659454be852d9a94a0b</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a2bf1d1d17e5a62ffcb665a0809fe0299</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>aa3633c2a26d7a267f7f433e134b219dd</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ab0f932bb7dcad18eae1cdf80c0be6d4e</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a6990f40f13a6104eebc22776e58c06fd</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad8fedcff08c109dd84a84d7af33cda41</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad7f4b1f298f31e8ebe6954ca91e613f0</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>af1f8742b169e098f3ad9fb47a39dabcc</anchor>
      <arglist>(int row, int column, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a91493ed3198e1f9adec44a43c9612a7b</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>child</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a874247b52596f31126882ee8ea53d3ca</anchor>
      <arglist>(int row, int column=0) const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>takeChild</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0f0fdd581ce3cb5e36e454c5723f21eb</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a7707f797f7c9a726a4cafea31718f3dd</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a837d95bdff4d66b5b8420a93e78a292d</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumn</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad2bdf52c5e251eca480a438db233f7b6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeColumns</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>acd189fbf5324542ad05cfdf0d6376f97</anchor>
      <arglist>(int column, int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRow</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad3e49ceafa130f6b537983b8c186b609</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a114deac9facd4b6c2f47b64a6e90abfe</anchor>
      <arglist>(int row, int count)</arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>index</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a8afc6170ff2544d385823795b4dded37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ad629764e5e03409974d161153a134d4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3077685cc81d575a56ca30199b505c71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>abbf8d957d714eb536135d62dc70a2d22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a578238226092665edc6b20be1a1a9cfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WStandardItem *</type>
      <name>clone</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a56aabcd49c74a1a3570a55883639acd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>ac7753533f27c5e142d6e92ded1f0f683</anchor>
      <arglist>(const WStandardItem &amp;other) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sortChildren</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a0d3540cac93582ab50d111032f4b9b44</anchor>
      <arglist>(int column, SortOrder order)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a3dd6eac751e2181e9c48d8c2ee443a6a</anchor>
      <arglist>(WStandardItemModel *model)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classWt_1_1WStandardItem.html</anchorfile>
      <anchor>a9056b7fc97af6b294fd105aa5ec18656</anchor>
      <arglist>(const WStandardItem &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStandardItemModel</name>
    <filename>classWt_1_1WStandardItemModel.html</filename>
    <base>Wt::WAbstractItemModel</base>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ac196f72fe7716da075fd07733b1c1b6f</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aef7ec1979605acf6a508989a3f93a05c</anchor>
      <arglist>(int rows, int columns, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStandardItemModel</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>af361083dead5e486bafacf68165df7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aa07712b2aa72937a9736150fa85f55be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>invisibleRootItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a5fdc79e8100020d98a77ad3543019477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WModelIndex</type>
      <name>indexFromItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>af12ec42f5800fce941b755e78ad12c9d</anchor>
      <arglist>(const WStandardItem *item) const </arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemFromIndex</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a145e32a4cbc3972eb96a4021710a8c3c</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a2fe535fb71106a3627f71b82b6f5baaa</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>ae556b6aa88a3643e74cec7772901d28e</anchor>
      <arglist>(int column, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a96216a68e34ebba32606a51c53054bf9</anchor>
      <arglist>(const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a78fd43e608a944d6133d605a6093a9cf</anchor>
      <arglist>(int row, const std::vector&lt; WStandardItem * &gt; &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a29b3e2f5a3f034b2c2e3ad912bfde2f3</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a0d06fe8a64f5f2afe3250e449293a8d3</anchor>
      <arglist>(int row, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>item</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a32d755ace793c2110b0fa5d650a0d577</anchor>
      <arglist>(int row, int column=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a70852fa43e28b529193e9f9ffbf466b7</anchor>
      <arglist>(int row, int column, WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>itemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a382fe331f22553bdd3e8ea80c8e6c4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemPrototype</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a3acfcbe5f75c2b2f41d503056c12f734</anchor>
      <arglist>(WStandardItem *item)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeColumn</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>aa611e8b36fb94233795e1b5dfa1010a7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WStandardItem * &gt;</type>
      <name>takeRow</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a06ede866383dd1ffd08c329ab8213788</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WStandardItem *</type>
      <name>takeItem</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a78fec4e8611ae29d8ad729590169be2e</anchor>
      <arglist>(int row, int column=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a3aa1f52a3ae23611267e049130cb472c</anchor>
      <arglist>(int role)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sortRole</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a9bd7204c237e9fd602ad4b6d046f3ac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a884ad9c56cee759be868b3db5c520ee2</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WStandardItem * &gt; &amp;</type>
      <name>itemChanged</name>
      <anchorfile>classWt_1_1WStandardItemModel.html</anchorfile>
      <anchor>a4a8ab0eea450c93b040aac6f76c1346f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WString</name>
    <filename>classWt_1_1WString.html</filename>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab1118313feb49fd2a1f7eab40f7f7a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1259e1f8285f3e04ef62fb59e6c83f4e</anchor>
      <arglist>(const wchar_t *value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a22fb311a713484d978b52b6787910da7</anchor>
      <arglist>(const WString &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a217c6be8205e02d3e2580b6c59357bb6</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa1e577f4cf6352a3a657fde3f7d3034e</anchor>
      <arglist>(const char *value, CharEncoding encoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad2b612d535553feb1e4d08347f5475b1</anchor>
      <arglist>(const char *value, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a65df74efecfae4e46c68fe3ff28ff81d</anchor>
      <arglist>(const std::string &amp;value, CharEncoding encoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5aaf5904a4293de24d79ec953cf0d3b6</anchor>
      <arglist>(const std::string &amp;value, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WString</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ad3e7e1481f31514ecf58a6a344ec6ca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>afbd9254fb159d682ed4a2227a7ec69b7</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5a1bf5761127553e8189a278525af71c</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>accc7df36ce3febb1b2e1c297b30fafd2</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a111e77b8cf401664d191eaf3f85867b1</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abb46a3098a1a185a3498fbcf4c714c7b</anchor>
      <arglist>(const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0c455e324e5e756c456cd662f829373c</anchor>
      <arglist>(const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a64bbf435dfe82342ce43faf9c48ee28f</anchor>
      <arglist>(const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a36d097b2ed9a2e921ad2d6a79bc3dd25</anchor>
      <arglist>(const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>operator+=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>acac4b0bc682e0789edc2976883ed7a5a</anchor>
      <arglist>(const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a87a90e69ab25d62ba029e10ea244abaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a159d088da6e8f2be1035b2341889254c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>value</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ab76d45947986f8aa20763cf99267ec23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0b90340ac2dbacb9b4d81e92d9070066</anchor>
      <arglist>(const std::locale &amp;loc=std::locale()) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::wstring</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aaf8a69faf2551af5afb4757fd02f631b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>literal</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a61a714a97bb6d70d60be6f9a1997e636</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>key</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a18807776c41bdaebd7264bbabdd2282a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a1c3d0d7790282777ce13edececfe0095</anchor>
      <arglist>(const std::wstring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a7da2111a8ca361ccd7d77df0232b3986</anchor>
      <arglist>(const std::string &amp;value, CharEncoding=LocalEncoding)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4761af728bf3cc5bca4ae3770243883e</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a167d99295d497bc37c11893c175e7e02</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>WString &amp;</type>
      <name>arg</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aadfe619a23256dab80fd238c6e4ad7d7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>args</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a59dcc59bd1bc95984f2add4e32e914c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a545b18b7e07b4596281970ca1599430b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abcdf277c20807ab963effd7e54732fa8</anchor>
      <arglist>(char delimiter= &apos;\&apos;&apos;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ae4b373b58ce67056080286a6ceca59b1</anchor>
      <arglist>(const WString &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a17afc7c43b5b7a710047be4a2c639575</anchor>
      <arglist>(const std::string &amp;value, bool checkValid=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4fbd5cdc92e39411de45acb680b1206b</anchor>
      <arglist>(const char *value, bool checkValid=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0afc7dc0f9897456d71b569a86ca26c1</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a42a4aad50b5a1633b1cfef4c0ffa044a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const WString</type>
      <name>Empty</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a511a12bce677dc733bd7b6b9415bff73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CharEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalEncoding</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52ae31c944a7e88c44611f9317e7c1223e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a55b820090cc9d15753301df90e35fd52a92c04a55980fec5344377e55b271cfd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WString</type>
      <name>WMessage</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a552bc8e01a4bc1c6ba53607c414a82b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8e74a971d0d341af51ffcc77fc4c5f29</anchor>
      <arglist>(const WString &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a20e373795a949c805d82cd7793ce0847</anchor>
      <arglist>(const WString &amp;lhs, const std::wstring &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a29b92c396a6bdc6703a38c2da0822065</anchor>
      <arglist>(const WString &amp;lhs, const wchar_t *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>abf52ea1a14eff4dc0f19fc089c499b58</anchor>
      <arglist>(const WString &amp;lhs, const std::string &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8358446c46d0433f3f080698e271b91f</anchor>
      <arglist>(const WString &amp;lhs, const char *rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ac5c8dce7d5d1e3a9abe13a9d9093fbb2</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aec7aea6adc509be52d4852cdad577aa7</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>ade2e90e8c1b589d5c7cde214e05953bb</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API WString</type>
      <name>operator+</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a21c7b1899a0c1fefb22cad296605c66b</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a902005eafdaa7adc292dfb384feed65f</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a8b3b3574ae5e0eb9d8a74663a7ef52ad</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aafe1405efe5edabdb5fa11a2f0891899</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a18fa1117aac536af9a3eeaf4a06d33e6</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5be68db1207e42e9cb78584aada52b7e</anchor>
      <arglist>(const char *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>add2140b578bed246c41705506987ce8d</anchor>
      <arglist>(const wchar_t *lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a39afb0dc0c18f1c4ae9a1c36fd061722</anchor>
      <arglist>(const std::string &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a4bbceb2c54d45a3b0b6bc55d15a17dba</anchor>
      <arglist>(const std::wstring &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a82f539b8c205675c9c9f4d5d42cc9c57</anchor>
      <arglist>(std::wostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a5175831fb21a4e6245bfde54c5aaa3d2</anchor>
      <arglist>(std::ostream &amp;lhs, const WString &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wstring</type>
      <name>widen</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a0de7f8ee205f8a3368d6428e4b474f11</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>narrow</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a2986eba78638de302685abc4f8e694d0</anchor>
      <arglist>(const std::wstring &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::wstring</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>aa5e236feac365794b288fd04a461406b</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>fromUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a302015c198cc14fb1705c99797253b48</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a32dae81c17e873b041a85a8509c905a5</anchor>
      <arglist>(const std::wstring &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>WT_API std::string</type>
      <name>toUTF8</name>
      <anchorfile>classWt_1_1WString.html</anchorfile>
      <anchor>a402d7dbb582ee830e5718b50b53e971a</anchor>
      <arglist>(const std::string &amp;s, const std::locale &amp;loc=std::locale())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStringListModel</name>
    <filename>classWt_1_1WStringListModel.html</filename>
    <base>Wt::WAbstractListModel</base>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a8473bc475b42b0d2bbb171ab22f498fd</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a730e0b9b2fd0922d274b4ab7278420e5</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WStringListModel</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>afa9abc72565103ebedc8efa26dad427a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a605688afa2a1810e1a01b3ef3d335bda</anchor>
      <arglist>(const std::vector&lt; WString &gt; &amp;strings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertString</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a3bf0b8d2e110cbd518a57f74e8f9e4c6</anchor>
      <arglist>(int row, const WString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a11d42c5242caafbdc6cb21d56f7e8a8b</anchor>
      <arglist>(const WString &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WString &gt; &amp;</type>
      <name>stringList</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>ad51da40b9c4267fffbb439bdc0ef718b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a5ee1ba3f7d36612e3a78fdc132b5b327</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a9a650aa1d48d5e634573c930a5f62b45</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>aa953d435f25052df7b2c09a6f180c606</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a81138b8b606df663cc7163265a9b0644</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a0c22294fa02436654cde45e34a84a228</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a5d73ec0b7b622a4117afaebea3d4ce6b</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1WStringListModel.html</anchorfile>
      <anchor>a3cc26548b0301db88afc8a52a59e8f55</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSubMenuItem</name>
    <filename>classWt_1_1WSubMenuItem.html</filename>
    <base>Wt::WMenuItem</base>
    <member kind="function">
      <type></type>
      <name>WSubMenuItem</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a0c56dcd20f9d6afaaf289d2270e3b296</anchor>
      <arglist>(const WString &amp;text, WWidget *contents, LoadPolicy policy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubMenu</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a33eccd31a4aa8436cf66effa2cecf94b</anchor>
      <arglist>(WMenu *subMenu)</arglist>
    </member>
    <member kind="function">
      <type>WMenu *</type>
      <name>subMenu</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>aa30469d72bfdec0c85181f012e269e9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>pathComponent</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>af774d49f24f2ee362cc28eb688cb9eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>createItemWidget</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a3883ce17fd7d04553510700189fbc7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateItemWidget</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a44820d1555db0e1f6593dd80d1c0b34e</anchor>
      <arglist>(WWidget *itemWidget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>ad3096bef2abbc291cb2560cd16d92458</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SignalBase &amp;</type>
      <name>activateSignal</name>
      <anchorfile>classWt_1_1WSubMenuItem.html</anchorfile>
      <anchor>a38d7a0fa3581f34aa72c9fd4d1a6eaeb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSuggestionPopup</name>
    <filename>classWt_1_1WSuggestionPopup.html</filename>
    <base>Wt::WCompositeWidget</base>
    <class kind="struct">Wt::WSuggestionPopup::Options</class>
    <member kind="enumeration">
      <name>PopupTrigger</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7cad80c92d68c8396d82670be1a4bc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Editing</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7cad80c92d68c8396d82670be1a4bc69a21a91e46a3a341cfa7c6883a77c7c272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DropDownIcon</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7cad80c92d68c8396d82670be1a4bc69a3eb6dd8408d1213104f8b4720b6e6836</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSuggestionPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a854886c83fd73cdb5f3c338cc0baf6a5</anchor>
      <arglist>(const Options &amp;options, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WSuggestionPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a2ddf4c97fa85c77de4c76cbca24951bb</anchor>
      <arglist>(const std::string &amp;matcherJS, const std::string &amp;replacerJS, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEdit</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a56813832a386cdc93a0e70b0d0aa5f92</anchor>
      <arglist>(WFormWidget *edit, WFlags&lt; PopupTrigger &gt; popupTriggers=Editing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdit</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>ad8e85625b9309639222ed1893c57713a</anchor>
      <arglist>(WFormWidget *edit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSuggestions</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a0beae292354fa79c2bbe68e9b11c8f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSuggestion</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>aff509867327911ed93445c56231680fb</anchor>
      <arglist>(const WString &amp;suggestionText, const WString &amp;suggestionValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a4b4e3dcc77433195c5439ab86ac5d95c</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7fa2fe71e41607f45feffa8f14697db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a6616d230bad6511bc40d3bf2c1e4ec84</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultIndex</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a9ebf63d4048a9662c3e05ae6be162993</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defaultIndex</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a9533638edb1114a703fe0617cbe67921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterLength</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a8a77e3397fa98db0639fca3b1c94a8a2</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>filterLength</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a6f06ad67c94d06f1ef7d73ec2c51de39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WString &gt; &amp;</type>
      <name>filterModel</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a4c7f8529e7d49fca2a10e95bdbbd9815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, WFormWidget * &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a63f0db2301510404922d7ed1572b92cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalPopup</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a20846bf7fb64c992a2f98904b482b1c4</anchor>
      <arglist>(bool global)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>abd7500d03679e0190307a753d78085ec</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a7db92809f8e5d3751d2a9bf446549497</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateMatcherJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a415162037c68f38e4141264022b02489</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateReplacerJS</name>
      <anchorfile>classWt_1_1WSuggestionPopup.html</anchorfile>
      <anchor>a58e9fd0c214cdc80170c42933af206aa</anchor>
      <arglist>(const Options &amp;options)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WSuggestionPopup::Options</name>
    <filename>structWt_1_1WSuggestionPopup_1_1Options.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightBeginTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a641575cedc6544eee08473482de42b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>highlightEndTag</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>af26bd646168b1fd0bc442015464188fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>listSeparator</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a4711cf874a36b2a64010ad669b3b68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>whitespace</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>aef3e98b66b4cc136e2c726079d6681de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>wordSeparators</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a3e29211108f2b156a0b983a5a15ecece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>appendReplacedText</name>
      <anchorfile>structWt_1_1WSuggestionPopup_1_1Options.html</anchorfile>
      <anchor>a800a6cda2637ce1fe3bbc8fe981dd1ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WSvgImage</name>
    <filename>classWt_1_1WSvgImage.html</filename>
    <base>Wt::WResource</base>
    <base>Wt::WVectorImage</base>
    <member kind="function">
      <type></type>
      <name>WSvgImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a06fdb6d6f125cd23f53e40ef63970a87</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WSvgImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>adae0510faa27fb9ae5d3e199de3cd5d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a9716e255c443f13d4845799f2ddadf67</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>afd7b970580c7433fe58ec157d273d824</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a856da1392335f90675d3d110c90a8e02</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>adaeba36845c9772efc195a88a53584a6</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a7f76614002d01f2fce87b9fd5097009e</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a91666089c7882eedf1cafde09db6a400</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>ad0333d7b9933ced6929d1482f8320fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a9dac09bd538e107a2808effbdd42a0c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>aeadc4934d16507d660ad8b95e4ad407a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a11bb431a8cec09c1e38c710e50407043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>aee03b670ef9fb624e4393a9ef55005d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>af8655b3ac955b1e87e64a4db7912a03b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>ae79007c08cab7b4c9f24f0e0210c02e1</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a674990e3990d86462436b2ac01df6baf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a1da329a749b8b699ec599cc711a16870</anchor>
      <arglist>(WPainter *painter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WSvgImage.html</anchorfile>
      <anchor>a4e2760d99101aaf5f87f92616f3d4b2d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTable</name>
    <filename>classWt_1_1WTable.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>aa5c23e5c08d11315063e7714c85a8364</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTable</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a342361febd4e025a71d4ccf3990b9c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTableCell *</type>
      <name>elementAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>ac4b59af9a44e185edb14e7f1f439d6c4</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WTableRow *</type>
      <name>rowAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>aff46a40881a7d0967d7435d8d479bedb</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WTableColumn *</type>
      <name>columnAt</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a37dc3995a309d32a0e4bf857596df00e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a5c45c882a0b3af6d0c0ed13b6217c078</anchor>
      <arglist>(WTableCell *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCell</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a46b216d395d19f3f9a71d1f168ca4f16</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>WTableRow *</type>
      <name>insertRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a53a8121130504141346ec8f355f6d691</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRow</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a1e0910054f11ebdc8ae3a5cd7b03975c</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>WTableColumn *</type>
      <name>insertColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>acfc99f211e1bbf2ad5c5898347a412a4</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteColumn</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a5cb1b9e4cc08ff62f203eab0894e0756</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a431d6a3da63ab9696e084ad7c2438afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a79d5dfe40ee5e67c5007ee370e8cd2f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>a4d062330d1c9b3f202985b92dcb59d4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>ae5e4e17ae51492b26e1930332d2f5bae</anchor>
      <arglist>(int count, Orientation orientation=Horizontal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>headerCount</name>
      <anchorfile>classWt_1_1WTable.html</anchorfile>
      <anchor>ab742cd4fbda9d0692aad3165c34e0e84</anchor>
      <arglist>(Orientation orientation=Horizontal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableCell</name>
    <filename>classWt_1_1WTableCell.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setRowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>ae14b338d8395de33d93f7a28ef2b3edd</anchor>
      <arglist>(int rowSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>ad2a5d47f9ae33fc3a0bcba6bd84ddd7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a0f4912b4c023b78e6de41561e2e0a62a</anchor>
      <arglist>(int colSpan)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnSpan</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a885083e7e30a3d76f33c39847dc3a6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>row</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a50e770e21680477b17057056cf94d10b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>column</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>a2c1860eb33dbb70381eef117790862fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableCell.html</anchorfile>
      <anchor>aee883c3bb465b97551f00947adb05a77</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableColumn</name>
    <filename>classWt_1_1WTableColumn.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>aec83d3ab2ad075209fed09e5ee80df64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnNum</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a75bdc9289edad19c01e7698414db6147</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a5c5c0bb9110387e389e5151cbeaab81e</anchor>
      <arglist>(const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a4a527b0b4294c5a9b367eb5b6b653812</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>aae7b55f11d53043c2512536144eab42d</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>ada5fb02b5164ebf3cd7f0e5abe98cc53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>a319304807e13d2a15ea40384f9080033</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WTableColumn.html</anchorfile>
      <anchor>abd8af1a254554ad9bc465bccb4411b02</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableRow</name>
    <filename>classWt_1_1WTableRow.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type>WTable *</type>
      <name>table</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>af06f80cc7f5fc9bdc36cdefa691433d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rowNum</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a67848b510b4803a2ba3be800de89b7bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>aac0b7d156d2f4d3897802b7e9771c1de</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a71719040fa936136f48a43301301f46e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a5ccc6742f7b5e1aa1284fb6f5f62540e</anchor>
      <arglist>(const WString &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a74e64af29ed20db6a6b5cd84e3eb05a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ac9d66838aceb059dfb0b43c250caa6ec</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a9f39b7412ea915eec131fef374d8a5e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a99b3fcea3f7dec12b34d2e0222699010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>a189bb29f29777795bd0910468e697c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ad7dbf026ef77f8204a7d49d805fdbb10</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WTableRow.html</anchorfile>
      <anchor>ac16b8e1246aa646e7dca93c13685a392</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTableView</name>
    <filename>classWt_1_1WTableView.html</filename>
    <base>Wt::WAbstractItemView</base>
    <member kind="function">
      <type></type>
      <name>WTableView</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ae48531f45c05a632f0998fc569827e66</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a2e3629fbaee86da21c77c4583efb79ed</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>af37d27044e96919e2fa6af4e25f3ef67</anchor>
      <arglist>(int column, const WLength &amp;width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>afbc128d312f1d5aa75c65352cb43e4ca</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ab17c45b65e38c22c0230062696c36e61</anchor>
      <arglist>(const WLength &amp;rowHeight)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a3d54d6a256ae21fc01df08de377395c4</anchor>
      <arglist>(const WLength &amp;height, bool multiLine=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnBorder</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ab04b345ed42cca116230b8492872a833</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a921a3a6c489b584b261c6b7c7bf720d8</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a1e27074ef479dbc2e35c957c3baea36f</anchor>
      <arglist>(int column, bool hidden)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a36d7e6c66548e8bd39036a878853e0ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a974c354a344dd0225dc81e6e0da94195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>ab07c6b2dfb77dcb785147de0c6ad4875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WTableView.html</anchorfile>
      <anchor>a4efddbc531cafc180bc620b15d0420aa</anchor>
      <arglist>(int page)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTabWidget</name>
    <filename>classWt_1_1WTabWidget.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aef0d42df57c2dfdc73f7ba3791d76af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aef0d42df57c2dfdc73f7ba3791d76af3a97ed17a08a1a30a76f5f3bae0322bc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aef0d42df57c2dfdc73f7ba3791d76af3a6fdba6f7dbf6fb2721351f08eec9cd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTabWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a754d002238ce54b0006230dfb466f3b1</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTabWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>af00ff86a7f5f3a082a9cce5cb051bbcf</anchor>
      <arglist>(WFlags&lt; AlignmentFlag &gt; layoutAlignment, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>WMenuItem *</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a8f5bea792ccb3487fb2f3a9258463b3f</anchor>
      <arglist>(WWidget *child, const WString &amp;label, LoadPolicy=LazyLoading)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>af6aa9e6978aa17609130ff88ae5d31a2</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a2982283dca1b7698cf687e16e4d2b72f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a1d591772cbc00b17c606f6d112fd5ace</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>acced5598138727b6e0f8a8cb72aa11ed</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a55ae29857e27019af4daea64131148d6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a7cb494fc869a67ad6d9a4031682411a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ae5f9a6ab4847f9c3ccc62606a19e1871</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aef94b79d7b26972b3c3587483f8527bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>afd7bd7a9ae110bfcec42ebe0be1c0c3f</anchor>
      <arglist>(int index, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a08c8caaf857857497128a80d20f444c7</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aa672a2e2bb5ee5f3fa260b8c0abe3032</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabHidden</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ae20623f2150e1d7e01926d6acae63801</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabCloseable</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a3cca019ee3ad730633d4341542985dba</anchor>
      <arglist>(int index, bool closeable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabCloseable</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a594e9376c27382be684742c2c78b72a4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a2f941cb6a5bb6092cad3f438acd2de14</anchor>
      <arglist>(int index, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabText</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a65f1f96d293b575aefe99c2feeee6c1f</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>abc7e97d8921ae9f3ebfb7fd5911fcea9</anchor>
      <arglist>(int index, const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabToolTip</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a080f7cf0bfa0abbca950828b905b92b5</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a855b45897b00f82137cd0eb9e0d40dfd</anchor>
      <arglist>(const std::string &amp;basePath=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalPathEnabled</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a983a1adff54fa47a9a2fd9fea36f11a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a42c7d6ad6bfc8e821e3e667467865902</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>internalBasePath</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5259f4ba319e909685c95fe92f8ddd84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>currentChanged</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>a5447e1149d6c854f25d6fb6792eef513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeTab</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>aefe8917e89b0db34c63634b3092a045b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>tabClosed</name>
      <anchorfile>classWt_1_1WTabWidget.html</anchorfile>
      <anchor>ae71ac8fa905d0fd0a703589d375ce5f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTemplate</name>
    <filename>classWt_1_1WTemplate.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a74a622a38ba317fcf3f8dc0ae4d43895</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>acf69702efa16a728e135958e0fec6622</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>templateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a6976f0561b036c6e4980a9991e8b4d38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTemplateText</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a51db0813cc62cac123aaaa9a21c4eaa8</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat=XHTMLText)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a49b2e1de86726ef96875a347a8d02203</anchor>
      <arglist>(const std::string &amp;varName, WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindString</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a4be1babfa3a79b08ce73ca7fcca0324b</anchor>
      <arglist>(const std::string &amp;varName, const WString &amp;value, TextFormat textFormat=XHTMLText)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindInt</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a89426dcac3371befc127f7d5b04bb5ed</anchor>
      <arglist>(const std::string &amp;varName, int value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resolveString</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aaf3655dc6954a7fab1158fd3b50d03e4</anchor>
      <arglist>(const std::string &amp;varName, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleUnresolvedVariable</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>ad5233b12314148d97dfaabdd2406b485</anchor>
      <arglist>(const std::string &amp;varName, const std::vector&lt; WString &gt; &amp;args, std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>resolveWidget</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aef922e8441694954e14523a368c6cca3</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>resolve</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a14e91697f026557a0bd287392f849302</anchor>
      <arglist>(const std::string &amp;varName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a155b52d94ebf495873daa848db105224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a74f07dc026d40156769ef6d858e21538</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderTemplate</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a98baf277a7dd3144a38edb77cbb3d284</anchor>
      <arglist>(std::ostream &amp;result)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a35d7844ee2f2bbbcde8eeff6683194bd</anchor>
      <arglist>(std::ostream &amp;result, const std::string &amp;s, TextFormat textFormat=PlainText)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>format</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>a8c0ed114c0e3710be3ccd75155253fa9</anchor>
      <arglist>(std::ostream &amp;result, const WString &amp;s, TextFormat textFormat=PlainText)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WTemplate.html</anchorfile>
      <anchor>aafe27c3c2f89359a5c02112da3b155ab</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WText</name>
    <filename>classWt_1_1WText.html</filename>
    <base>Wt::WInteractWidget</base>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a49bf5785263785717834a9d1a7a52399</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>abd144b9486708726fbb535c3f5b144c2</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a49fd6775622dd40cd3676f0945723d98</anchor>
      <arglist>(const WString &amp;text, TextFormat textFormat, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>aec8b48682cf39eba9516c9d5053f8323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a1081f42ae498fa8d23656cec207a4a76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a2f788aa524d51b3962642c9f565e66e6</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTextFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>af22c64c4c5fed3d2aef0915a7e5c5866</anchor>
      <arglist>(TextFormat format)</arglist>
    </member>
    <member kind="function">
      <type>TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>ac0976c36c5181a534f161ca3724d4296</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a06fd47b48126caf4881b027d35ba066b</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wordWrap</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>ab2259537310561d9352f63d566b63fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPadding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a57c9dc7dbc3958fab19763bfb50a8286</anchor>
      <arglist>(const WLength &amp;padding, WFlags&lt; Side &gt; sides=Left|Right)</arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>padding</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a7de80cae510d43cd917dd1f4baa20b09</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WText.html</anchorfile>
      <anchor>a465517b955bf7bbe086401b57d888552</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextArea</name>
    <filename>classWt_1_1WTextArea.html</filename>
    <base>Wt::WFormWidget</base>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ad083421ca4fe15da882440d506cab05b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextArea</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a8c2aa87526952d2645cec139f4ad26bb</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>af429ed3a2b6011c97b4f9ea7f910e079</anchor>
      <arglist>(int cols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ade46b47350f427f45c9b53ac7e41c5b2</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columns</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>afa438b99f8ebf858e3202c262b29a3ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rows</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>abe1a4daf466365557cfd3fbbe8bc9dd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ad8b89ce30df2b02894c53b6ed71fe4a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a1f05060c037d13c2c6c26f51f1fb9640</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>selectionStart</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a81bb8d7f0206cb3a4d907580e274c315</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>selectedText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>ac44ffcd0c2d1e4d1530529962f809d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSelectedText</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a29c5b4df5c37101c82f8c8bdddf695fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a778d626bbf7af043759237764b91f017</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a480530c1847f32f8b94101881484287b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a83a327ce1d6408a99991cd6b5ddc74e4</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WTextArea.html</anchorfile>
      <anchor>a3379006d7dbe832b617303b72924019c</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTextEdit</name>
    <filename>classWt_1_1WTextEdit.html</filename>
    <base>Wt::WTextArea</base>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a451adca0c258c17b37bc544e3684952b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a644d69fc03aca222c38044578e5a181b</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTextEdit</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a3e43187a1a3ad8386cb7c2271cb250ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a8023b2dbe675a22f30a563704d9ae475</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStyleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a7b6df4e80ea878c1c6d57d1c85f60b04</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>styleSheet</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ab3656ebc2b7d8856701377697c42067a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a106e80b7ae54d21a7307f3d4c125d098</anchor>
      <arglist>(const std::string &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>extraPlugins</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>a66163ef0fc23df64e976c7c7d99b2d71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ab569b96e871c547b1f992b727c00c902</anchor>
      <arglist>(int i, const std::string &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>toolBar</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>aeb2451ef6b617267a0b88cd9d4b6dcd6</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ac9f80e652fc361512aa2587c54f4ecb5</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ab268ab5bfd2edda2bf64dad5cd068abe</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WTextEdit.html</anchorfile>
      <anchor>ac946e268b85e49d1155c656f354f00cb</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::InvalidTimeException</name>
    <filename>classWt_1_1InvalidTimeException.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>classWt_1_1InvalidTimeException.html</anchorfile>
      <anchor>aeed96c6aa8932b695039f49b7c369f5a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTime</name>
    <filename>classWt_1_1WTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>af45b86652752e63c00baee8662d793e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a529d211c58a37ad4568745414c4a25c8</anchor>
      <arglist>(int h, int m, int s=0, int ms=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setHMS</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae506c60945d8c2a452233ade046fa9ac</anchor>
      <arglist>(int h, int m, int s, int ms=0)</arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>addSecs</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a2779ca22acb1f51ad93320956501b251</anchor>
      <arglist>(int s) const </arglist>
    </member>
    <member kind="function">
      <type>WTime</type>
      <name>addMSecs</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a534f180014e634562dc808bc1e36e215</anchor>
      <arglist>(int ms) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>acfff1a1b2a4c38af39649491c15d516e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>aa8e2713bf2844daeaf97820224a941ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hour</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a2c7b13602f9da6c8f962ab732ece2c37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minute</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae9d6e852ce86333537bef1fc133d7942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>second</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae009d5f15e86a6976cb2519efa3bdfee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>msec</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a9eb15777053a11ed7212a44978f07f0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>secsTo</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a53bc25995b5c3cd1bcffd2e0d562e08d</anchor>
      <arglist>(const WTime &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>msecsTo</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a425254ca9b7cd851cbb2f0ed281b41d5</anchor>
      <arglist>(const WTime &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae8f4ea5cd7d712e13b2f48c9e734ce6b</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ad494013fd2bf5ad1d3d2360c5e2ba008</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a25c68de5cdd312a79096423e47d87008</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>ae444c1b237d3d47bccf3b4acd8bc0456</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a260e9fc5c00732f3d2a8a0984339114c</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a838f4a55e5a114b04af0d6285f016531</anchor>
      <arglist>(const WTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a34367d6f97d872d7598c1ba88b4fc95c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>toString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a02bf6eabd472474e73ef017414052751</anchor>
      <arglist>(const WString &amp;format) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a4937c5baf2c39affad90eace5e8178c5</anchor>
      <arglist>(const WString &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>fromString</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a9be98d6095a48d81e4eeb7315403f5df</anchor>
      <arglist>(const WString &amp;s, const WString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WTime</type>
      <name>currentServerTime</name>
      <anchorfile>classWt_1_1WTime.html</anchorfile>
      <anchor>a271bd124707e50cc15872e263ffa71f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTimer</name>
    <filename>classWt_1_1WTimer.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a1fb659aac40b49b3ec7631d558884847</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTimer</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a6b983b4aa0a3594cad4a236f5a4acd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>interval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a3aedc0ad65a5d57bea4b805a92d7736d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInterval</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a3a4070540a6b0e10bf1ee7bd607334fc</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>aeabde106e48ea67e10c4043609b85493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a61dd8a5ac6fc6d9bd995e08ff7fae83c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a92ae68d15de600174afdd2e443397604</anchor>
      <arglist>(bool singleShot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>ae167fbd3eb981a2fce52e9a4b3b6e0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a73c5d1b882af4835384ccdc07a650e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>timeout</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a2a66c6a51df2b0ab42258abf2ebd0399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>singleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a47340f28a1c9d284f8b085ee4ed5924a</anchor>
      <arglist>(int msec, T *receiver, void(V::*method)())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>singleShot</name>
      <anchorfile>classWt_1_1WTimer.html</anchorfile>
      <anchor>a822b5fd4d575896b88a9539ef60612a7</anchor>
      <arglist>(int msec, const F &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTransform</name>
    <filename>classWt_1_1WTransform.html</filename>
    <class kind="struct">Wt::WTransform::TRSRDecomposition</class>
    <class kind="struct">Wt::WTransform::TRSSDecomposition</class>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aa83f5dc582b77c4ac706cfb6b097a6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTransform</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a7af529e947eefac16dbce9d4ecdf374b</anchor>
      <arglist>(double m11, double m12, double m21, double m22, double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a5b316f9ab4b128fac20ddc193e9a531f</anchor>
      <arglist>(const WTransform &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a8d67ff2dd96e1b7a046a81dba72b8358</anchor>
      <arglist>(const WTransform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ab8279e66b2fced0710869593f1b7f89d</anchor>
      <arglist>(const WTransform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a2886f3ac1a3e60f90aae2505db3a6631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m11</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a1887ee83c3b274284c323ef836529ab5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m12</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>aa5818883ee9a0d4f2ccede54fe4aae75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m13</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a54c72247dc6c537b2af6c051acdf6364</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m21</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a50b1309a9ba5a28fda585ff2645955e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m22</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ace965ba306019e1eb77e2e19004fe26b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m23</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ac4e9f7cbdf20f929e566cb1f94f3073a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m31</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a8b0d30f356852c84482864009c959f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m32</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a4c3829751f5f1e48b9cc9cd43c22edb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>m33</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>adc52fe2393cb3183c5e76ada10fa1013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>afd36c0961fe1cc7ff476824f3dfc9cea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>dy</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a6828e36286b2fe38ec56446b007b1d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a201cba0a65a466383c48eb6d73b2f281</anchor>
      <arglist>(const WPointF &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>affc1cb0071a86302318255fd867d08a1</anchor>
      <arglist>(double x, double y, double *tx, double *ty) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a36e8423634a12878a6a7262bd749fe6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a4f494c6f886c1b8b15c635e2dc81cc0e</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>rotateRadians</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a72f394181e722cd890c06bb37e36e7db</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>scale</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ac9cf750c7ce44b4ecfcae59d4dd964ac</anchor>
      <arglist>(double sx, double sy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>shear</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a94e146a18a35ec1a9f70cf09c2df8349</anchor>
      <arglist>(double sh, double sv)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>translate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>ad4cd675b5072c25b0545167ba41586d8</anchor>
      <arglist>(double dx, double dy)</arglist>
    </member>
    <member kind="function">
      <type>WTransform &amp;</type>
      <name>operator*=</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a8363fe6e026aa50b876f0adf195b422b</anchor>
      <arglist>(const WTransform &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a3c87fbc872245469f325737360ada659</anchor>
      <arglist>(const WTransform &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>determinant</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a1f5205bf60740327910dc93b057b2a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>adjoint</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a8fabda162bf70c144f58524708ade180</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTransform</type>
      <name>inverted</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a9747188f5900f5785ac15ffa3838533b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleSkew</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a1ff5716f31b5c2f2031e93bfcdc834cb</anchor>
      <arglist>(TRSSDecomposition &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decomposeTranslateRotateScaleRotate</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>af5d4d93e4efed30f10aef73e44fff719</anchor>
      <arglist>(TRSRDecomposition &amp;result) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>degreesToRadians</name>
      <anchorfile>classWt_1_1WTransform.html</anchorfile>
      <anchor>a425668a0cfd60a40f344f47d1a4cec92</anchor>
      <arglist>(double angle)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WTransform::TRSRDecomposition</name>
    <filename>structWt_1_1WTransform_1_1TRSRDecomposition.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>dx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>ab8439c2aa98232a58a31e629c3a6bfda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a7a7838a113ae6d9d503d61ec1e834b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha1</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a32b755359b0bc486b377ab23e914b499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a1dd3fcd36e7fa13b599688a2367fb5b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>a28cbe0f83bd66609d8f446bdc6d6a32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha2</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSRDecomposition.html</anchorfile>
      <anchor>ab351fba1317a61465b9b3833b59b90c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::WTransform::TRSSDecomposition</name>
    <filename>structWt_1_1WTransform_1_1TRSSDecomposition.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>dx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a3a83987c2214adab86987689db699285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a12d16f1a19223c83ee0715759d2dbc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a7719633bfa269511de91fe323d08b471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sx</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a465c59998f6c07d80f67faa9aac566cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sy</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a4be597e68e03aa5d613203ad9830028a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sh</name>
      <anchorfile>structWt_1_1WTransform_1_1TRSSDecomposition.html</anchorfile>
      <anchor>a3482d6a7b3a711eb6e1d516690b07a12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTree</name>
    <filename>classWt_1_1WTree.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="typedef">
      <type>std::set&lt; WTreeNode * &gt;</type>
      <name>WTreeNodeSet</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a2308f07ae7dfb959360ad1bdcf394e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTree</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a0814258c8147d68000402468016f9817</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a040f5fa4df57cbfb586d686ffe1326d0</anchor>
      <arglist>(WTreeNode *root)</arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a54de80f955e54acbab38a344546ce0bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a7270f705ad5f9be1e2bee06a73348a9a</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>afcc60067220a91ce69dde46ea413afc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WTreeNodeSet &amp;</type>
      <name>selectedNodes</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a7d415764d1fce3d4c9d33713892c0ef9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a9e09dff326743004dc9f2bf27408551a</anchor>
      <arglist>(const WTreeNodeSet &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a52c770a65ac3f4c2493f714271a5133a</anchor>
      <arglist>(WTreeNode *node, bool selected=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a3969fd0bab17347bb32727dba2ff9682</anchor>
      <arglist>(WTreeNode *node) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a14a781edeb90b3040a5e09238290514e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>itemSelectionChanged</name>
      <anchorfile>classWt_1_1WTree.html</anchorfile>
      <anchor>a103603f639e07f83d1a75e293b70966d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeNode</name>
    <filename>classWt_1_1WTreeNode.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="enumeration">
      <name>LoadPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a51c02b42c069e61a269fde598b9a1bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LazyLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a51c02b42c069e61a269fde598b9a1bffa4a962a514c531fb52c5958f61950ff3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PreLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a51c02b42c069e61a269fde598b9a1bffaf771c90906d73ed5eb1e6728366241e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NextLevelLoading</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a51c02b42c069e61a269fde598b9a1bffa387323cbdc8efd12ef6bf8553876c011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChildCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0deb92963922074b6262f71e9fccd24a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Disabled</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0deb92963922074b6262f71e9fccd24aa3b31c2b770a9acffa43daedf402df6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Enabled</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0deb92963922074b6262f71e9fccd24aaebbfd35e39c920c5f2dbe74380e3abce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lazy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a0deb92963922074b6262f71e9fccd24aa256625b6187b3107b1eb201c1758a793</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a169f429e0f0e1fe6d0874f9db72d041a</anchor>
      <arglist>(const WString &amp;labelText, WIconPair *labelIcon=0, WTreeNode *parentNode=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a1ec9b14cd8388631acbb3e82649d0d67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>label</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a32c24104359b595cbaf914e35accb3b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WIconPair *</type>
      <name>labelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a2095a273249da81688699ff9750ea2a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelIcon</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a906d6afe249fbebd9735dc9c9ca11166</anchor>
      <arglist>(WIconPair *labelIcon)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a460f47f625133c99c622c71309bdc373</anchor>
      <arglist>(int index, WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>adeb2bd7c946ef9c7bb5b72b3f88453a6</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChildNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a6513443612d2456a69610e744bc629f4</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WTreeNode * &gt; &amp;</type>
      <name>childNodes</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aa0f780835958f27b08fed66c1e4461e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>displayedChildCount</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a1a2bec02861430af0a8b80dd9e84324e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChildCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a5a625b5a94386386dabd36277d5f7c1b</anchor>
      <arglist>(ChildCountPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ChildCountPolicy</type>
      <name>childCountPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a970b7d1e5df403888e7c44750bf4b149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImagePack</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aff37a6152a8195dd9b2a80e593d94298</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadPolicy</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aaf3d613cc461f4d9d39a71cd45bd155e</anchor>
      <arglist>(LoadPolicy loadPolicy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a948dd8443c0228268c1d75b825e66327</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a60428cfc48b2a39550efc308b38406b2</anchor>
      <arglist>(bool selectable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSelectable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a413239e83c39e46fbb7d9525ac615241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WTreeNode *</type>
      <name>parentNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>abebb8dd92b2470901a3c9fb36e315c62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNodeVisible</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a63d37fa9bb5a3ba8ea178b5f3737626d</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChildrenDecorated</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a5594488be1f49052915b4ecc840f44ce</anchor>
      <arglist>(bool decorated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteractive</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a85e7232623373ad75a5b5bbdbbf734ca</anchor>
      <arglist>(bool interactive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a10e99f9db96ec2fc500927a5d50caafe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a43ed4fd057fac436d93bda4a6d1de7dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>adecb58d1334ac18d7e78e6e4d8e2e0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WMouseEvent &gt; &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a27b27bfa04d5414e058427ecfdc82309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; bool &gt; &amp;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a23a35eefeeda38afbca4cf59404c4806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WTreeNode</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a3e414fb2edce78eab5431db82aefed15</anchor>
      <arglist>(WTreeNode *parentNode=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WTableCell *</type>
      <name>labelArea</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ae87e7590a98a4ccdbec6aeb49fd14025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populate</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a9ab70c6020dbd9ea3204c625029a7a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>populated</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aee388605958559d124616ce9dbfc7df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>expandable</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a4f19826594b5b080b0a436c474c31f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSelected</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ae4bb84bf91002f80941d2e890cab12cd</anchor>
      <arglist>(bool selected)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>imagePack</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ab79f1baedef8134c2d25b22a988f5c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantRemoved</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>aea7b6b2ba3d170fa57dfb7451f878a5d</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>descendantAdded</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>abfa02369517d2cc7cd3ee1d3839740e3</anchor>
      <arglist>(WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a7cf5f24e57d19df0b8e01638c75c4bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a98cc68ceed98e3e98145fe5a8129c066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoExpand</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>ac0d0cbdfb0c8c0d493e70a6b40b40fc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>undoDoCollapse</name>
      <anchorfile>classWt_1_1WTreeNode.html</anchorfile>
      <anchor>a67cd4a5c8169919e1e1feadc1cab7ae3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTable</name>
    <filename>classWt_1_1WTreeTable.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WTreeTable</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ab6224d3b98077147c7c6ce96d167e407</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a2ec7655241ad65f99c114d6ed37b49a1</anchor>
      <arglist>(const WString &amp;header, const WLength &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>abcc40b31b73d964c025e2891224e081f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTreeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a1a9de525c82f7f6aadb9842f2bcf46a0</anchor>
      <arglist>(WTreeTableNode *root, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTreeTableNode *</type>
      <name>treeRoot</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>ad2df80ef5a3243b7b695946f5fbd8614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a7a886c66febb9c32c0b044b6f5cffb0a</anchor>
      <arglist>(WTree *tree, const WString &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>WTree *</type>
      <name>tree</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>a4c9a1d8257e8f24d164708f3c2738de3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WLength</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>afdb33da75ddd2eb71272a11b445ed346</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>WText *</type>
      <name>header</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>af20309bf1c221d907a72823595766af8</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>headerWidget</name>
      <anchorfile>classWt_1_1WTreeTable.html</anchorfile>
      <anchor>afa8204f217f77725f7e243ece08e5ddb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeTableNode</name>
    <filename>classWt_1_1WTreeTableNode.html</filename>
    <base>Wt::WTreeNode</base>
    <member kind="function">
      <type></type>
      <name>WTreeTableNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>ad5c6c8ff8d8d83d386271594444a2691</anchor>
      <arglist>(const WString &amp;labelText, WIconPair *labelIcon=0, WTreeTableNode *parentNode=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a136a48e8cda5e0abbfd0e0d8cf008b36</anchor>
      <arglist>(int column, WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>columnWidget</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a5e9f7b5afb4d92175a3d6307727eee81</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertChildNode</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>a7766f176f956e4fede258d86e208c6cd</anchor>
      <arglist>(int index, WTreeNode *node)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setTable</name>
      <anchorfile>classWt_1_1WTreeTableNode.html</anchorfile>
      <anchor>aafe8ea0231f569644ee9e7a54deb13a9</anchor>
      <arglist>(WTreeTable *table)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WTreeView</name>
    <filename>classWt_1_1WTreeView.html</filename>
    <base>Wt::WAbstractItemView</base>
    <member kind="function">
      <type></type>
      <name>WTreeView</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aa6555aa2d53557340824faa314b318f2</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnFormat</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8b8bfc22f30f0edfe8fe2de37a5fefc4</anchor>
      <arglist>(int column, const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>columnFormat</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aab731f1046a7c0b602678171af9dc33e</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a49566dd5cc8d1d0d95bad4783dd4e11a</anchor>
      <arglist>(const WModelIndex &amp;, bool expanded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExpanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a48eac450ec46ac1eea41822bfd227e9b</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>abe1b839fc999634806df030301422411</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a03cd862e9c5dbbfbc126ac627b48592a</anchor>
      <arglist>(const WModelIndex &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expandToDepth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>add40d3e05352ae094f6fe2b9c879c2c7</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>aef8576ebdf2089edc259362a15e2f750</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rootIsDecorated</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ac6e70d3de6623882f70219934d5f8253</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumn1Fixed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>ac6d50ab57d086e67a2463f8a6a43e605</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>column1Fixed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a403dade7876fdd7e44600738660e17f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a482314306c8404d7ed941fd986e32623</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex &gt; &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a8d014f2cd6637f5f842d7fe2fff00418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; WModelIndex &gt; &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a96586671660b0e81cc2ae99fff284909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a390300f766472476e6a0df5aefaa2ef0</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a33ba5111945bc0ec4745a536d52adec5</anchor>
      <arglist>(int column, const WLength &amp;width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a48f74194ae6bd63c08a6ff76ecb3e39c</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRowHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a849f805206bd1bc83e6bc411f208031d</anchor>
      <arglist>(const WLength &amp;rowHeight)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a2367f47b0c80ec909d8e4d7626955a83</anchor>
      <arglist>(const WLength &amp;height, bool multiLine=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnBorder</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>adba2dc39faa8d427e8adb241b067ebf2</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a3c9e6152cb98150b6be007b3bf4d829b</anchor>
      <arglist>(int column, bool hidden)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageCount</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a807eeda7ff799fb5b711e52acd93b6bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>abc0ec2c9c5a82d0389900c3a3082ac91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>currentPage</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a9a62d0d6e27692c9231165ae9599c85b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentPage</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a09a5d3d9e37fd502e56edbb0c387d21c</anchor>
      <arglist>(int page)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WTreeView.html</anchorfile>
      <anchor>a11f8eb2390ce4585b99344e540fef8b1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidationStatus</name>
    <filename>classWt_1_1WValidationStatus.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WValidationStatus</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>aa40ae47e0987dc7e1f0261372ca43ca5</anchor>
      <arglist>(WFormWidget *field, WWidget *validStateWidget=0, WWidget *invalidStateWidget=0, WWidget *invalidEmptyStateWidget=0, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>a66ee198ccdd2eb5d0de620fc6326c2e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; bool &gt; &amp;</type>
      <name>validated</name>
      <anchorfile>classWt_1_1WValidationStatus.html</anchorfile>
      <anchor>a463b399e7c6d20d7bed88d60290d1fd0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WValidator</name>
    <filename>classWt_1_1WValidator.html</filename>
    <base>Wt::WObject</base>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a638a1feefca259ea2f806a8add2d18a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Invalid</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a638a1feefca259ea2f806a8add2d18a3aa5bf750faac5f1ca6fb58c8de97bac51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InvalidEmpty</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a638a1feefca259ea2f806a8add2d18a3a5e6ab5b841b3066a2d228b9ce7f4f447</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Valid</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a638a1feefca259ea2f806a8add2d18a3a1bc2acb7589ab9e3050867ebfc32dda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a81e355ed7c38c9e5de934d3994b3905c</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a4c4a0b7bcb4c543812b1500c748ab99b</anchor>
      <arglist>(bool mandatory, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WValidator</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>ad7f5599879175c310dac4b76331d7ff6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a6f7993c51a0088b927d7c9aa516efabb</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMandatory</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a8de913a10b24231264de5cc082c0d2fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInvalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>abafa7c49159d5475a8ec6eff1fef8c17</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>WString</type>
      <name>invalidBlankText</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a3518bfa063c9155c99e5ca3990465d35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fixup</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a8766794c9600455d35cafb1bd9af1eb9</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>afce53cf7c8fa1692234df0538163b4e0</anchor>
      <arglist>(WString &amp;input) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createExtConfig</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>acabfaf05f2346019f3f18f6c299bb384</anchor>
      <arglist>(std::ostream &amp;config) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptValidate</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a5141a6c178329e6d26faad71e7bf26aa</anchor>
      <arglist>(const std::string &amp;jsRef) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>inputFilter</name>
      <anchorfile>classWt_1_1WValidator.html</anchorfile>
      <anchor>a1ca29b7eaabf4c1655200ec382a84554</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVBoxLayout</name>
    <filename>classWt_1_1WVBoxLayout.html</filename>
    <base>Wt::WBoxLayout</base>
    <member kind="function">
      <type></type>
      <name>WVBoxLayout</name>
      <anchorfile>classWt_1_1WVBoxLayout.html</anchorfile>
      <anchor>a5ef82f7bc3fdaa19498a38245117dd93</anchor>
      <arglist>(WWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVectorImage</name>
    <filename>classWt_1_1WVectorImage.html</filename>
    <base>Wt::WPaintDevice</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WVectorImage.html</anchorfile>
      <anchor>aaef996920d0cad986a35780811a2121e</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WViewWidget</name>
    <filename>classWt_1_1WViewWidget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>WViewWidget</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a3537a36594d1a8135d63027d6679f279</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a7dcbc05eb15c4d4168141871d5908e37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>aa7865b89645f229c4dbfc6eb9ddf46d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>a3481f6ab6f0db72c4489f31216b40c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WViewWidget.html</anchorfile>
      <anchor>af7df983ff1ca6e1368579f254b85fcd6</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WStaticModelView</name>
    <filename>classWt_1_1WStaticModelView.html</filename>
    <templarg></templarg>
    <base>Wt::WViewWidget</base>
    <member kind="function">
      <type></type>
      <name>WStaticModelView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>af3f267902e8d9693b819fa87966edb12</anchor>
      <arglist>(Renderer f, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WWidget *</type>
      <name>renderView</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>a07efb77007dc9311e47ee15244770426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WStaticModelView&lt; Renderer &gt; *</type>
      <name>makeStaticModel</name>
      <anchorfile>classWt_1_1WStaticModelView.html</anchorfile>
      <anchor>aa2d5588b502ceb66b37ffee8a564cbaa</anchor>
      <arglist>(Renderer f, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVirtualImage</name>
    <filename>classWt_1_1WVirtualImage.html</filename>
    <base>Wt::WCompositeWidget</base>
    <member kind="function">
      <type></type>
      <name>WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a5e4388b3757e5466fee84779dc8eddde</anchor>
      <arglist>(int viewPortWidth, int viewPortHeight,::int64_t imageWidth,::int64_t imageHeight, int gridImageSize=256, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WVirtualImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ae579c6380dddbc8a6390344e21c5e8bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawAll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac77880df77641e2778667d89135bd8c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableDragging</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a967961b3744ce70b0dcfffd2dd4e5582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a7dd6ab6e23b244782bb0fbd5901ac60c</anchor>
      <arglist>(::int64_t dx,::int64_t dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTo</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a46e5cbf991d6859b5599d8c8f3cea416</anchor>
      <arglist>(::int64_t x,::int64_t y)</arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>imageWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a9b8314a512c044710c4af57b58213988</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>imageHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a272537cd717654a5c85eb6607fee801f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a1fb1f0da2c5ddcf6ae332d7cd4ad2cee</anchor>
      <arglist>(::int64_t w,::int64_t h)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortWidth</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ab2820de18d8a323c53b1cc7a7cf09486</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>viewPortHeight</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a31e6291cbafcd176aa55e43d5b9fa9c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>gridImageSize</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a4a222f67c8e0b285f4a0f5fb646ef09a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentTopLeftX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>aaef04959b8dc6ca5231ee7c287ec94c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentTopLeftY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a9901120973d8aa95f18a00a605355c47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentBottomRightX</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a54c2781f8f2164ab2b594a047f3a9889</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::int64_t</type>
      <name>currentBottomRightY</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a020cfedaa6a56f7f6d53a552c6a278cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; ::int64_t,::int64_t &gt; &amp;</type>
      <name>viewPortChanged</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a5b5850535038ea4a505d55cadc6a8446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ::int64_t</type>
      <name>Infinite</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>ac2657f31a609a69b48631d26e0bd0b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WImage *</type>
      <name>createImage</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>a716ef0af4754b64e4e3fe2e45a4deb63</anchor>
      <arglist>(::int64_t x,::int64_t y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WResource *</type>
      <name>render</name>
      <anchorfile>classWt_1_1WVirtualImage.html</anchorfile>
      <anchor>af95a08b61b3f400f3b04d80ac99fb3f7</anchor>
      <arglist>(::int64_t x,::int64_t y, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WVmlImage</name>
    <filename>classWt_1_1WVmlImage.html</filename>
    <base>Wt::WVectorImage</base>
    <member kind="function">
      <type></type>
      <name>WVmlImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a547c5fdbf7f930bd009c5c9914f6d621</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setChanged</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>aa8c6031722369b629abaed4833640960</anchor>
      <arglist>(WFlags&lt; ChangeFlag &gt; flags)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawArc</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ab05d4750a70245abd57e8445ba60be87</anchor>
      <arglist>(const WRectF &amp;rect, double startAngle, double spanAngle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawImage</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>aa39e9778fd0fa5590cf260a2c05f2bc1</anchor>
      <arglist>(const WRectF &amp;rect, const std::string &amp;imgUri, int imgWidth, int imgHeight, const WRectF &amp;sourceRect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLine</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a5b9e6dd443df585739e592d9c44c33a7</anchor>
      <arglist>(double x1, double y1, double x2, double y2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawPath</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>abac40c8efa9451f316dbb8833ccd4fe6</anchor>
      <arglist>(const WPainterPath &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawText</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>abefca902cbbe4c12c68e4b695b373458</anchor>
      <arglist>(const WRectF &amp;rect, WFlags&lt; AlignmentFlag &gt; flags, const WString &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>aeac96ec7f8cc39297a742f6ec27cdcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>aca56f985764bb1329194fca36fe7d9d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paintActive</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a0dd0860fb63b4595d29a6762bf6b9495</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>rendered</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a23ce9cb35d2b31996499580bfe4a3cbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ab0f915f7ee84ab54ddbaba46988195ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a22c372a363aaa329cf27c55fcc45ce5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WPainter *</type>
      <name>painter</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>abc195c5bedbfda6102c4c894dce4b506</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPainter</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>a6d77e2234e53de70423d0c3be077154f</anchor>
      <arglist>(WPainter *painter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1WVmlImage.html</anchorfile>
      <anchor>ac6d73edf2f6ada53bd9220295c317b45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWebWidget</name>
    <filename>classWt_1_1WWebWidget.html</filename>
    <base>Wt::WWidget</base>
    <member kind="function">
      <type></type>
      <name>WWebWidget</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a83a1f4f3ec578e63ac12be555657d665</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad4258f03ed3dcadc71b4f2217f4fc76a</anchor>
      <arglist>(PositionScheme scheme)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a088c12ff7345acb1e028192c399f072c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab0cd0d77586b275af9bbab2cd5e41c0e</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab1f5e123a5c110da277cbe91645cb7ee</anchor>
      <arglist>(Side s) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae1b84e31581405358b6d57ec14505234</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4187ef41415521e545106c970c2679f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7321103dca90574bbc3ac6ea9a91ccff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a19abf65cadc0b761b9405157e4b3dfc1</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af7bcbca473c81fdba308d0f230bb30ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>afc7317102a63be41ffa390ee5ed5f964</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aefc1760ce369631bb332b244a4ec8503</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>abe3382f250f11a12f76782991ac5b6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>adb6f0acea854671ef901c070ca632678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a3e21ba603bd2b577512938a90d222c13</anchor>
      <arglist>(const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aeb2aa5ba892f8a17bee435312d04777d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a98310fe1bfd94010bd5c613f28778fca</anchor>
      <arglist>(Side s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>adbacc8da47aa64cc177b4d2aac0c41be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af6e241a53dba62acf2eebaee1a040ddf</anchor>
      <arglist>(WFlags&lt; Side &gt; sides)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a09c1246a2d6b7137b6ac5042ace97157</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a07719d06da0dd17af2381c663e8fb0b7</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a2c0381fd3e59c8d84da23fe6af564725</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad49fd69557c2889905878e1ecfd72a3f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a0ba2f0668948e568a5c737e10c215af0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>abf00d84015803f7553c9e6650dc10bd4</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a594cbc1789cb8e2123bc5d968aa320ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a5d78412910dc5c876db09371d8a423e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a0d73f278ece864ab5322e92ff5f6de6c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a811c383ceedd1ea956f4085761b97628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a2deb694af3f3ab8f65b91e40b89342ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a783f46384456e792ead27a613f63a900</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af81cf5fbd4bd92ba81ffcad303355d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a73c0244d363cd2f8bd4814fe1ebee2b1</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a00435f54c71b074785ee25fa955fbf27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a0c22f849e8e6ab8b1e9b9353e5868294</anchor>
      <arglist>(const WCssDecorationStyle &amp;style)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aee0157eb927635094425c6f91cc7bd16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a6fd43dced1a62f7e79bc3522eeb16216</anchor>
      <arglist>(const WString &amp;styleClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae867729c36e0976e5e5ee295f1c40d48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a013767da45b8996b3d52bf98ee9d4aae</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a75378e5d43822dc93eb1d6a23f91bdcd</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4b69458117dbeed309fc3109e4789125</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad345daea37cc9abc5cb2cbb1b554bc26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aeda559ae51111ba51a70be86c6c4fdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a4d676bbb5d54bd5bf5ba1edff996800d</anchor>
      <arglist>(const WString &amp;toolTip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7b851debbfba51f0b9a011ca42b08c8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a8d0b7883f2f77a0c24b8fb911a8086a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af105d1bda14a0b85d486fa9ffb77f445</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a036ebd10e69ad7daf2c1d1533d3ef8bf</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>afa530ff48b788bb6cd6ed24ee2f445d4</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ae4fcc0c1a9842f7658f2725b9a3f67ad</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac71ff33efc989bbcc0e92bb8b95138a9</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a9204a57ea6fb213be5845c01007bb944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a31fa118eaced94d9ea8de9f9f407db40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ab77c624abc340f904e34b343dcc719ca</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a68a561600cdc65adf189c1ffef45f26b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a7e7bbac438e2535359085880144b0456</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a21435f5f3fa9f70c3948a05046f90b92</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a5975750206b667b0fe84a803889e0771</anchor>
      <arglist>(bool selectable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>id</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ad15b688428389cfd4b1b67e574ff0aa1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadLaterWhenInvisible</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a76640728285560f894c1235968c139f2</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WWidget * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a6f32718bcdfa546f012c795f80f319e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRendered</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af08f5d8edb83b73aef3a93ef446d3231</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>escapeText</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a94abba3bda8fc934ae86db54c577b428</anchor>
      <arglist>(const WString &amp;text, bool newlinesToo=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>escapeText</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a3c76a9fa4dee8088e16f07506146fc29</anchor>
      <arglist>(std::string &amp;text, bool newlinestoo=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>removeScript</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a6192d820e2df2e27b2878976dac4161d</anchor>
      <arglist>(WString &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>jsStringLiteral</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>af9dc9dcb0eb0ba2d740645c9908694d0</anchor>
      <arglist>(const std::string &amp;v, char delimiter= &apos;\&apos;&apos;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>aa9655ae1c50b9c979b6fe93f9d0064d3</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>a2893433f4aa1d6775875f1ebddd7c5ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doJavaScript</name>
      <anchorfile>classWt_1_1WWebWidget.html</anchorfile>
      <anchor>ac3792281716514123befa662274dc008</anchor>
      <arglist>(const std::string &amp;javascript)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidget</name>
    <filename>classWt_1_1WWidget.html</filename>
    <base>Wt::WObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>acbe32dd454131720fa9712bc866efb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>parent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3461e31818c4d2f516641bdaf508312a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae15ffe92fdc5c394013d61b5bebb2f11</anchor>
      <arglist>(PositionScheme scheme)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PositionScheme</type>
      <name>positionScheme</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aea3a7c21d936d34f28b42143aba4edd5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOffsets</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0b60b3e6d868689071fe3f828d550ae2</anchor>
      <arglist>(const WLength &amp;offset, WFlags&lt; Side &gt; sides=All)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>offset</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a08e07b6d0ca355a3fe2c7dead3dde228</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5bebad8f1582b8bebf01a9ed0ee11972</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>width</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3f423e20a9b0792c1bc3d52899065e82</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>height</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a9454454144fe3729378c87c3b90372b4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMinimumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a092c7d1ecfde7f004ef120389d91775d</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af5847c8028f501b51d74184107ccdde6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>minimumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a411b6bbac918eeb19946d65c4352beb1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMaximumSize</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af023064cf8007bda6baeb5277d79bbd9</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumWidth</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a733c78b3d54dc355adf6ee05c69bf219</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>maximumHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af2f6d29c4e5a88bdd12a180e125490cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>positionAt</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aef120ad789aec5ee406c2e312efeb4b5</anchor>
      <arglist>(const WWidget *widget, Orientation orientation=Vertical)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0763f0e672e5cf673141405dc8e796bb</anchor>
      <arglist>(const WLength &amp;height)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>lineHeight</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a162f32ce7482e7c3121d18585555909a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFloatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2915d313e6934173c087bf8212024289</anchor>
      <arglist>(Side s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Side</type>
      <name>floatSide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a78041b1bcd9b811fa4771d19005a585a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setClearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1919e2e3628bb4e4b74517605b5062c5</anchor>
      <arglist>(WFlags&lt; Side &gt; sides)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WFlags&lt; Side &gt;</type>
      <name>clearSides</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a7657fb67f7ec42b7374b7f64f85e6030</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa4f27573eae7875d0fc538e37bc191a0</anchor>
      <arglist>(const WLength &amp;margin, WFlags&lt; Side &gt; sides=All)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>margin</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8b7c40b966518e22543d290229fbd29f</anchor>
      <arglist>(Side side) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8cd985ab1dfcee828c7b6189a7e052a5</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hiddenKeepsGeometry</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac556bf0e3087b238a98f25b77b9d529c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a11bd299d9afd0d83f17ac454c85c43a2</anchor>
      <arglist>(bool hidden)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a76a29fd7fa9fa9a6e15e3a450f24a381</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a450f94dc5a28737625cdb6bde3fdc788</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDisabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae29fe35b633ec166f922419cd3ca9d96</anchor>
      <arglist>(bool disabled)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a8c806a873adad31035122a3b465d3da2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae091783ebd393c04f026133069b874d3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3890a2ef04571b6d36e7468583457091</anchor>
      <arglist>(bool popup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPopup</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a29f3361a8c518dabc1251892da55dd6d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac78e3af143883334c82031790c87416e</anchor>
      <arglist>(bool inlined)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInline</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>afa7a21fbd173d6ee83c2aa9cc11e2ac1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDecorationStyle</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a091e1fb88d9bbd8818d061af43c618b4</anchor>
      <arglist>(const WCssDecorationStyle &amp;style)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WCssDecorationStyle &amp;</type>
      <name>decorationStyle</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac1833c7c01599b3733712ab0bf3c3a0a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4be23ecf48d5968efb5d926e38e01708</anchor>
      <arglist>(const WString &amp;styleClass)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>styleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ad5a84cacbaa1e4da97f7ba68de060330</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>abb5949e98f47edb7db98d7b6df07a31c</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeStyleClass</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3b8a35e37ef06c408f346c63a5f1aa8e</anchor>
      <arglist>(const WString &amp;styleClass, bool force=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVerticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4f911e2f62cf35c34cb603eaca0d9a3f</anchor>
      <arglist>(AlignmentFlag alignment, const WLength &amp;length=WLength::Auto)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AlignmentFlag</type>
      <name>verticalAlignment</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0ae4522f15e80ff00d246a19604f6c7f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WLength</type>
      <name>verticalAlignmentLength</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a9faaa6c2b46c0adf6606ad1496c4e52b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a7a7d40a35444c397b17d831996720557</anchor>
      <arglist>(const WString &amp;text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>toolTip</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae67a8d8c573e44f02ab165fe80b2eec6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a15e1efb1c2e1030a3ad9565ef7fb0e15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>jsRef</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa2b7078b3b43d53a85e5244b45d504f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAttributeValue</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ad629ef6b7b9bc84999ff31dc0f2f3a12</anchor>
      <arglist>(const std::string &amp;name, const WString &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WString</type>
      <name>attributeValue</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a44679c4df92658912866d5a0469bbe95</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setJavaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ab876fc1b7d2e4e5dfc631e380d406ae2</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>javaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a78a539cfd49a8927a196de66362c37e9</anchor>
      <arglist>(const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>callJavaScriptMember</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac9839a243ba5f98e7962d1c0dfc20813</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;args)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>load</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1ee433705523b2b79c4c3539e0852c92</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>loaded</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a1aa5c2496715bb582a584ebcdd97a6d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTabIndex</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aeca7e1e9852d83067b3834078378f22d</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>tabIndex</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac8e874a86853e3e230e2cee1a7a153c4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aebee4b24e8128c08ae4aa3682adf6d8f</anchor>
      <arglist>(const std::string &amp;mimeType, const WString &amp;hoverStyleClass=WString())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopAcceptDrops</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a89e4d70592dd34c277923cb793f73b66</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a93ff9d1ca04e733cd54cd40a06775f7e</anchor>
      <arglist>(const std::string &amp;id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WWidget *</type>
      <name>find</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a96e9c88d9ed79acccf3edf2bb00c0126</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>htmlText</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aaae07190fb97d856149226ea315a75d0</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSelectable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a3ccd308793bbf124aa2aeebfb1b4f42e</anchor>
      <arglist>(bool selectable)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRendered</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a20624c7c7cdd8b0dd3c3b51ed36c3bb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a0825c3ccbd4999afc1a88fafa6aa6fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a52dcef5a385ddfa0a8c3e6c20000f181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ae6935d8baca9d37dd1d080b4383da87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a5f68ea0ab29adfb8e559153fca281e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>layoutSizeAware</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4b2f59f14feb7ce5e7d8d83d48ed5f35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WString</type>
      <name>tr</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>aa651f107ec7cf080faef6c435705fc44</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLayoutSizeAware</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a4f83592912a7f8fa4fd35dadde78ee74</anchor>
      <arglist>(bool sizeAware)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>layoutSizeChanged</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>af432588db3d599f89b54121f2ede8d63</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WWidget</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a95c22589beb69717356b859bbfd20479</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dropEvent</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac436c4b99710b9199a9df3a8b4151a69</anchor>
      <arglist>(WDropEvent dropEvent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>enableAjax</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a919a4eaf68ff52f06f6a726d55dfb768</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxPadding</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ab4cfd6bd5bea1a6182731ec79a78792c</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>boxBorder</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a6bd6a9d01afbc4f96c4ec7dd48db9126</anchor>
      <arglist>(Orientation orientation) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>propagateSetEnabled</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>a2ac5699f1624b16d8ce6caf8086d6d31</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WStatelessSlot *</type>
      <name>getStateless</name>
      <anchorfile>classWt_1_1WWidget.html</anchorfile>
      <anchor>ac7b367f664ab2b12ef79003123a17a0e</anchor>
      <arglist>(Method method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::WWidgetItem</name>
    <filename>classWt_1_1WWidgetItem.html</filename>
    <base>Wt::WLayoutItem</base>
    <member kind="function">
      <type></type>
      <name>WWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>afac1f02e9f79bcc2d3584dbe0a80df77</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a5f1319ce853b78703399d6d80748ef52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>aeec342fa9330656ade0094be78d5fa34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WLayout *</type>
      <name>parentLayout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a33a7815c88694af6c9c5b214725f0c4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WWidgetItem *</type>
      <name>findWidgetItem</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a997b036f16e7667db3f8c59e310ad98c</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WLayoutItemImpl *</type>
      <name>impl</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>ad17fab03e099007600e9d39dd017b9b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentWidget</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a24ecf01aff4bc52ac0482c1c202a9bc8</anchor>
      <arglist>(WWidget *parent)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentLayout</name>
      <anchorfile>classWt_1_1WWidgetItem.html</anchorfile>
      <anchor>a5054aa92fe5d6ec40057e4d6662ae5e2</anchor>
      <arglist>(WLayout *layout)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Chart</name>
    <filename>namespaceWt_1_1Chart.html</filename>
    <class kind="class">Wt::Chart::WAbstractChart</class>
    <class kind="class">Wt::Chart::WAxis</class>
    <class kind="class">Wt::Chart::WCartesianChart</class>
    <class kind="class">Wt::Chart::SeriesIterator</class>
    <class kind="class">Wt::Chart::WChart2DRenderer</class>
    <class kind="class">Wt::Chart::WChartPalette</class>
    <class kind="class">Wt::Chart::WDataSeries</class>
    <class kind="class">Wt::Chart::WPieChart</class>
    <class kind="class">Wt::Chart::WStandardPalette</class>
    <member kind="enumeration">
      <name>Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gaddb678f67fbd9f374fcee0922f158c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa2a592919e6cbd94bf09e1259559499b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa2e1017fdef77b4663715c3d7663a4db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y1Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fa4905c14eb8a164e00e48b41cfaf6f070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y2Axis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fadbfcf55c246aa3a385974a185f4220e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OrdinateAxis</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggaddb678f67fbd9f374fcee0922f158c9fae8797459bbc3e1eaba438ab4d10c0352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga77eb6d0cefa4a012950ea972b471b849</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849ada8601e8f3630aec7d16b6d4177d4986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849af9110e09430355ab81d579be51ac73cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValue</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga77eb6d0cefa4a012950ea972b471b849af2e58ce3483a5ec496f65fb808ce72b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AxisScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gadfcaed8cd6ff52f5747f7df48f2eeab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6aa9b1356757a7b0935c3302c32798ef14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6ad1c254fd10596e2565b32fd6f5967094</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LogScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6afba90921c9efb6c5131cdb1590bfa406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6aaa627030efa552170a889d7a80a65a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DateTimeScale</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ggadfcaed8cd6ff52f5747f7df48f2eeab6a97f80bcc82b9bf9299b61de12732da5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SeriesType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga44d64e4a9d08c7ef69648f4a9c3e4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PointSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a6a8b53e7bfdec77f9df5e82aaf0061e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LineSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a2582c20d00d806d8a175e2f5c0207591</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CurveSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a805880e23c0292fb7a66b2cda2a2f5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BarSeries</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga44d64e4a9d08c7ef69648f4a9c3e4053a6751dbd7ed4600a4befa967107a6dde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MarkerType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9f38f3460fb2575d5f4f1a1ac51a7db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6aaab531f4ceaaa1893f854f4b1262636d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SquareMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a4250deb876978d5f5c3be4cc6aad8267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CircleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6ac14cc4eaec28c9ab096fbf7efead2660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a003214a00943a828becc1beb54956e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XCrossMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6a4a718fdd73e4bcdc700495eb549dc386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TriangleMarker</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9f38f3460fb2575d5f4f1a1ac51a7db6ae7ee432c7bf8189deaa453af4d14182b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FillRangeType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga7236e5b04bdb6f393162842982b4d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0ad0c1c31f7f41394c2fd5444edc340972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MinimumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0a1eb3ca7c63430bd56544b9e3b962c6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaximumValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0aa321337f9f9a4d56fb1d2cafe0f359b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZeroValueFill</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga7236e5b04bdb6f393162842982b4d1a0a50b16db97a187f9acccdbeecf8732ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ChartType</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga8d63464f873580c77508e1c0c26cbfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CategoryChart</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga8d63464f873580c77508e1c0c26cbfeaaebfd9bd11d1126f2db7ff891c04c29f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ScatterPlot</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga8d63464f873580c77508e1c0c26cbfeaa6ddab43d32242eb28831938a1e469a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LabelOption</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>ga9345394a8eeda6800d8a24c5df44d983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoLabels</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a866d745e727785c20e31d5ea76bb58a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Inside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983aeb92488c13b0ccc46cddbb3445007443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Outside</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a88861128e109b6a63e76a311dc57e408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextLabel</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a60df9add81425373c20fafe8c4e40b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TextPercentage</name>
      <anchorfile>group__charts.html</anchorfile>
      <anchor>gga9345394a8eeda6800d8a24c5df44d983a307741727c5ef5e33efcd347a0853e50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAbstractChart</name>
    <filename>classWt_1_1Chart_1_1WAbstractChart.html</filename>
    <base>Wt::WPaintedWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WAbstractChart</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a7301de2a5328282d736070f2304a7e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>aa23d116689e939301470398df8ad5c8b</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a93ddf394943b312b3b2dc786ac5c8c72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ab306a6cfecf32fd9af3785fed75bd3ab</anchor>
      <arglist>(const WBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>const WBrush &amp;</type>
      <name>background</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a0230d674b7112331eec05bbbff4fc87a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a044936e6358c8efc55699effc4b946d8</anchor>
      <arglist>(WChartPalette *palette)</arglist>
    </member>
    <member kind="function">
      <type>WChartPalette *</type>
      <name>palette</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a29320100617c0a195904c89874fcc7f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ace6ea85014f731c7034e4215710a8a48</anchor>
      <arglist>(int padding, WFlags&lt; Side &gt; sides=All)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>plotAreaPadding</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a8e38496e6d583a9002d78ac782d94fd6</anchor>
      <arglist>(Side side) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a9ec4aba5d7c57110b7dddad8720e3aa0</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>abc4d1fac60f356360bcc5c6d51d42a69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a908247e8c84092cd74ae50af33745f95</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>acbbd80a59c755003efdf07cb6478fece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>af642c65474e95ec0969906d8d31e2862</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const =0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a9e3df17843eedb5f32dc1407f115fca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelReset</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>abf2d10492352754f92dc11cea27625cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a12430c6057fb5d65458c4f8c9c42a034</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>ad235f839f2e46152ff41fda54a29cea7</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a69ef1dd5294dbd1de8f6ada34d96af45</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>a1857420ee055502380caa45446e5c0c4</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)=0</arglist>
    </member>
    <member kind="function" protection="private" virtualness="pure">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WAbstractChart.html</anchorfile>
      <anchor>aec6e96688e308aec05cdf3bf085837e2</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WAxis</name>
    <filename>classWt_1_1Chart_1_1WAxis.html</filename>
    <member kind="function">
      <type>Axis</type>
      <name>id</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aca500256c7ec397512f872bd44e93b8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a59fd4c6a79f6e3ea75f21aa44c4acfa8</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVisible</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a9ea4f463f2bd03202a7e3d7c239fd094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocation</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a6dab2f46117b85a4a6f439e4f194ee82</anchor>
      <arglist>(AxisValue value)</arglist>
    </member>
    <member kind="function">
      <type>AxisValue</type>
      <name>location</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae63bf025a630b3df414322e075eb9e39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab067037b83d1d663535250968a1776d8</anchor>
      <arglist>(AxisScale scale)</arglist>
    </member>
    <member kind="function">
      <type>AxisScale</type>
      <name>scale</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae6261e1f13aa00ebae9ea674a9001fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a878e20a87f7f6c5b4693bb81699c9f5b</anchor>
      <arglist>(double minimum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4b0e996cd16efd42b9f5dc1a041a9819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a64152da3f00fdeb6824d6a06e33ab346</anchor>
      <arglist>(double maximum)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a2c00b5c1acbd3fe822703983c1e0ae55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aae563fd94b81a03cfe2662dbde2ae548</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a26b0b1b9a61fa3355a0ec224a7ff1caa</anchor>
      <arglist>(WFlags&lt; AxisValue &gt; locations)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; AxisValue &gt;</type>
      <name>autoLimits</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a04a624951a56a62987dc1671d6ec8b0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBreak</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a159f74342b4800e5c5be11eb1b2a351b</anchor>
      <arglist>(double minimum, double maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a68b1f798fd0d9a713fac29f9d761e2a8</anchor>
      <arglist>(double labelInterval)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelInterval</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa9ff8f73b1abb438078ab22873671659</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7c37c241825af404b36916dcae9ae87b</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>labelFormat</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a7b12bfbec790d98f750cdc8d2c2f9fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>afd850eefc2beb7dffa5a637987cb1c6c</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>labelAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a4876475bdfa8c5b43e02d2a1a09b20ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a79d70190d984c7f956e44b79de0af527</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGridLinesEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aaea983cd54dbd98bc8a8a705ccfd7768</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ab1b9dcb9e23e01ec18994712fa5e11d1</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a315b1e60f44d6d736c0903eb372d5019</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa97db5c1f1bff788382ef48b8a6d1cc2</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>const WPen &amp;</type>
      <name>gridLinesPen</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a79345a863d57e5d4ba9682e128fbce96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a61a297a8d3c99e74b07e9def9ebe88a5</anchor>
      <arglist>(int pixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>margin</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>acfe54778dbcacf77818f75e2fb87ecf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae85436297049bd4c60a75a9cc5313e4a</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>aa2e1f143e0ee835d54ec8a0218eaac83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad977d82494e5922ccf6882f1378c4db6</anchor>
      <arglist>(const WFont &amp;titleFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>titleFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a15db289e565f3764b88253a92832c604</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ae9f02413691b40e95e6b7284d41dfba3</anchor>
      <arglist>(const WFont &amp;labelFont)</arglist>
    </member>
    <member kind="function">
      <type>const WFont &amp;</type>
      <name>labelFont</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>addf99b6e9c180699fb0a9370094c9f25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WCartesianChart *</type>
      <name>chart</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>a726d6c73a28960ed0231ea4ed57e5be9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MINIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>ad0c60f190b30ddfec321e750248c6579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>AUTO_MAXIMUM</name>
      <anchorfile>classWt_1_1Chart_1_1WAxis.html</anchorfile>
      <anchor>af506429983c72703d8fadbc03a1e67d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WCartesianChart</name>
    <filename>classWt_1_1Chart_1_1WCartesianChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa2c011ac373f1644b76932a81dc3b624</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WCartesianChart</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ab0ebde0bbb0ff228185ae767bfd7e788</anchor>
      <arglist>(ChartType type, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a02775290965d59ffba03da574925e387</anchor>
      <arglist>(ChartType type)</arglist>
    </member>
    <member kind="function">
      <type>ChartType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8885469f81160cac5c1ed51fc1166265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac8638a7ae6b0d1141794d9c07336e500</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a4d08c4528b9819bd058dd7c34daca645</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6c954fa4ed6d73f00ee973bfe3af5ed0</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>XSeriesColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a378a1ece6bf9acfb291cc6978c473acb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>afa4ac6588e6e2e0dd93320c3a0541d46</anchor>
      <arglist>(const WDataSeries &amp;series)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a23ee6f5136dc540a7968f17c15524c10</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5733d8d999095b6d4279f289a37eef98</anchor>
      <arglist>(const std::vector&lt; WDataSeries &gt; &amp;series)</arglist>
    </member>
    <member kind="function">
      <type>WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a96cf7387ebbe867dcbdd6aad9f48e72c</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>const WDataSeries &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a08d7f0e90c0190496dd499609b606bc5</anchor>
      <arglist>(int modelColumn) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WDataSeries &gt; &amp;</type>
      <name>series</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6123ce798788b747eec94c5399113a8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>af966d6ee6b2e43e6b26e794459005375</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>const WAxis &amp;</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a0ce614843d5fc81a0e262aea89a48ee1</anchor>
      <arglist>(Axis axis) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a5419bad74246b5cb94cd224e915bfe0f</anchor>
      <arglist>(double margin)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ae6b73b06624ce73153b64683f18f0892</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a26c3d97f4884da079e01e7b50447a915</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3b5d000b17bad325e210cbf78a28c460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a6fb2219936b721b8829dc7093dcb5c16</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a96ca116a1d653e582867eb8a6f7343d3</anchor>
      <arglist>(const WDataSeries &amp;series, WPainterPath &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegendIcon</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a85b2ac77b71b9ba814ddc4c92c15ba67</anchor>
      <arglist>(WPainter &amp;painter, const WPointF &amp;pos, const WDataSeries &amp;series) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegendItem</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3344582f6cca423f86d45375368b6d7f</anchor>
      <arglist>(WPainter &amp;painter, const WPointF &amp;pos, const WDataSeries &amp;series) const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>acea610620a72eb855ff05de1665eb0fd</anchor>
      <arglist>(const WPointF &amp;point, Axis ordinateAxis=OrdinateAxis) const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac040606ce4e3c4093f10d3fe65353c89</anchor>
      <arglist>(const boost::any &amp;xValue, const boost::any &amp;yValue, Axis axis=OrdinateAxis, int xSegment=0, int ySegment=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initLayout</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a8a6ef9a21d0ea1b96ba35eeca3759426</anchor>
      <arglist>(const WRectF &amp;rectangle=WRectF())</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>createLegendItemWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a18087559767dd82ff0ff51af5e418f19</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addDataPointArea</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7246bc96e5a29837f60bf51437c0449a</anchor>
      <arglist>(const WDataSeries &amp;series, const WModelIndex &amp;xIndex, WAbstractArea *area)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a3c9c7e5fd246fd0d3e0efa0cd29dd997</anchor>
      <arglist>(WPaintDevice *paintDevice)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual WChart2DRenderer *</type>
      <name>createRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7d76b83f395ee967bf7ca1339ca1c176</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle) const </arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ad619b499d3bfec79614de38c682af118</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7f654939c038cface6128dc2b1826f33</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aa2176777ed4c810101cd666cbf470699</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a7221676a4216f5c194a7e8626543db82</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>aeaf121941edbd310ca3d3a5d6dc4067e</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>ac1c54af8fac90284c76cda536ca7f6f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelReset</name>
      <anchorfile>classWt_1_1Chart_1_1WCartesianChart.html</anchorfile>
      <anchor>a9e2366f3bef4824c45c4bf71cf16a087</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::SeriesIterator</name>
    <filename>classWt_1_1Chart_1_1SeriesIterator.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SeriesIterator</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>ac4ad700f8ef3b9b7423cd51aa4e753e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a3770ca1184657ea89fe0ef8d3e5a63e2</anchor>
      <arglist>(int currentXSegment, int currentYSegment, const WRectF &amp;currentSegmentArea)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a5846a9aba05403f3d699f983be268ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>startSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a3d5181f724905decd4055001968c73bd</anchor>
      <arglist>(const WDataSeries &amp;series, double groupWidth, int numBarGroups, int currentBarGroup)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endSeries</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>ab0f753351dbcde0fb4ad88f34efc5a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newValue</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a72bbbcfd1bac947d79d1ae8eb0bd3f5d</anchor>
      <arglist>(const WDataSeries &amp;series, double x, double y, double stackY, const WModelIndex &amp;xIndex, const WModelIndex &amp;yIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentXSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>abd909a460bfb6a381034d70965f7cf91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentYSegment</name>
      <anchorfile>classWt_1_1Chart_1_1SeriesIterator.html</anchorfile>
      <anchor>a0c9b0c88e92e6431b471f014c8dec2ab</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WChart2DRenderer</name>
    <filename>classWt_1_1Chart_1_1WChart2DRenderer.html</filename>
    <member kind="enumeration">
      <name>AxisProperty</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a5500dea567dd1a4467fb64f4454d46cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Grid</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a5500dea567dd1a4467fb64f4454d46cfa2c55eeaddb8391817d196f128fee490e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Line</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a5500dea567dd1a4467fb64f4454d46cfab7a8ec52bd2d248b48ee18352df455d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WChart2DRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a8575df9ead3b1f7f0784efb0526c914d</anchor>
      <arglist>(WCartesianChart *chart, WPainter &amp;painter, const WRectF &amp;rectangle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WChart2DRenderer</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a7ef6014443b958ebe4c7c6cb8d323512</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WCartesianChart *</type>
      <name>chart</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>ad37b266236fce1a1e7d9b4aec2ee19b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WPainter &amp;</type>
      <name>painter</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a97749f8fbe5096d04f81867052f5d776</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>chartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a47cee09602cdaecba45d93d54e2aeb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcChartArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a828a1837fd4f77058542d3c539502286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initLayout</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a9c5c12c08d0861f0b273a2cf1bed0e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a58010c9bb22a11d14e0e86f98b1ae8cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPointF</type>
      <name>map</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a6f44a9d770b6373dec092ca74d467db5</anchor>
      <arglist>(double xValue, double yValue, Axis axis=OrdinateAxis, int currentXSegment=0, int currentYSegment=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderLabel</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a2a102f1c1933f3a947bd5d7b83ed0ee3</anchor>
      <arglist>(const WString &amp;text, const WPointF &amp;pos, const WColor &amp;color, WFlags&lt; AlignmentFlag &gt; flags, double angle, int margin)</arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>adb16e77f67d1894a0b9c01a8855d20eb</anchor>
      <arglist>(double x, double y) const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a627ffa37b530d91b986abfc005b0d97b</anchor>
      <arglist>(const WPointF &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>hv</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a2185a0ad44386c4ce833a35cc11cac89</anchor>
      <arglist>(const WRectF &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>WRectF</type>
      <name>chartSegmentArea</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a07d00ec7d22d1aeac7e062a312b7831c</anchor>
      <arglist>(WAxis yAxis, int xSegment, int ySegment) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a6562e97aba00b6f0cc840ec597ca30d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderBackground</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a79d2965d652d9a97db2f599d882d4233</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderAxes</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a0d8d99805ac3cd609762ba1f569103ab</anchor>
      <arglist>(WFlags&lt; AxisProperty &gt; properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>ab9da127a1888d076ad9b448cb366be99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>renderLegend</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>adda2794cc47b536501060170c3fb2d80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>width</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>af72fa40cd75abef0e0e3f4c2b1274dcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>height</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a4a8095308e813968f60a0373cfc0a190</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>segmentMargin</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a194a5d8162047cf6a19bd0c80f392d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>renderAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a6952edcba753fa7326fc74fa8c4a1f1d</anchor>
      <arglist>(const WAxis &amp;axis, WFlags&lt; AxisProperty &gt; properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>calcNumBarGroups</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a80d16620055def5cffa7fd059fe75344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>iterateSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a4a2c1a148f5eb2533beb3372b08b0efe</anchor>
      <arglist>(SeriesIterator *iterator, bool reverseStacked=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AxisValue</type>
      <name>location_</name>
      <anchorfile>classWt_1_1Chart_1_1WChart2DRenderer.html</anchorfile>
      <anchor>a68cd10a56eacd42c3a335589dfeabdc3</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WChartPalette</name>
    <filename>classWt_1_1Chart_1_1WChartPalette.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WChartPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a72e713c7e44024ebc5044bd2c67a3812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>aa7e88bb175f4f83b245076150e658e99</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a770025513b0e83146d54011743950726</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>ab395b91af20d3171c0cbb0abca85d967</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WChartPalette.html</anchorfile>
      <anchor>a4968d1f875e0aedac02d7dbc312d085f</anchor>
      <arglist>(int index) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WDataSeries</name>
    <filename>classWt_1_1Chart_1_1WDataSeries.html</filename>
    <member kind="enumeration">
      <name>CustomFlag</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4ada6682a4dea1b67172b683fc473d59a21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4adad8b3f8ae89163692df6439ae42ceb4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomMarkerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4adab0122c13d61736ed63c47e3ba3199eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4ada7110f833485ba6a00128c88c8d863729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CustomLabelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aedbaa47aea3f854c7940a33052dec4adab5b6a23ce57cdeae93cb686ddf629068</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WDataSeries</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a8942e6e28fc0be6da5c1b90209f1750f</anchor>
      <arglist>(int modelColumn, SeriesType seriesType=PointSeries, Axis axis=Y1Axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBarWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a05e7458bcdfbf762010c075456eea03c</anchor>
      <arglist>(const double width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>barWidth</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aa218a7b469ea51119802a58e7019bbf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a8db1e060f64d2b4f44c21f96a071ff38</anchor>
      <arglist>(SeriesType t)</arglist>
    </member>
    <member kind="function">
      <type>SeriesType</type>
      <name>type</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a1a2687abc58a59d5112ab477705262fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aa78e8b438d3b232d2d01afbe1b8be557</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>modelColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a4879d1bca9363faa4318236cdbcdcca0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a14ce75bdb16de5158291f391a0c35f9b</anchor>
      <arglist>(bool stacked)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStacked</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>af130953cbd981398fe5b68014e9b0476</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindToAxis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a2c7bf4f065a4f2be24603cbdad3f24b6</anchor>
      <arglist>(Axis axis)</arglist>
    </member>
    <member kind="function">
      <type>Axis</type>
      <name>axis</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>afd09e3edfa394f8d777c3dbbb4e4e6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adad2a2ef9304287900207028b5255a73</anchor>
      <arglist>(WFlags&lt; CustomFlag &gt; customFlags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; CustomFlag &gt;</type>
      <name>curstomFlags</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a01dae4dea96c4716f225e7e2fd69db43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>aac0f9d064024241b16685c196bd04818</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>pen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ad59f3eab01ec14f6372768a9db40aa72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a9271ca3b3f70822ae6582b7e28363b2e</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a10dc0b98acc9e6361a3c1c4acafc1061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadow</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a683e2c2d0d4b94631be803600b519e9a</anchor>
      <arglist>(const WShadow &amp;shadow)</arglist>
    </member>
    <member kind="function">
      <type>const WShadow &amp;</type>
      <name>shadow</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a2858b618ff6fc35ec554e50d4afe3bb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a9b5ea5691c650d567e26b2a7ea762462</anchor>
      <arglist>(FillRangeType fillRange)</arglist>
    </member>
    <member kind="function">
      <type>FillRangeType</type>
      <name>fillRange</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a4f7ef2a2113261b37a2dd90db26734ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac8f4ae7c878df76662d92fd48e57d17d</anchor>
      <arglist>(MarkerType marker)</arglist>
    </member>
    <member kind="function">
      <type>MarkerType</type>
      <name>marker</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>af17f1d512e9fc5b34d5ea798202fcf89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerSize</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a750caa710c08a1550059e90c32b61487</anchor>
      <arglist>(double size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>markerSize</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a40847da8909c9a3c18d5804e754afdc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a00efc7980ccbf435dadab50f09bbb90c</anchor>
      <arglist>(const WPen &amp;pen)</arglist>
    </member>
    <member kind="function">
      <type>WPen</type>
      <name>markerPen</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a82205532cfa956c14b2533c179fed581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a5226ee065d0594b997916fb1f89c9113</anchor>
      <arglist>(const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>markerBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a6aa5f74208d9f16b47cb5d6c912424fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>adbddd50fc4ccd1608987900f0231bd50</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegendEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a6e4373d17cf866dcf565fa32f6ca1f6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a0b3425ac94c831ffa6b46bb1fb354f2f</anchor>
      <arglist>(Axis axis, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLabelsEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ad3ecc17a7626d20fc03e4fa797e40028</anchor>
      <arglist>(Axis axis) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a7d1ed652c7a689ecf3988fb7ee66b2cd</anchor>
      <arglist>(const WColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>WColor</type>
      <name>labelColor</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a828e8486bc8cfd79523dd65286b7db34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ac10d08d0f84d2d6c4a32311d923a3df8</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a1d1dbf332e11ba1c1e1aabb515039e66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapFromDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>ab7f746afb31c8dc138261c5113a9b937</anchor>
      <arglist>(const WPointF &amp;deviceCoordinates) const </arglist>
    </member>
    <member kind="function">
      <type>WPointF</type>
      <name>mapToDevice</name>
      <anchorfile>classWt_1_1Chart_1_1WDataSeries.html</anchorfile>
      <anchor>a2a517451b7a94600a44bf2bfc7031210</anchor>
      <arglist>(const boost::any &amp;xValue, const boost::any &amp;yValue, int segment=0) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WPieChart</name>
    <filename>classWt_1_1Chart_1_1WPieChart.html</filename>
    <base>Wt::Chart::WAbstractChart</base>
    <member kind="function">
      <type></type>
      <name>WPieChart</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>afec3ff85d3997e588acadbc2b844943a</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>aa40bfd3f2095106f8081596b235de4c6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>labelsColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a9029c0a18c84558da2b36089dfb7fa3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a3692ea22a1417e599e9358b0ed5a723d</anchor>
      <arglist>(int modelColumn)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dataColumn</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a5d88b01950313351cfb38821d8c8bc2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>af0fc06d47e2b717f1faeae80926d068c</anchor>
      <arglist>(int modelRow, const WBrush &amp;brush)</arglist>
    </member>
    <member kind="function">
      <type>WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a6063464c0a664943d747b344e8383b5c</anchor>
      <arglist>(int modelRow) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExplode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a4a2bfe0c147b5433d340d49351b5032c</anchor>
      <arglist>(int modelRow, double factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>explode</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ae4873101c6d49b858e665f88182b0361</anchor>
      <arglist>(int modelRow) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ae36d57f4c2801cb8599a1bc99e340a24</anchor>
      <arglist>(bool enabled, double height=1.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPerspectiveEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a448d52119f7422ec0893261980e7e880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShadowEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a74b91c0514247ba9ea91b53fbae795f7</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShadowEnabled</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a1738f01efbd4c3b34956d2e42096580f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a407707a2ab0b2c56500e35da85e619a5</anchor>
      <arglist>(double degrees)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>startAngle</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>af2d62e836a60f28755218921fc0e4b90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a89324f6159e5893e1ddd368718d00e5d</anchor>
      <arglist>(WFlags&lt; LabelOption &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; LabelOption &gt;</type>
      <name>displayLabels</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a448e016c20ffc0c15d707cf69081f5d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>createLegendItemWidget</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ac4e58ff2d6c698bfa4a52f6347dff654</anchor>
      <arglist>(int index, WFlags&lt; LabelOption &gt; options)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addDataPointArea</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a566d64a04ee31771c99e399c4cf15c4e</anchor>
      <arglist>(const WModelIndex &amp;index, WAbstractArea *area) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paint</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a3929b0fc7d0b71f06809207b3d34df08</anchor>
      <arglist>(WPainter &amp;painter, const WRectF &amp;rectangle=WRectF()) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>ab1653eea26f873b295a7350bd0dbb9ac</anchor>
      <arglist>(Wt::WPaintDevice *paintDevice)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a9d29685403eb2948a01acbda7787ad5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelReset</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a171e964386bbb9db15d0eba58ce57b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a2e84917071b1a77361375713e424c2d8</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelColumnsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a8c7417d6962e60c3d18da332a67149ba</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsInserted</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a7d189d82d85c24be23bac4d8ab21223a</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelRowsRemoved</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>a8c9668712e4b19567a3959227ae0f8ae</anchor>
      <arglist>(const WModelIndex &amp;parent, int start, int end)</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>modelDataChanged</name>
      <anchorfile>classWt_1_1Chart_1_1WPieChart.html</anchorfile>
      <anchor>abf017e24778b35d2e5d4d1054147ed8b</anchor>
      <arglist>(const WModelIndex &amp;topLeft, const WModelIndex &amp;bottomRight)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Chart::WStandardPalette</name>
    <filename>classWt_1_1Chart_1_1WStandardPalette.html</filename>
    <base>Wt::Chart::WChartPalette</base>
    <member kind="enumeration">
      <name>Flavour</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a8df0df93e58ff3fb70f81139d3d6cec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Neutral</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a8df0df93e58ff3fb70f81139d3d6cec4a5132fbb2958a6f5423a545381f7b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Bold</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a8df0df93e58ff3fb70f81139d3d6cec4ae7f2bdf0cd049e37a3f73bba52d89945</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Muted</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a8df0df93e58ff3fb70f81139d3d6cec4a83909df5d484323e196ad6cbaeb821b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GrayScale</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a8df0df93e58ff3fb70f81139d3d6cec4ab5cd5ed83bb92e9c04fd0f9d513d6af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WStandardPalette</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>ac0b5421fc3e23365f594b3758fc33efd</anchor>
      <arglist>(Flavour flavour)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WBrush</type>
      <name>brush</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a43791f6f18e2986809d9ae8f062fc76e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>borderPen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a94ea33302229bc7ae115567ffb9acee4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WPen</type>
      <name>strokePen</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>ae8465be7c23762aef801707a48df862e</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>fontColor</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a980f085213550e9ae1365416cd385061</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WColor</type>
      <name>color</name>
      <anchorfile>classWt_1_1Chart_1_1WStandardPalette.html</anchorfile>
      <anchor>a76c4792de71f8a155a5108a7460b7caa</anchor>
      <arglist>(int index) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Dbo</name>
    <filename>namespaceWt_1_1Dbo.html</filename>
    <class kind="class">Wt::Dbo::Call</class>
    <class kind="class">Wt::Dbo::collection</class>
    <class kind="class">Wt::Dbo::Exception</class>
    <class kind="class">Wt::Dbo::StaleObjectException</class>
    <class kind="class">Wt::Dbo::ObjectNotFoundException</class>
    <class kind="class">Wt::Dbo::NoUniqueResultException</class>
    <class kind="class">Wt::Dbo::FixedSqlConnectionPool</class>
    <class kind="class">Wt::Dbo::dbo_default_traits</class>
    <class kind="class">Wt::Dbo::dbo_traits</class>
    <class kind="class">Wt::Dbo::Dbo</class>
    <class kind="class">Wt::Dbo::ptr</class>
    <class kind="struct">Wt::Dbo::ptr_tuple</class>
    <class kind="class">Wt::Dbo::DirectBinding</class>
    <class kind="class">Wt::Dbo::DynamicBinding</class>
    <class kind="class">Wt::Dbo::Query</class>
    <class kind="class">Wt::Dbo::QueryModel</class>
    <class kind="class">Wt::Dbo::Session</class>
    <class kind="class">Wt::Dbo::SqlConnection</class>
    <class kind="class">Wt::Dbo::SqlConnectionPool</class>
    <class kind="class">Wt::Dbo::SqlStatement</class>
    <class kind="class">Wt::Dbo::sql_value_traits</class>
    <class kind="class">Wt::Dbo::FieldInfo</class>
    <class kind="class">Wt::Dbo::query_result_traits</class>
    <class kind="class">Wt::Dbo::Transaction</class>
    <member kind="enumeration">
      <name>RelationType</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1d0ec6819b1bf5b7a88ad030b91ca564</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToOne</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564a32d7393c325724244671b18be53058fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManyToMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gga1d0ec6819b1bf5b7a88ad030b91ca564ad0bd477ec215a878e0758cce8494af24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SqlDateTimeType</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af213c090c1ccddc36d70d56e0804047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SqlDate</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af213c090c1ccddc36d70d56e0804047fa4ab45fdabb649cdca45c41496f7b9d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SqlDateTime</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af213c090c1ccddc36d70d56e0804047fae8521662683cc300eeb403a9658f9a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SqlTime</name>
      <anchorfile>namespaceWt_1_1Dbo.html</anchorfile>
      <anchor>af213c090c1ccddc36d70d56e0804047fab8343042a993efa1c34f906c2e3c8bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>id</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gac98c1f90b00ed9ce243c6412da3ac489</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name=&quot;id&quot;, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>field</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga8a2b653ff57f1459dfa2e556badd71d6</anchor>
      <arglist>(Action &amp;action, V &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>belongsTo</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>gaf1a3f4231d2064b86eb3903003527ddd</anchor>
      <arglist>(Action &amp;action, ptr&lt; C &gt; &amp;value, const std::string &amp;name, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hasMany</name>
      <anchorfile>group__dbo.html</anchorfile>
      <anchor>ga1a086b583fb150dbd4c5b4ba92bc177f</anchor>
      <arglist>(Action &amp;action, collection&lt; ptr&lt; C &gt; &gt; &amp;value, RelationType type, const std::string &amp;joinName, const std::string &amp;joinId=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Call</name>
    <filename>classWt_1_1Dbo_1_1Call.html</filename>
    <member kind="function">
      <type></type>
      <name>~Call</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>a67665c4c93b3a01cb8cb526618e68e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Call</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>ace6fa91750481408ad768a908a33a73d</anchor>
      <arglist>(const Call &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Call &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1Call.html</anchorfile>
      <anchor>a2a09a231c005f06f74309ffbf97c45d6</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection</name>
    <filename>classWt_1_1Dbo_1_1collection.html</filename>
    <templarg>C</templarg>
    <class kind="class">Wt::Dbo::collection::const_iterator</class>
    <class kind="class">Wt::Dbo::collection::iterator</class>
    <member kind="typedef">
      <type>C</type>
      <name>value_type</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a49af50adc6d43f473f2bb45e57a77e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>affe4c75e050ce2a5980a10498bc5fccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~collection</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>abd01cbfac7573fafa8cc69bf58cd8cd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a34580ef0194da3b8366182fbbc3b4c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4a6f1178ce470936900f269a9ccf97de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>afa7065c73dfcc8df48a89b0f7d98395e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a4fff6804cb98618a4709e4e7e84a13d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a82fd36791d677487a1c2986de0b72150</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a7b497add0d6ac2b1e098820f9ee64c93</anchor>
      <arglist>(C c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a35d046e991b3fec59af85d501fd49e51</anchor>
      <arglist>(C c)</arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>aedac567b3edd05532d53de7c0b1d7366</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Query&lt; C, DynamicBinding &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1collection.html</anchorfile>
      <anchor>a6b8aa118fad63539958ea8532ae37d68</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection::const_iterator</name>
    <filename>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>const_iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a6c93b191d6e60994018c6db50a6927e9</anchor>
      <arglist>(const const_iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>const_iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ae7ef6ea9eeeeedd4c9d98da200c069e8</anchor>
      <arglist>(const typename collection&lt; C &gt;::iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>af81865bea2595d6d8ce23d5f9f2f15e9</anchor>
      <arglist>(const const_iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a3a3caae866c474c4ab814a0d005a23e8</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a40fecd3f2f3f6210e89ea0a0ee57cdba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ae79babb91d587a163c1e0645dfefd6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ad14071ebbe0059c085b347fb4002f633</anchor>
      <arglist>(const const_iterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>ac21f64c65aac3c7cd223b17bd4c0ff7f</anchor>
      <arglist>(const const_iterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a9bbb34e3847103f449fe11298372670b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1const__iterator.html</anchorfile>
      <anchor>a05b9118effe01b8ec5ec4778578060de</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::collection::iterator</name>
    <filename>classWt_1_1Dbo_1_1collection_1_1iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a2a1fc326dc3e9fd2481474265684cd96</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~iterator</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a38e29354a59f37c21fc9256eac448ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a1721d43a4942b8d299fe339cb7998e73</anchor>
      <arglist>(const iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a25017c318c5ffdb74572c55b6e828b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>af857e37a583737b0c3f4688e3dbd9cc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>ab2da9fae0c3328f405cabbe825772fa8</anchor>
      <arglist>(const iterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a1b8099919fab1947bf0d51308c016371</anchor>
      <arglist>(const iterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>acc0bf632de3ea3c77d498e05c775c519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>operator++</name>
      <anchorfile>classWt_1_1Dbo_1_1collection_1_1iterator.html</anchorfile>
      <anchor>a7ec894ba3e75c7d69ab6545da67bf7bc</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Exception</name>
    <filename>classWt_1_1Dbo_1_1Exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classWt_1_1Dbo_1_1Exception.html</anchorfile>
      <anchor>a4c649eaf8945d2ede1fefdb871ab79cf</anchor>
      <arglist>(const std::string &amp;error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::StaleObjectException</name>
    <filename>classWt_1_1Dbo_1_1StaleObjectException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>StaleObjectException</name>
      <anchorfile>classWt_1_1Dbo_1_1StaleObjectException.html</anchorfile>
      <anchor>ae8087127c860dbe411d66f8cf37049ae</anchor>
      <arglist>(const std::string &amp;id, int version)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::ObjectNotFoundException</name>
    <filename>classWt_1_1Dbo_1_1ObjectNotFoundException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>ObjectNotFoundException</name>
      <anchorfile>classWt_1_1Dbo_1_1ObjectNotFoundException.html</anchorfile>
      <anchor>abc4fd1c1f513f3bc088109877490fe9d</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::NoUniqueResultException</name>
    <filename>classWt_1_1Dbo_1_1NoUniqueResultException.html</filename>
    <base>Wt::Dbo::Exception</base>
    <member kind="function">
      <type></type>
      <name>NoUniqueResultException</name>
      <anchorfile>classWt_1_1Dbo_1_1NoUniqueResultException.html</anchorfile>
      <anchor>ad89a102eab9ef0d5d0d36975a6c958ab</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::FixedSqlConnectionPool</name>
    <filename>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</filename>
    <base>Wt::Dbo::SqlConnectionPool</base>
    <member kind="function">
      <type></type>
      <name>FixedSqlConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a098f0ef385e4910a15bcfbaf3efc2023</anchor>
      <arglist>(SqlConnection *connection, int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SqlConnection *</type>
      <name>getConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a31c8b46293e6779cb2f891c332d329bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>returnConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1FixedSqlConnectionPool.html</anchorfile>
      <anchor>a50a31bdd5d46ac676c25164653214d7e</anchor>
      <arglist>(SqlConnection *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::dbo_default_traits</name>
    <filename>structWt_1_1Dbo_1_1dbo__default__traits.html</filename>
    <member kind="typedef">
      <type>long long</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a89170e677a75348ef6913d9f4ba496ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a6bb01d0dc6a5bbd25481fa16b642b996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>a0c092c6b045f77d4fc04b5360b762b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__default__traits.html</anchorfile>
      <anchor>af4da1fde75771c5f2e707827e2a885c4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::dbo_traits</name>
    <filename>structWt_1_1Dbo_1_1dbo__traits.html</filename>
    <templarg>C</templarg>
    <base>Wt::Dbo::dbo_default_traits</base>
    <member kind="typedef">
      <type>YourIdType</type>
      <name>IdType</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>afb62c3f28967b0b14b13360d47cd37dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IdType</type>
      <name>invalidId</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>aae2a13a4ca038f5bad337fbc2d70d37c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>surrogateIdField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a44c5455df89390fae082aadf7cf1bc13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>versionField</name>
      <anchorfile>structWt_1_1Dbo_1_1dbo__traits.html</anchorfile>
      <anchor>a701b53b0401836a7c966c619f3c9656d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Dbo</name>
    <filename>classWt_1_1Dbo_1_1Dbo.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Dbo</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>a8f4aadc99b20bfccbeb446ae0eac312f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>ae1f77ea4a99f84e0e7561001c5e6d1fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Session *</type>
      <name>session</name>
      <anchorfile>classWt_1_1Dbo_1_1Dbo.html</anchorfile>
      <anchor>aa8ad4b9425c131f82dc257ed7ec9643e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::ptr</name>
    <filename>classWt_1_1Dbo_1_1ptr.html</filename>
    <templarg>C</templarg>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a55cf9170cd012a15df206ac54178da3a</anchor>
      <arglist>(C *obj=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>ae8cdf1ba27d9b31cb03c37d16ded0776</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ptr</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a8ba24bdad5f3536eabe1a378d3d2bdec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa93933be1dde5b88f8220fd578e0714e</anchor>
      <arglist>(C *obj=0)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af8ea4ded2103a4ec31306549cbbf74f5</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>afe3605c8c5d46ddd078775275fb0cbc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>operator*</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a6cabfa29875c40ce04e57c71df406e9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>modify</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a8f9f4ec6ed2bd8febe8b62525c9576da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a6992f0c852b65dfe6be35a88dc880e45</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a4c283ff5e8d099e92d1ed0fcdeaecf16</anchor>
      <arglist>(const ptr&lt; C &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aa8c343715b6fafc63d34f2af7419f267</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>aaf91f5ef8bcdabfafcd9abb4182625bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>af4b26afebd56abc42005ef9f954d8fee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reread</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>abb1db71ef910748437d69bf11a04eb6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a7330a5220e3e926b5c084444116499a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dbo_traits&lt; C &gt;::IdType</type>
      <name>id</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a71d848cf0e8eaa1a4e01b11ae2f1e865</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>version</name>
      <anchorfile>classWt_1_1Dbo_1_1ptr.html</anchorfile>
      <anchor>a5c907971ba36fa3c5145b683abc76c76</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Wt::Dbo::ptr_tuple</name>
    <filename>structWt_1_1Dbo_1_1ptr__tuple.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>boost::tuple&lt; ptr&lt; T0 &gt;, ptr&lt; T1 &gt;,..., ptr&lt; T9 &gt; &gt;</type>
      <name>type</name>
      <anchorfile>structWt_1_1Dbo_1_1ptr__tuple.html</anchorfile>
      <anchor>ac3169fedc8bd6c7511501061ed099329</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::DirectBinding</name>
    <filename>structWt_1_1Dbo_1_1DirectBinding.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::DynamicBinding</name>
    <filename>structWt_1_1Dbo_1_1DynamicBinding.html</filename>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Query</name>
    <filename>classWt_1_1Dbo_1_1Query.html</filename>
    <templarg>Result</templarg>
    <templarg>BindStrategy</templarg>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a305ffb1d93ac34cbf8d8896d29bf0eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a619494451d11e0e2b995a556f2599afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Query</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a81ef00bea19257cf6537c40af35963a9</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Query &amp;</type>
      <name>operator=</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a7db5edf6192931aec96179a94adec2c9</anchor>
      <arglist>(const Query &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; FieldInfo &gt;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a9b08b4f6aa7b59ff2fe0282eb1f07192</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abe3f72ee7e005c62e4428c399b57d6c5</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>resultValue</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>ade63c5a681e84def0fc4d5b47c946493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>collection&lt; Result &gt;</type>
      <name>resultList</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a2cf4c4bba273994e0f95839aba3201b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Result</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>abfa8d61dd48e1450daddf52be243ea5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator collection&lt; Result &gt;</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a2964ddefd13eb5cb5e7a07b311dd29c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>where</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a52b2e4305d7d48f28b1d72bd69da57e4</anchor>
      <arglist>(const std::string &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>orderBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a411e77f4aad2447f067b4c20153fa1ad</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>groupBy</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a07d81e1a0d504eca1b428b04f7855c3d</anchor>
      <arglist>(const std::string &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>offset</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a53b6b6f8181d6f75d37725bba69c33ad</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt; &amp;</type>
      <name>limit</name>
      <anchorfile>classWt_1_1Dbo_1_1Query.html</anchorfile>
      <anchor>a26a00ff4b0ed1e7a322966f7b9b13201</anchor>
      <arglist>(int count)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::QueryModel</name>
    <filename>classWt_1_1Dbo_1_1QueryModel.html</filename>
    <templarg></templarg>
    <base>Wt::WAbstractTableModel</base>
    <member kind="function">
      <type></type>
      <name>QueryModel</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a5257f4e831c2d37b826c251faf2f6e9f</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuery</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a9453700573e37d02a69a77ac6f57dfa5</anchor>
      <arglist>(const Query&lt; Result &gt; &amp;query, bool keepColumns=false)</arglist>
    </member>
    <member kind="function">
      <type>const Query&lt; Result &gt; &amp;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a13e498b0e58709939dbb301316d0b163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ad0e8bde05d5a73800d91d9d83021a4b7</anchor>
      <arglist>(const std::string &amp;field, const WString &amp;header, WFlags&lt; ItemFlag &gt; flags=ItemIsSelectable)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a1bc893df2791f0b3c063c43c373b37d8</anchor>
      <arglist>(const std::string &amp;field, WFlags&lt; ItemFlag &gt; flags=ItemIsSelectable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnFlags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6448c762a7e8e28051d21d58b600e5ca</anchor>
      <arglist>(int column, WFlags&lt; ItemFlag &gt; flags)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; ItemFlag &gt;</type>
      <name>columnFlags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aecc1fdd499c6b994829e0f7f24ead164</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAllFieldsAsColumns</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>afa1bbf12d2b58ae91481f6d09c1dd8db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Result &amp;</type>
      <name>resultRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a70c60d0d81d1c41c1b8f29de0172935a</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>Result &amp;</type>
      <name>resultRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a08c73dc6b9e382a46e7bda2ffe01376a</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ade0f8644e13de16e326b7d679f87add1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatchSize</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6871c2e7be184bfd2339320812387f81</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>batchSize</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a6a887454166e332f401e9d9b16ff3bb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; FieldInfo &gt; &amp;</type>
      <name>fields</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aced97c84f2ecee0e1c535b6b1e132b62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const FieldInfo &amp;</type>
      <name>fieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a3b0abfbf73ae349d11f91b14d27493d4</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>fieldName</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a7dc3610b48f02f0dbbb6fadb0dee6239</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>columnCount</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>adb59d34c46c47a5aeb7606af8b882ee1</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>rowCount</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aef02f2ff4377322475c25a8c2dfaffb1</anchor>
      <arglist>(const WModelIndex &amp;parent=WModelIndex()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WFlags&lt; ItemFlag &gt;</type>
      <name>flags</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a5d2504dad0a417346a8229faa4fa1182</anchor>
      <arglist>(const WModelIndex &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a459f6560b1345dc27d2d037a10e46cfe</anchor>
      <arglist>(const WModelIndex &amp;index, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a1ea1331951d8bcef98caec5ac291a945</anchor>
      <arglist>(const WModelIndex &amp;index, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a7fcf4f35898f3808fdc650427173bf96</anchor>
      <arglist>(int column, SortOrder order=AscendingOrder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>insertRows</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a1fa3a689470e89d103ae4eadd2c88ae9</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeRows</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>aedeb2af32798348d92ee0f7e9ec7daf8</anchor>
      <arglist>(int row, int count, const WModelIndex &amp;parent=WModelIndex())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHeaderData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a3dbc22ccd31427afbcb69a7fe85254ab</anchor>
      <arglist>(int column, Orientation orientation, const boost::any &amp;value, int role=EditRole)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual boost::any</type>
      <name>headerData</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>ae1db722a013d021eed3f71cb8e1995f6</anchor>
      <arglist>(int section, Orientation orientation=Horizontal, int role=DisplayRole) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Result</type>
      <name>createRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a122165a0eaad6573172181d5eeefcbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a76080f5f01a7404d525259b352e7829b</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteRow</name>
      <anchorfile>classWt_1_1Dbo_1_1QueryModel.html</anchorfile>
      <anchor>a4a6c45d5b17f382f2e0927490107208b</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Session</name>
    <filename>classWt_1_1Dbo_1_1Session.html</filename>
    <member kind="function">
      <type></type>
      <name>Session</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a55c41a33e862729b80837347da199b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Session</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aac2f9332076fff93cde45ba1c8d15fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aedcc21944ce9c2bbb2fe2b5ef1860776</anchor>
      <arglist>(SqlConnection &amp;connection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a63ab17e16c9b721c94e6e9f67c5c255d</anchor>
      <arglist>(SqlConnectionPool &amp;pool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mapClass</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a5886d450c052ae0ee15ab3c91e439229</anchor>
      <arglist>(const char *tableName)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>tableName</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aa2455d5d0eb1b70b5a48b15ab4f9dd36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>add</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a1ffa672cd86ff1ce6d59837b05081946</anchor>
      <arglist>(ptr&lt; C &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>add</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>ae255e99ca81e9642f52f20adc6fb752c</anchor>
      <arglist>(C *obj)</arglist>
    </member>
    <member kind="function">
      <type>ptr&lt; C &gt;</type>
      <name>load</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a857714c785108435d082bcad10158e68</anchor>
      <arglist>(const typename dbo_traits&lt; C &gt;::IdType &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; ptr&lt; C &gt;, BindStrategy &gt;</type>
      <name>find</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a637d1031ffddd4bd7bbb55a616192ac7</anchor>
      <arglist>(const std::string &amp;condition=std::string())</arglist>
    </member>
    <member kind="function">
      <type>Query&lt; Result, BindStrategy &gt;</type>
      <name>query</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a8712ff0d59f7bb6a4d2986ad9637cc9e</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function">
      <type>Call</type>
      <name>execute</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a42b1d61b66e996eff474d677a10d5b8f</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTables</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>aba79d84c7c91faae06f954e6d3d390ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dropTables</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>a4c1fedb21e4e1cc44b182a34e8ebb4ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>ab896d119f1e0fb79adffe2282b92ef17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rereadAll</name>
      <anchorfile>classWt_1_1Dbo_1_1Session.html</anchorfile>
      <anchor>ad59da4e078a4e6532da698425193bbdb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlConnection</name>
    <filename>classWt_1_1Dbo_1_1SqlConnection.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a23fffafcf577071d2db5c2d98ecfe60c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SqlConnection *</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a60168581b0fdeb4a6404358455a2ac8d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a2c45628057f538e8a706eff6d4d9f559</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>abcddbb27f50192113d14c66a5ca10731</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a38ed9ab4831a0bfd8694f250813803bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aee5a42b2f3b452d32360a1c31f59f22d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SqlStatement *</type>
      <name>getStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aedb8c49c71db9e7c60f6cc44a568e3ed</anchor>
      <arglist>(const std::string &amp;id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a1c0c4efecf0b2360c54e46edf1cf5f64</anchor>
      <arglist>(const std::string &amp;id, SqlStatement *statement)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SqlStatement *</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>afbebcc0007aef36f6aa02b61f514b853</anchor>
      <arglist>(const std::string &amp;sql)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a7c2b5415d52fa69321d031b65980209d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>property</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>ace6e451d52c7c8e88daf3af8f5b578dc</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a8c00fd64eb82999880cc813ef3866f5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aff293ff5ad586e15143729eb38300ad6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>aec6a5227e676cf373f842e4d1ac75f12</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>af1f3290a984288175c6d82d088d0636c</anchor>
      <arglist>(SqlDateTimeType type) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnection.html</anchorfile>
      <anchor>a68a272eaafeef5e04912914f0662da39</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlConnectionPool</name>
    <filename>classWt_1_1Dbo_1_1SqlConnectionPool.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlConnectionPool</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>aa47e9da173d8235c5ede15d88ef21307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SqlConnection *</type>
      <name>getConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>abb43b5dd2db568f8433a8bc43ff6d3fc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>returnConnection</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlConnectionPool.html</anchorfile>
      <anchor>a8699f7ccc487b4578e64ab5e237a77be</anchor>
      <arglist>(SqlConnection *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::SqlStatement</name>
    <filename>classWt_1_1Dbo_1_1SqlStatement.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SqlStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a15969dbb9c24b0901c3a784ea4807273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>use</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a9b894eddd589cb481b21217b7ecad462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>done</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a98e67c18e7a5c3da2aa9a1c02f6ba3be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aa373b68969bcfa8e5c41113576b823fd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ad8b53ca87bdef11ceceb96ab05c260b9</anchor>
      <arglist>(int column, const std::string &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ae05c21f97335e6ff3a8c59bf5e0727ed</anchor>
      <arglist>(int column, short value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aa6b3c0525a43d0016116f8e7adad9d50</anchor>
      <arglist>(int column, int value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>aaf3c0b71e7af23dddac2aaae7d698f26</anchor>
      <arglist>(int column, long long value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a44b457f74cea0f4685af49022cb53d60</anchor>
      <arglist>(int column, float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afe5d6c654dc5f35fb5bd743d801c8cbd</anchor>
      <arglist>(int column, double value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a94c43852e586bbcba7077352588fe1a2</anchor>
      <arglist>(int column, const boost::posix_time::ptime &amp;value, SqlDateTimeType type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a95a55b30b2411053aea47d238dbdb9ac</anchor>
      <arglist>(int column, const boost::posix_time::time_duration &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bind</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ae2bbddef8fd8c11687d23187920dc4da</anchor>
      <arglist>(int column, const std::vector&lt; unsigned char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>bindNull</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>affff3fa371c416b6c984082d8f5dc050</anchor>
      <arglist>(int column)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>execute</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ab8b5af1a2f9cd87e8c2aac883a3d805f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>insertedId</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a88ab03b6ac501ce5b424746d42b2b882</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>affectedRowCount</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a4a0eedff10a29eb511ebf66762b13e72</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>nextRow</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a5da3f872f0dfb742dd4c1608ad1dd550</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afca829eb43f0977b2af6ea7e0b66aad1</anchor>
      <arglist>(int column, std::string *value, int size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ab531e2336cac4d92abf4af926dffbe36</anchor>
      <arglist>(int column, short *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a8512932928f07c81917c67ec86551685</anchor>
      <arglist>(int column, int *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a2d286430babae4a15f7a64ffb8b7f463</anchor>
      <arglist>(int column, long long *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>af22bf78fd30fb12b502a2c49251c3808</anchor>
      <arglist>(int column, float *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>af55759bcb42119292bf2e05308a50db8</anchor>
      <arglist>(int column, double *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>a82e3b42520fa813a1ad32d718fc74b3c</anchor>
      <arglist>(int column, boost::posix_time::ptime *value, SqlDateTimeType type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ac34540c06e6bbe8cc29b87542e8dc726</anchor>
      <arglist>(int column, boost::posix_time::time_duration *value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getResult</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>afa7b64d1c949c39e1cddd16f8e343b42</anchor>
      <arglist>(int column, std::vector&lt; unsigned char &gt; *value, int size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>sql</name>
      <anchorfile>classWt_1_1Dbo_1_1SqlStatement.html</anchorfile>
      <anchor>ac1a8b9037b9f106135150a547626b826</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::sql_value_traits</name>
    <filename>structWt_1_1Dbo_1_1sql__value__traits.html</filename>
    <templarg>V</templarg>
    <templarg>Enable</templarg>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>type</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>a938ffa7506a84bf46fa6e9a4d3c69253</anchor>
      <arglist>(SqlConnection *connection, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bind</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>aeed1a933f3d83555b5d39ac76b929170</anchor>
      <arglist>(const V &amp;v, SqlStatement *statement, int index, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>read</name>
      <anchorfile>structWt_1_1Dbo_1_1sql__value__traits.html</anchorfile>
      <anchor>ab3c8e4555b710451a3793059734fc751</anchor>
      <arglist>(V &amp;v, SqlStatement *statement, int column, int size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::FieldInfo</name>
    <filename>classWt_1_1Dbo_1_1FieldInfo.html</filename>
    <member kind="enumeration">
      <name>Flags</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SurrogateId</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74abd29aed6e83cfe4f2c9aca8f46052930</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NaturalId</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74aa95fc942e42250a677339c2efc7e62dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Version</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74a39166c38abd9ccbd99e2d2f88906d814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mutable</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74a5d34fad0e176750e3851bc76151075d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NeedsQuotes</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74a90f8c5e95d174ba0837a42c43a23ac39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ForeignKey</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>abbf8a1584332b33920b8e74f8f07ed74afa28af86726e73177e8ed03e5fdaa9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a2ac38659a204f772c8dd4bffa6550c2b</anchor>
      <arglist>(const std::string &amp;name, const std::type_info *type, const std::string &amp;sqlType, int flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldInfo</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a3f4ed316af49d60c58b51e35043bdc60</anchor>
      <arglist>(const std::string &amp;name, const std::type_info *type, const std::string &amp;sqlType, const std::string &amp;foreignKeyTable, const std::string &amp;foreignKeyName, int flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQualifier</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a1c9b9be3aeb53d07c98d7199fc97e965</anchor>
      <arglist>(const std::string &amp;qualifier, bool firstQualified=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a641378ec94a44b31dc269003b6e3c1b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>sqlType</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ad70e6a952ee5482fef69f2f715fc80c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>qualifier</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a4ca5488b2fc88986d678ab8981184c28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::type_info *</type>
      <name>type</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>aee2d002fe01db8d9a2417bfd256e19b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>aae3e1485bb497489a0b82252ba290042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaturalIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a64e890f80b63b40fcdbf581eec4bdf54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSurrogateIdField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ac52d9c1f1bf71b8d30d7050bc2379732</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVersionField</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>a04f79cb89127236fc1aab798c5dff75a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMutable</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ae1fb411e5e5f2391832016b5d3e07d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsQuotes</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>ae6cee958dab8c234954d6f418aec1979</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForeignKey</name>
      <anchorfile>classWt_1_1Dbo_1_1FieldInfo.html</anchorfile>
      <anchor>aee0ef9bf2e28793ba414d03b3912fd81</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::query_result_traits</name>
    <filename>structWt_1_1Dbo_1_1query__result__traits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getFields</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a15021d5b70cb03ee08b39f0c45b02572</anchor>
      <arglist>(Session &amp;session, std::vector&lt; std::string &gt; *aliases, std::vector&lt; FieldInfo &gt; &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Result</type>
      <name>load</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a24228c4fbd6fd851a44c7aaf3416d0b3</anchor>
      <arglist>(Session &amp;session, SqlStatement &amp;statement, int &amp;column)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getValues</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a62ad66f0b19a9afa554cbe6f8fa24ea5</anchor>
      <arglist>(const Result &amp;result, std::vector&lt; boost::any &gt; &amp;values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValue</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>a31f67f41ac5ac491d59e911a46fe4238</anchor>
      <arglist>(Result &amp;result, int &amp;index, const boost::any &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Result</type>
      <name>create</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>ad5ff66197006a5daef3ce806ad29ddf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>af54fbd95d2319077cacbb718d6f33f1b</anchor>
      <arglist>(Session &amp;session, Result &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove</name>
      <anchorfile>structWt_1_1Dbo_1_1query__result__traits.html</anchorfile>
      <anchor>ae60de38f7bbffad41f60bd80df2ad8ca</anchor>
      <arglist>(Result &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::Transaction</name>
    <filename>classWt_1_1Dbo_1_1Transaction.html</filename>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>ad617b2cb23bc0778ad2c534e2482f74c</anchor>
      <arglist>(Session &amp;session)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Transaction</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>a5451291c5485081d047e723f9414fe88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>ac1c956890b27b36a7e8ce664606e2af9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commit</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>a76e109abb03f00cf3ba5a5c6d84529a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rollback</name>
      <anchorfile>classWt_1_1Dbo_1_1Transaction.html</anchorfile>
      <anchor>a071848320ad21e06890fb30d4b6b46e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::Postgres</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1Postgres.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a5699b228685c11aaf3293e1ec6243f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a3fd006b93f9eb7d8c88d9f01d339606d</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>ae032939fe1a5e5007179d5c52e9074c1</anchor>
      <arglist>(const Postgres &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Postgres</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a6b7dbc604df8610791e6cfdc57b55443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Postgres *</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>ae905567f9ed51f9b200222a995c4894f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a003ae8b797aea816669d4f02a34c6806</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type>PGconn *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a025dd7452d7f25cdca2088999d37e238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>executeSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a9eaa769e442138ed02a0caed39cfd7f6</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>ac1148a180204342f6ca910d106b58b00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a81966e0110e7d3c2076cf27a7e08e236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>aea0742af53f3306a3302647014a8e3e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SqlStatement *</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>aa899b3109ba4400bf348384744a31e8f</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a92adbae7113272038f0ceb6ca6a93ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a5671d18ab68b492d590485458cca5122</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>af05af24a4bd0c20a090387056d724745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a1e978200ba52918f2e2fd26a32dad456</anchor>
      <arglist>(SqlDateTimeType type) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Postgres.html</anchorfile>
      <anchor>a81acebb9e839ed7f976602396ae6ed0a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Dbo::backend::Sqlite3</name>
    <filename>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</filename>
    <base>Wt::Dbo::SqlConnection</base>
    <member kind="enumeration">
      <name>DateTimeStorage</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ae6e6142ccb1da626677b05ef8852fdaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ISO8601AsText</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ae6e6142ccb1da626677b05ef8852fdaaaad8bd1d664eb10133d13264263665e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JulianDaysAsReal</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ae6e6142ccb1da626677b05ef8852fdaaa83b21617ea295e7fceb7f6bc916a9b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnixTimeAsInteger</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ae6e6142ccb1da626677b05ef8852fdaaa9f021d0996b88c6b5cea9facf3e52651</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ad392317a2278c700364f6096fcf12e67</anchor>
      <arglist>(const std::string &amp;db)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a292580940953e8fea523144db1087766</anchor>
      <arglist>(const Sqlite3 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sqlite3</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a8cdca9bc5d744a76663d14d1255af483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Sqlite3 *</type>
      <name>clone</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a85e4a7bf082eff1264f4b7290edd6f8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>sqlite3 *</type>
      <name>connection</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a89c9fd929b5e051d187dabfb2f238ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDateTimeStorage</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a571f4019950aafc2b855d46d4e7072d5</anchor>
      <arglist>(SqlDateTimeType type, DateTimeStorage format)</arglist>
    </member>
    <member kind="function">
      <type>DateTimeStorage</type>
      <name>dateTimeStorage</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a975659c1b4349467a5f667323fc0f134</anchor>
      <arglist>(SqlDateTimeType type) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a20a6959d6b8e0d14f2ccf764361954f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>commitTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a0bb773ea028a7e0a1dc10f94fcc90b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rollbackTransaction</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>aade642c39d87b4f796c196415ec5b16a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SqlStatement *</type>
      <name>prepareStatement</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>ac254f423eb352ed08f63a11e7d9508a1</anchor>
      <arglist>(const std::string &amp;sql)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementSql</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a85f442f34549768a96fefa7548045c41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a969dbaea3af070592bc8630425326e99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>autoincrementInsertSuffix</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a597ce9d1ff2702ac08e5dd6a0dcb9a98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>dateTimeType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a4e4ecfd24b47a820974dc868a66d1eb5</anchor>
      <arglist>(SqlDateTimeType type) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>blobType</name>
      <anchorfile>classWt_1_1Dbo_1_1backend_1_1Sqlite3.html</anchorfile>
      <anchor>a8e9060b7b68a93adb12e407c7658b24f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Ext</name>
    <filename>namespaceWt_1_1Ext.html</filename>
    <class kind="class">Wt::Ext::AbstractButton</class>
    <class kind="class">Wt::Ext::AbstractToggleButton</class>
    <class kind="class">Wt::Ext::Button</class>
    <class kind="class">Wt::Ext::Calendar</class>
    <class kind="class">Wt::Ext::CheckBox</class>
    <class kind="class">Wt::Ext::ComboBox</class>
    <class kind="class">Wt::Ext::Component</class>
    <class kind="class">Wt::Ext::Container</class>
    <class kind="class">Wt::Ext::DataStore</class>
    <class kind="class">Wt::Ext::DateField</class>
    <class kind="class">Wt::Ext::Dialog</class>
    <class kind="class">Wt::Ext::FormField</class>
    <class kind="class">Wt::Ext::LineEdit</class>
    <class kind="class">Wt::Ext::Menu</class>
    <class kind="class">Wt::Ext::MenuItem</class>
    <class kind="class">Wt::Ext::MessageBox</class>
    <class kind="class">Wt::Ext::NumberField</class>
    <class kind="class">Wt::Ext::PagingToolBar</class>
    <class kind="class">Wt::Ext::Panel</class>
    <class kind="class">Wt::Ext::ProgressDialog</class>
    <class kind="class">Wt::Ext::RadioButton</class>
    <class kind="class">Wt::Ext::Splitter</class>
    <class kind="class">Wt::Ext::SplitterHandle</class>
    <class kind="class">Wt::Ext::TableView</class>
    <class kind="class">Wt::Ext::TabWidget</class>
    <class kind="class">Wt::Ext::TextEdit</class>
    <class kind="class">Wt::Ext::ToolBar</class>
    <class kind="class">Wt::Ext::ToolTipConfig</class>
    <class kind="class">Wt::Ext::Widget</class>
    <member kind="enumeration">
      <name>DataLocation</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>ga5bc908c6e6aa90646cca1276d68cb2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClientSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gga5bc908c6e6aa90646cca1276d68cb2b2a19099959db2ef813b3d1a1e2f3e04675</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ServerSide</name>
      <anchorfile>group__ext.html</anchorfile>
      <anchor>gga5bc908c6e6aa90646cca1276d68cb2b2a1ae210985e4d5795a6aa21ed8871dfe7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::AbstractButton</name>
    <filename>classWt_1_1Ext_1_1AbstractButton.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>ae4a53837bb690bc1426a8b8da336bcea</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a7adfdba80922236853b08502a4881a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>ab484de8e4b543aa36ef5bfd1c8b70548</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>icon</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>aa3b00f75eba7eb933b3cd809746cb8a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckable</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>afe7d30546234065316df73026558fc79</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCheckable</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a3fa242a4f266453da5ef8112cadc59e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMenu</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>aadbc30ae480d99a6e4ca19a070e02d81</anchor>
      <arglist>(Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a79b1606d4b674dc13c5e92239be85700</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>aa637f0902da104ab323131cb237c3556</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>afc7e2bc9c426bbbfb9beb9e18e9a0845</anchor>
      <arglist>(ToolTipConfig *config)</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a43a839bb8e46df6c06ef2df65ae277c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; bool &gt; &amp;</type>
      <name>toggled</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a4492f5bd82c0c33c0282c955bafce9d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractButton.html</anchorfile>
      <anchor>a2cab98fae87f87209c9999e086253fb0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::AbstractToggleButton</name>
    <filename>classWt_1_1Ext_1_1AbstractToggleButton.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="slot">
      <type>void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a9132c42402232810427d96d700e4cc61</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a9aa7198153fcca043f267d337fcfd168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setUnChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a56f4470889ff56155dc6598751eef47e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a73635f45799c76d017c4924cb133997f</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>aa0b4bbe46c7ee9a61267016a3530d136</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a32fe2a8e20c828f15f08440bae17ef4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>checked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>a42534aedfc08e6b2cb816d792a9ca749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>unChecked</name>
      <anchorfile>classWt_1_1Ext_1_1AbstractToggleButton.html</anchorfile>
      <anchor>aad745c27aae18a80f159091c7e01fe10</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Button</name>
    <filename>classWt_1_1Ext_1_1Button.html</filename>
    <base>Wt::Ext::AbstractButton</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>aa65a7bd6f3f9ad2be15d7553fb41e786</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>a0f31acbe76188e841e5e132f8111f725</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Button</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>a6f3cc145f4a8eedd7f65532187836586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>a2ed225799c373580940b99312bfa0b79</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>aba951a81109feb3fcf1823e0dd8d8fcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>clicked</name>
      <anchorfile>classWt_1_1Ext_1_1Button.html</anchorfile>
      <anchor>acdb897f4b6d0ca38764966017ecceaff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Calendar</name>
    <filename>classWt_1_1Ext_1_1Calendar.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>a2d4f71ffe544bb03fc5851b2c3b371bb</anchor>
      <arglist>(bool i18n=false, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>aa9100d67bf50b81ee6ce1313b4d5b216</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; WDate &gt; &amp;</type>
      <name>selection</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>a8dc46727fc4d990f101b47adf52c67b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; void &gt; &amp;</type>
      <name>selectionChanged</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>ab46d39379ddd1faeea1eb95aa403eda1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; void &gt; &amp;</type>
      <name>selected</name>
      <anchorfile>classWt_1_1Ext_1_1Calendar.html</anchorfile>
      <anchor>a6b1c98ac0a89db6281ff0903a0bd90e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::CheckBox</name>
    <filename>classWt_1_1Ext_1_1CheckBox.html</filename>
    <base>Wt::Ext::AbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>CheckBox</name>
      <anchorfile>classWt_1_1Ext_1_1CheckBox.html</anchorfile>
      <anchor>abef8e54213398a637d8e68e70902ec44</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckBox</name>
      <anchorfile>classWt_1_1Ext_1_1CheckBox.html</anchorfile>
      <anchor>aa9e44e6317783b036b6a14307da692f3</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ComboBox</name>
    <filename>classWt_1_1Ext_1_1ComboBox.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a8183ecd2ee82149a57121dc6cce94538</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a282ddb37ddc6d8606e2385a742a60452</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a388ebac95d30babbd8cc494837932587</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>aabc76822524dbe503909472ea2aac8db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a6e9f541c754551c1ecbcdeb9337ecfb3</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>ab17f27bcbd7d93db4f0147699bbdb5a0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a1c9f4f4be0dd147954e8b21931511cdd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setItemText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a808bf7caa59a88c172124fe73090a964</anchor>
      <arglist>(int index, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>currentText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>aa0a811e97424b7980f4da77c3711c72a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>itemText</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a59faa0b8b2cb3a2b25a4b47eb82ecb8b</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a54d18b5dde4bd46b830c2b2ecd6d0765</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModelColumn</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a46e2c9ac50d405d5e4ad8215ce5bb885</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditable</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a0c150137b5ad059ba66ee8f0b85b3585</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQueryDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a8310599aaa5efc0ae08cf9323f321a7f</anchor>
      <arglist>(int milliSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinQueryLength</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a181b1185f0ae607c61c62e900cbe479c</anchor>
      <arglist>(int numChars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageSize</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a7e723bcbf36890f51805d8c373198ded</anchor>
      <arglist>(int pageSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataLocation</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a8cbea60f93ad91387200a3e49e33eaf0</anchor>
      <arglist>(DataLocation dataLocation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a48b20b2d00b523a28e2c1bd0a1a9bfcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>af91ec32bf3c21c1ccb34d0cd4ad5f8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal&lt; int &gt; &amp;</type>
      <name>activated</name>
      <anchorfile>classWt_1_1Ext_1_1ComboBox.html</anchorfile>
      <anchor>a9cde6eed9970ddf8523ecb35c717c1b5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Component</name>
    <filename>classWt_1_1Ext_1_1Component.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>ac561b86893de33ed03c6f3874b500722</anchor>
      <arglist>(bool how)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>a9f1bbc312ef663d05191b777f1bc9052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>a70cd13699ca9e39c41b774b77d8c0c3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Component.html</anchorfile>
      <anchor>a04b4d592da0721773de0bf6740c6d1de</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Container</name>
    <filename>classWt_1_1Ext_1_1Container.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="function">
      <type></type>
      <name>Container</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>ab45339fc546e1e596af9585c0c375060</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Container</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>abdcc8cc41922ea2b4d42e57a97d189e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLayout</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>a0707be012bd5e627e6c9d7e2b6f98afe</anchor>
      <arglist>(WLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>WLayout *</type>
      <name>layout</name>
      <anchorfile>classWt_1_1Ext_1_1Container.html</anchorfile>
      <anchor>ae479ebb74773cb1f4efcc7b28806e285</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::DataStore</name>
    <filename>classWt_1_1Ext_1_1DataStore.html</filename>
    <base>Wt::WResource</base>
    <member kind="function">
      <type></type>
      <name>DataStore</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>a9d88086e22ca1f48b8378494fe9222f9</anchor>
      <arglist>(WAbstractItemModel *model, DataLocation dataLocation, WObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DataStore</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>a4b2c3c030c6557aa6e3beadb50bf1643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addColumn</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>a6fbd9be0f07bc864bc2921769d64a51e</anchor>
      <arglist>(int columnIndex, const std::string &amp;jsonName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterColumn</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>ad4e923221657f57281d76c02b3a4d803</anchor>
      <arglist>(int columnIndex)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRequest</name>
      <anchorfile>classWt_1_1Ext_1_1DataStore.html</anchorfile>
      <anchor>a95828fc3362ef58ff821790180bf9834</anchor>
      <arglist>(const Http::Request &amp;request, Http::Response &amp;response)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::DateField</name>
    <filename>classWt_1_1Ext_1_1DateField.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="function">
      <type></type>
      <name>DateField</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>ac259dff707f9ada0bbe209567ad25d84</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>abaa98fa2fff51505bd086dcedcea1f8b</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>format</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>af9a05108f7589cda4f503a564a46e3be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDate</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>a67e836de556370818508e4f70da5dc41</anchor>
      <arglist>(const WDate &amp;date)</arglist>
    </member>
    <member kind="function">
      <type>WDate</type>
      <name>date</name>
      <anchorfile>classWt_1_1Ext_1_1DateField.html</anchorfile>
      <anchor>a590576fafea26af48e5e3a72f8bff4b3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Dialog</name>
    <filename>classWt_1_1Ext_1_1Dialog.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="enumeration">
      <name>DialogCode</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a173316655f09bbf63e79691b17d3c8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rejected</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a173316655f09bbf63e79691b17d3c8d5a1de44c73e14f7eac0884bc26721b2d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Accepted</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a173316655f09bbf63e79691b17d3c8d5a9c3465568e73c4e4fd83021536be4ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a76a00b2d5493cdb2f5ed7b340b1e3c6d</anchor>
      <arglist>(const WString &amp;windowTitle=WString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dialog</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>ab2fc4339c9e2d8befafce8a28233f628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>ab6a5820f54f9663a592efd112097939a</anchor>
      <arglist>(const WString &amp;windowTitle)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>windowTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a64577792a7c2a48eefc56ff223b9514a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WContainerWidget *</type>
      <name>contents</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>ab41ccccc3b96e42da6977829c0161073</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>exec</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a1dbf3f23fde44807110abe3cf43f7944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>done</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a934c0a3801fda4cac6f6d95c8ea2fa22</anchor>
      <arglist>(DialogCode r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>accept</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>aadf699cc3ecaebd6ae093fa2c0e02fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reject</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a4db5e6b09bb2faf5501662c518c79fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; DialogCode &gt; &amp;</type>
      <name>finished</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a62547a1ae13e2cdee0b383bdb79eef15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DialogCode</type>
      <name>result</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a43bc83386c56a59afc7edbc7253eb6eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a720b01d56ab479fad6b749e27bbd444c</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>ad9f19a8ff62e3520544f2ea10a7647ce</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a89e0ff2766151d3f52b9a6d37286a7d4</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Button * &gt; &amp;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a9c1b9d1f950294d122f8148ec992c1a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>aa68ac801a657f8ec69134e15bf5d765d</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>defaultButton</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a4ffc5198bd395cf95b92ef769b99f393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeGripEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>aaaba1c432c8803814426daa276708d63</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSizeGripEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1Dialog.html</anchorfile>
      <anchor>a129cb8e3bd17c0531dd975f13e585a65</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::FormField</name>
    <filename>classWt_1_1Ext_1_1FormField.html</filename>
    <base>Wt::Ext::Component</base>
    <member kind="enumeration">
      <name>MessageLocation</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2dc53fb554d2dcbbcb199535ddeed92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FancyToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2dc53fb554d2dcbbcb199535ddeed92da197077fec9c7cdff5b4043913d6f09cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlainToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2dc53fb554d2dcbbcb199535ddeed92da437412fc30c12e23f63dfc1f54a01472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Below</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2dc53fb554d2dcbbcb199535ddeed92da1e38a33c74bae6b1ae1a47409317affc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Besides</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2dc53fb554d2dcbbcb199535ddeed92dab45061b8c7da544c9c26d98c119867f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMessageLocation</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a83bc30d48a0c4b15021d27e6446829ae</anchor>
      <arglist>(MessageLocation location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>ac62a3a3fa7d3ae3d3263267a413c5cb4</anchor>
      <arglist>(WValidator *validator)</arglist>
    </member>
    <member kind="function">
      <type>WValidator *</type>
      <name>validator</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a382f034a76e000eb4f8b513382916f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a1c67b28fef3177ba5e82cac1f5387687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WLabel *</type>
      <name>label</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>aeed85e4a038bb4fd6c339716fb3d3a8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFocus</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a6d7fc497d6816a420ff5a576631ee50b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a0ac56f725de8a68fd7931b9319286485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>changed</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a4d610435f726887b0ab33411ceff2750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>blurred</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a3f4bdfc096299231fb5bd630507f639e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>focussed</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a444c9cbf1461dc168b6d930a438fbc3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FormField</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>a2e98c3cc2edc738a9626ce3f0deef7be</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Wt::WLabel</name>
      <anchorfile>classWt_1_1Ext_1_1FormField.html</anchorfile>
      <anchor>af60df3b331659c426f79d24d991da7ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::LineEdit</name>
    <filename>classWt_1_1Ext_1_1LineEdit.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="enumeration">
      <name>EchoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ac3469352f6a1073ac5015202e6f3e2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ac3469352f6a1073ac5015202e6f3e2e1ad095e17353838d86f57d1a7601a57332</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ac3469352f6a1073ac5015202e6f3e2e1ae84e09a5c6446aff5ba5053acb7904b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEdit</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a71715b99ff1aba4f38af23e86056e074</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineEdit</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ae0a247bcb43fd119bfffb29a3b1d7319</anchor>
      <arglist>(const WString &amp;content, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextSize</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a4f47849711e93d6760f86a38eeca418a</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>textSize</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ab87c5c0f13c068383ffa402863d44e6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>aa0f77652f6a47a27a17bc2d9a46e6fd3</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a8ba4c9a22661c192bd28b4a28a8ca943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLength</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ab17143af0d6fef0467a7a9aead17d091</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>acb99fb14b98c8cd8640deb8706130118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ab2ef8ad240cfeda9b5dc5f2ccf6a5fd8</anchor>
      <arglist>(EchoMode echoMode)</arglist>
    </member>
    <member kind="function">
      <type>EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ab2d9d91c96ec140d7fdd76b57e37150d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>aee32a5451b7e73568b39215f18d2d98c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentDown</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a3876ad8ff416a6020db30b57ab165dbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyPressed</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>ad2d94e3020a39759bd885d46600b0bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal&lt; WKeyEvent &gt; &amp;</type>
      <name>keyWentUp</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a62383a836f5fb357a3824ea86006b44b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventSignal &amp;</type>
      <name>enterPressed</name>
      <anchorfile>classWt_1_1Ext_1_1LineEdit.html</anchorfile>
      <anchor>a8550f018e75b6104978d510b5eced941</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Menu</name>
    <filename>classWt_1_1Ext_1_1Menu.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a9833d8fa63f51601d71ef0af0f16a219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a985e64794c5fb23e3ee81f5d6009b6dd</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a0f9d979d2015c35a968c95dc681c4197</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a83906015f609ddcd9c2a5798e189f3ae</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a609ad8b1d9724c0c30ce3cf7ca381ada</anchor>
      <arglist>(const WString &amp;text, const F &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a0c4523cd43ebc8c1626ef67dd9dbeef6</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addItem</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a204f0e0e0f2568ce6c7307bff7cba915</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, const F &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a11202776073812bdd6dc1849f917bd78</anchor>
      <arglist>(const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>addMenu</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>ae92e182aa488c59865c1fae538ea609b</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a72f3b8ebd29b14c9b5c6732c524d7e30</anchor>
      <arglist>(MenuItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>a17cde965e914a6a774e1ec202db3786d</anchor>
      <arglist>(WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1Ext_1_1Menu.html</anchorfile>
      <anchor>aca9bddc38f80c06383a223c01df79a80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::MenuItem</name>
    <filename>classWt_1_1Ext_1_1MenuItem.html</filename>
    <base>Wt::Ext::AbstractButton</base>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classWt_1_1Ext_1_1MenuItem.html</anchorfile>
      <anchor>a7881281b800bf5e2ab7ad4f1409cfe31</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classWt_1_1Ext_1_1MenuItem.html</anchorfile>
      <anchor>ae5e37c8c73ef646c21c18560a1a1396c</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::MessageBox</name>
    <filename>classWt_1_1Ext_1_1MessageBox.html</filename>
    <base>Wt::Ext::Dialog</base>
    <member kind="function">
      <type></type>
      <name>MessageBox</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a6477c87e2b02a742065272a019cacf30</anchor>
      <arglist>(bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageBox</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a7af93ad6ef0588e3539f2d726ac07d92</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, Icon icon, WFlags&lt; StandardButton &gt; buttons, bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>ac318d28fa19abc4e496b497aea557d39</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>aad99693851dd7c95ddb4ca463e69f5c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a85e914a68d10813bb0624c19eb679ca0</anchor>
      <arglist>(Icon icon)</arglist>
    </member>
    <member kind="function">
      <type>Icon</type>
      <name>icon</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a08dc6e5e7e1dfd07d0fbf41213c8e30e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtons</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a2c03238ea19691e14bb915b10a9279f1</anchor>
      <arglist>(WFlags&lt; StandardButton &gt; buttons)</arglist>
    </member>
    <member kind="function">
      <type>WFlags&lt; StandardButton &gt;</type>
      <name>buttons</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a0ea9c67635ba8acadd3843c281dd3f66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StandardButton</type>
      <name>result</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a1ca14b375ae42488916e23d97e42d5f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePrompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a4c551e90aea08438544ddbf2f3197133</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>af6626137daa8af5a4d615bdc8c59f5b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTextArea</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>ade8dec9c2364c85ed42fc0cdb3bbae53</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTextArea</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a353ac2d752cc9921505d3a61f495388c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a88fa134817d0afc348df856b7c4236fe</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>ab1debb3cb5c60e399c396eb0585c4b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; StandardButton &gt; &amp;</type>
      <name>buttonClicked</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a7b95867c4a86a79fdf317f7926a87667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a1886eef5b4b8e903b6f1455f3a864045</anchor>
      <arglist>(bool hidden)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>aba9efcb3903259caa0981f5ecc0cb7cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>show</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>af3eacdd064461cd826b2224f919190aa</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, WFlags&lt; StandardButton &gt; buttons, bool i18n=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StandardButton</type>
      <name>prompt</name>
      <anchorfile>classWt_1_1Ext_1_1MessageBox.html</anchorfile>
      <anchor>a987211d96f9128716c5dab353a16ad84</anchor>
      <arglist>(const WString &amp;caption, const WString &amp;text, WString &amp;value, bool multiLine=false, bool i18n=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::NumberField</name>
    <filename>classWt_1_1Ext_1_1NumberField.html</filename>
    <base>Wt::Ext::LineEdit</base>
    <member kind="function">
      <type></type>
      <name>NumberField</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>ae8ff897bc2b3669a87cc2d87a699ba11</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>ad811261baec4e8550b3849b53f984456</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>a8ea09d6db15fd8938a2cd88daf9ad9f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecimalPrecision</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>a4bc56ee6f80a561c7424c00185847a3a</anchor>
      <arglist>(int decimals)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>decimalPrecision</name>
      <anchorfile>classWt_1_1Ext_1_1NumberField.html</anchorfile>
      <anchor>a623ef7f586b670715df46f411a9315a8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::PagingToolBar</name>
    <filename>classWt_1_1Ext_1_1PagingToolBar.html</filename>
    <base>Wt::Ext::ToolBar</base>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Panel</name>
    <filename>classWt_1_1Ext_1_1Panel.html</filename>
    <base>Wt::Ext::Container</base>
    <member kind="function">
      <type></type>
      <name>Panel</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a047d152d0247aca78ec607bb3b665338</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Panel</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a71bf14e814da2118c3859d8d682c7c7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTopToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a16b203f3b26cc5ffb82e036e6419e60f</anchor>
      <arglist>(ToolBar *toolBar)</arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>topToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a618824abfc31c3ddfcff6c550adc88b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBottomToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a9436b9da7ee336136027fe4914a5a381</anchor>
      <arglist>(ToolBar *bottomBar)</arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>bottomToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a20eb46f218c8d2e1ead77fb0f4d1634a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFooterButton</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>aee162a984a883afe8bffbda643159b44</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFooterButton</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a7d66822b2f4dd23165215e9dbd8bb31e</anchor>
      <arglist>(Button *button)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Button * &gt; &amp;</type>
      <name>footerButtons</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a2330c0b1b31990bcc07e8a0aeebcfb4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a46a86bb4a39637b06f0b20a9f915b72c</anchor>
      <arglist>(const WString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>title</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a130b5e84969fc0deb8c4ff28e9f966cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitleBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a6675d56afd2546fe05a7e3e2135069f9</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>titleBar</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>adf6238554373cecbc791b5476ad07c90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimate</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a8887d2c32b79f119ce2c26cfddfef77c</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>animate</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>af862e9ffba0568ce5d72051996d5b2c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoScrollBars</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a04d48634c116f7d0858918d9a0f63613</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoScrollBars</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a89dd67d1143d8116d1d45561f56a0542</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBorder</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a962eb64c3c069812fccc73487a5e2065</anchor>
      <arglist>(bool show)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>border</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a4da431e41b0d23956ff820907d640a06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>addfe3891408758ea3e8c68ad8a41543e</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a2fa2ede9184fa7e2dc90cac51c12e537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>aecb0389b8adaaf887538741b368e773c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>ac10c12d39e08cceeaa179bd75464219c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollapsible</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a85299483077d467a4e4f3baa36cfa758</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollapsible</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>ab5a94a9659c2c08ee32f686a62b59ed9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResizable</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a1f3c32c2bba7c57206d4fa4d1b0f5521</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isResizable</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a2cd9b1e6e2a931d5770a16355ae4d72f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>collapsed</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a7dfc66c0c3021f05e8bb9e59d675b629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JSignal &amp;</type>
      <name>expanded</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>af6d2e4bb7dc0d3ab806335130bd6a7cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1Panel.html</anchorfile>
      <anchor>a960a266d0c5427a2786cc45a4b05ffa1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ProgressDialog</name>
    <filename>classWt_1_1Ext_1_1ProgressDialog.html</filename>
    <base>Wt::Ext::MessageBox</base>
    <member kind="function">
      <type></type>
      <name>ProgressDialog</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a8dcabafaf4235c88cd7eee441448c615</anchor>
      <arglist>(bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressDialog</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>aa56cda8b6be0140160ef7f3f0a333358</anchor>
      <arglist>(const WString &amp;text, const WString &amp;cancelButtonText, int minimum, int maximum, bool i18n=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a74d408dba39fce5fe2561218e5775f23</anchor>
      <arglist>(int minimum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a3e0e589ccd418b358840af358afab74e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>affbc5da9aaeff04433201c1fb0a9c942</anchor>
      <arglist>(int maximum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a8961b393b191d9a52d2e006a80ab3fce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRange</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>aec47127780061076a85cb867c1669c9b</anchor>
      <arglist>(int minimum, int maximum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a5d1e7ade20a3a89b52477ce9846d89c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a2c9b02eb5d639ec5d4c1214ad47cc2d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCancelButtonText</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a9f57021b85bcc1dc7c1e9d820b8999d3</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>a002c659c327ab7bab26aaa424daf4e2c</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>aec354c2676e811e2c354ce22f02ef1c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasCanceled</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>ae728af17b42f24fef38014d2b6cefc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>canceled</name>
      <anchorfile>classWt_1_1Ext_1_1ProgressDialog.html</anchorfile>
      <anchor>ac13c421f889ac475a025baed7739ea97</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::RadioButton</name>
    <filename>classWt_1_1Ext_1_1RadioButton.html</filename>
    <base>Wt::Ext::AbstractToggleButton</base>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classWt_1_1Ext_1_1RadioButton.html</anchorfile>
      <anchor>a8bab74785dd1cb44aba2964725ad6985</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classWt_1_1Ext_1_1RadioButton.html</anchorfile>
      <anchor>a204b66ea73579a8f7c62d163139a41ae</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Splitter</name>
    <filename>classWt_1_1Ext_1_1Splitter.html</filename>
    <base>Wt::WContainerWidget</base>
    <member kind="function">
      <type></type>
      <name>Splitter</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a535dfe78024536478b2372a3e9680172</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Splitter</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a982eb1ec72d98f3c7a1dd1d50b5806c7</anchor>
      <arglist>(Orientation orientation, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>ab2ac583c831b2b4d96d8c47cd59dc051</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>orientation</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a67e40b48d24dc405ec9873700b8e73ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleWidth</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>ad253324efbe507459f1b9753e299e870</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>handleWidth</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>ad15e9a76781f6b9b0f6842d79473310b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SplitterHandle *</type>
      <name>handle</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a9a1963027cc762d7a6565311ddb74ed1</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addWidget</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a3f776ab5a6c84ebfa1d4896b475fec7a</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertWidget</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a4495c1d701edd2181dbc1bf071442363</anchor>
      <arglist>(int index, WWidget *widget)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertBefore</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>ad156963c4ad3d725e0d8b4bd2969b2f7</anchor>
      <arglist>(WWidget *widget, WWidget *before)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WWidget * &gt; &amp;</type>
      <name>children</name>
      <anchorfile>classWt_1_1Ext_1_1Splitter.html</anchorfile>
      <anchor>a88f67b1fa84e213c5e527beff8ed6225</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::SplitterHandle</name>
    <filename>classWt_1_1Ext_1_1SplitterHandle.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type>Splitter *</type>
      <name>splitter</name>
      <anchorfile>classWt_1_1Ext_1_1SplitterHandle.html</anchorfile>
      <anchor>ac41d0b1d8d008081ff044e1e25cdb497</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TableView</name>
    <filename>classWt_1_1Ext_1_1TableView.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="function">
      <type></type>
      <name>TableView</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>af982555ad58c7e846dbe829f10a5e09b</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ae749720b6992ecf62a900bbc45a5607d</anchor>
      <arglist>(WAbstractItemModel *model)</arglist>
    </member>
    <member kind="function">
      <type>WAbstractItemModel *</type>
      <name>model</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>aa28bbad6fef68f903fed1aa01303c3ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeColumnsToContents</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a300cede33cdf30af4f7543de794e72f2</anchor>
      <arglist>(bool onResize=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoExpandColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a88f1de406a741b47533311d249a168dc</anchor>
      <arglist>(int column, int minWidth=50, int maxWidth=1000)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>autoExpandColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a4616220e3e1153b6825e1a7d5cd8b374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataLocation</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a11f1507b4db23da74cf54741a4b40b00</anchor>
      <arglist>(DataLocation dataLocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnsMovable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ad8527a57c1004097937befe83633d998</anchor>
      <arglist>(bool movable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>columnsMovable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>aab8ed89a0c658fffad2f3e4cb575450d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlternatingRowColors</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>aeca778394c0c4165cb890624e7f26f68</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>alternatingRowColors</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a36e7290ea7fb21f7785ce4825e4c6222</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighlightMouseOver</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a82aa7b9fd7931c064a85624167777dde</anchor>
      <arglist>(bool highlight)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>highlightMouseOver</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>abbf14ebf04eba309570653f22a6ff22e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ae6f70012b68f37b8acaa16042f805178</anchor>
      <arglist>(int column, bool hide)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>aee2e7e8094023cd8c001b01cf520d7d2</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a1c9f10b2affca162eca145d624d0f49e</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a6fba01c5bc5bf18b2d28a5ea394292b7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidth</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a0618d71520e5c0c5da46beb30100e634</anchor>
      <arglist>(int column, int pixels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnWidth</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ae3892620e188e2b95cec6af949fa3a07</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnAlignment</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ac4dfbc43791653d6aa4fa1e7517d7523</anchor>
      <arglist>(int column, AlignmentFlag alignment)</arglist>
    </member>
    <member kind="function">
      <type>AlignmentFlag</type>
      <name>columnAlignment</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a44ad9387f03c949018642effbc444146</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSortable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>abb2e0f5c6576335c86141183a10029ec</anchor>
      <arglist>(int column, bool sortable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnSortable</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a20d295f97b290e9afb4568e026e4c965</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableColumnHiding</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>acc3f7c2dbae0a063eed5fad7892c77a2</anchor>
      <arglist>(int column, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColumnHidingEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a5b6670edddd105298c67d37167d330fd</anchor>
      <arglist>(int column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditor</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a8fce08c9e2b06463377342e03f2970d2</anchor>
      <arglist>(int column, FormField *editor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRenderer</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>acd1c2e98bd5420e398053ab6b6d4e7f0</anchor>
      <arglist>(int column, const std::string &amp;rendererJS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageSize</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a9b8be64acea3d9df598fd418d0b0e55a</anchor>
      <arglist>(int pageSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pageSize</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a71bcd2818831c21a68202fe4e53552ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolBar *</type>
      <name>createPagingToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a0e09b1cd5b493f577f5a89c4b4916c44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a925ffae0caed4dff0e0bb9da0440e20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentCell</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a51279c7d091a0060bde4f26845202a33</anchor>
      <arglist>(int row, int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentRow</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>acedafc837958034d15616eb14992b374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentColumn</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ae19b1700dbf51bf26f06a14865b2486a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>selectedRows</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a0fb09470c5ee23ee95e07fdfda027590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelection</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a6988a1b768e8f0ec59b1a9ea06c6afd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>selectionMode</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a630019b3fcfdfdb109cb9c89168b554c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionMode</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>afd0f8697b8f4e3e0a63d6a3bb236e4da</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionBehavior</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a2cccbab98d2639aea94a041bd144d3aa</anchor>
      <arglist>(SelectionBehavior behavior)</arglist>
    </member>
    <member kind="function">
      <type>SelectionBehavior</type>
      <name>selectionBehavior</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a4eece626861dd19a6b4ec903a46f5062</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, int &gt; &amp;</type>
      <name>cellClicked</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>abc2bed9a030c38f6545c904dd14872eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int, int, int, int &gt; &amp;</type>
      <name>currentCellChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a95fc2f78d5f4d8f2befc3af41e777c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal &amp;</type>
      <name>itemSelectionChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>ae35765d2483d419d5cb2df06247d44de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>dateRenderer</name>
      <anchorfile>classWt_1_1Ext_1_1TableView.html</anchorfile>
      <anchor>a4be5b4bb37a248e695a0b6398abb7e53</anchor>
      <arglist>(const WString &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TabWidget</name>
    <filename>classWt_1_1Ext_1_1TabWidget.html</filename>
    <base>Wt::Ext::Panel</base>
    <member kind="function">
      <type></type>
      <name>TabWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a49313cc53c928d22a4c381c0f584a092</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a11a3c125032c6cbd70b2c5223a06ffd5</anchor>
      <arglist>(WWidget *child, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a84f5a17b5f099d3931520be868a7e865</anchor>
      <arglist>(Panel *panel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a234bc743a67ec2e6bd0a3b453b57fdfd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a57d00db0c37712a966bfa77515a3ad5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Panel *</type>
      <name>panel</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a203b27ce2263bd023e7a3653ebcf9ce4</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>widget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a491749c6c4e908dd1a48cce13e06a660</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>afbbb750cb8af68db75c40ceb19420bef</anchor>
      <arglist>(WWidget *widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>abcb66b827643e63614a611dce1788f23</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a136b2410445066a014daad3dfd38adf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a9bf1385e1ce3e1cfc623ce4ad01d586d</anchor>
      <arglist>(WWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>WWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a3568aafde3a35c7e70ff0dc720cf00c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a066ce5aa0bf77b8d2d7a7a923739c447</anchor>
      <arglist>(int index, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>ab5bbadc1deac716888489e1306dad5e5</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a07506a9ca766e111c24dcd5f341a6407</anchor>
      <arglist>(int index, bool hidden)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabHidden</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a2f76632ba42e876878e066ee88098eda</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a72fa2a9c84fd5fbab716b66250a24612</anchor>
      <arglist>(int index, const WString &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>tabText</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a912419147b58c95782ab308c162827a2</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>af68ca221117e897ca1e021b32315ce6f</anchor>
      <arglist>(int index, const WString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>const WString</type>
      <name>tabToolTip</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>aecb111036cf8ee9c6aa2d2870a6d6743</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refresh</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a030f39b4e70def47d3379bdd505aa5e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal&lt; int &gt; &amp;</type>
      <name>currentChanged</name>
      <anchorfile>classWt_1_1Ext_1_1TabWidget.html</anchorfile>
      <anchor>a7d911045734277276dfe85d0eb91339e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::TextEdit</name>
    <filename>classWt_1_1Ext_1_1TextEdit.html</filename>
    <base>Wt::Ext::FormField</base>
    <member kind="function">
      <type></type>
      <name>TextEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>adf9ef68f84862d0fd808579ac6a906c0</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>aefcf4176730025e4f9e32422f168b516</anchor>
      <arglist>(const WString &amp;text, WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>ae9dfae7a11e100a9ee568bcba8c005ee</anchor>
      <arglist>(const WString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const WString &amp;</type>
      <name>text</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>ac36dc63a4e978e2b57ba62b76053bb52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkDefault</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a5343edc5d04bc51ab904ee202570a185</anchor>
      <arglist>(const WString &amp;text, const WString &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableAlignments</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a19870edbfe95e90c0817790813f1dcc3</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableColors</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a0aabef1ee733ba8a5d02e40b09af47f7</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableFont</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a30305f468671ffc230c38b40f46b02cb</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableFormat</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a4102bee7b0c4793f0d6e4dfe32a15432</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableLinks</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a9f10568be040eb2f20126f1e348dc964</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableLists</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>a5fe4e9f80d420a98bff6b36557f1b1b0</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableSourceEdit</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>ae222f0186821a315f9f9803114577c9a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>ad558bceb9ebca8c1ef8c937ce92786e9</anchor>
      <arglist>(const WLength &amp;width, const WLength &amp;height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WValidator::State</type>
      <name>validate</name>
      <anchorfile>classWt_1_1Ext_1_1TextEdit.html</anchorfile>
      <anchor>ae8e02fd395eb356981781a46e3ddac67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ToolBar</name>
    <filename>classWt_1_1Ext_1_1ToolBar.html</filename>
    <base>Wt::Ext::Widget</base>
    <member kind="function">
      <type></type>
      <name>ToolBar</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a2f92bf512fd660fecdb404ac7b6ff860</anchor>
      <arglist>(WContainerWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>aa0384abdeff4e404676bfbd872599d48</anchor>
      <arglist>(const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>adc62d49915efdcce46836052d1c4ceb6</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>ab0b26e4417df169385f1ec0ee9484bc8</anchor>
      <arglist>(const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a582fa415aca609419df7a9db342299de</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, T *target, void(V::*method)())</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a03381960ed0efbc33e8a948b624b5edb</anchor>
      <arglist>(const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>addButton</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a53403001a2f4a283e75290589631205e</anchor>
      <arglist>(const std::string &amp;iconPath, const WString &amp;text, Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a2574961d85b1308658444369c395b4f2</anchor>
      <arglist>(Button *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>aa7c3e74b0940f99d24a55b17c165a71f</anchor>
      <arglist>(WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a931b9b3e5d4cbbdee5394a841752c849</anchor>
      <arglist>(int index, Button *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>accdb33e659665f38fe1c38a8f51da78a</anchor>
      <arglist>(int index, WWidget *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeparator</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a1b7ed20a6d1f445df529df64aa0e0e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classWt_1_1Ext_1_1ToolBar.html</anchorfile>
      <anchor>a03e144feecf56c16084fd88c230ea8d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::ToolTipConfig</name>
    <filename>classWt_1_1Ext_1_1ToolTipConfig.html</filename>
    <base>Wt::WObject</base>
    <member kind="function">
      <type></type>
      <name>ToolTipConfig</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a60a4ade15a8da2d01661594cbb225fff</anchor>
      <arglist>(WObject *parent=0)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoDismiss</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a9444db3004fa2947e1b603d78c66c116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoHide</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>ab994b2f02febf0d04c562d44162aa6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dismissDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a8372920aabcefb2733e00ecab5c75ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hideDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a46688d3b3188aba95d3eb5ff1cd0bd32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>showDelay</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a13105c4b727e4d72dec31a5009e0b53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>animate</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a344f9b39975b03df7cbcbc1b652e2d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hideOnClick</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a0574169d747b7f6f19691a3e287fece4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxWidth</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>ab1e8b83b5355ff790de358c47dc896b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minWidth</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a66a3dc5922a0ead7c0a8740e7d4ffd95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>trackMouse</name>
      <anchorfile>classWt_1_1Ext_1_1ToolTipConfig.html</anchorfile>
      <anchor>a2ff0b5a2797dd3d2598dd582ebc75d51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Ext::Widget</name>
    <filename>classWt_1_1Ext_1_1Widget.html</filename>
    <base>Wt::WWebWidget</base>
    <member kind="function">
      <type></type>
      <name>~Widget</name>
      <anchorfile>classWt_1_1Ext_1_1Widget.html</anchorfile>
      <anchor>a6156640ace2e219ed459461a755a7860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHidden</name>
      <anchorfile>classWt_1_1Ext_1_1Widget.html</anchorfile>
      <anchor>a3102617fe37dd91e053317f268aa2f63</anchor>
      <arglist>(bool how)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Wt::Http</name>
    <filename>namespaceWt_1_1Http.html</filename>
    <class kind="class">Wt::Http::Client</class>
    <class kind="class">Wt::Http::UploadedFile</class>
    <class kind="class">Wt::Http::Request</class>
    <class kind="class">Wt::Http::Response</class>
    <class kind="class">Wt::Http::ResponseContinuation</class>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>ParameterValues</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>ae1470e15e15eab123a19e4204f624598</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, ParameterValues &gt;</type>
      <name>ParameterMap</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>a3420f95c8bfecf3d46e65920c765345a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::multimap&lt; std::string, UploadedFile &gt;</type>
      <name>UploadedFileMap</name>
      <anchorfile>namespaceWt_1_1Http.html</anchorfile>
      <anchor>a90602329029048d738daae9ba63e059a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Client</name>
    <filename>classWt_1_1Http_1_1Client.html</filename>
    <member kind="enumeration">
      <name>ClientOption</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a66729a402596f1f7bb7ca0581e4d50ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SupportsAjax</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a66729a402596f1f7bb7ca0581e4d50efafe42fa8300bb8004fadf080aec00a9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startWtSession</name>
      <anchorfile>classWt_1_1Http_1_1Client.html</anchorfile>
      <anchor>a579207474fa28b9f84c040c524f565d0</anchor>
      <arglist>(const std::string &amp;host, const std::string &amp;port, const std::string &amp;path, const std::string &amp;query=std::string(), WFlags&lt; ClientOption &gt; flags=SupportsAjax)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::UploadedFile</name>
    <filename>classWt_1_1Http_1_1UploadedFile.html</filename>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>spoolFileName</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a80453ce8dc7a06e12b5c1f622c027320</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>clientFileName</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a6548081a259f55d572bf049d576bb2a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>a165bc88288a19a1134ecdf3922f86f25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stealSpoolFile</name>
      <anchorfile>classWt_1_1Http_1_1UploadedFile.html</anchorfile>
      <anchor>ab8cdd14724b871e71d3ec7d9530f9e29</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request</name>
    <filename>classWt_1_1Http_1_1Request.html</filename>
    <class kind="class">Wt::Http::Request::ByteRange</class>
    <class kind="class">Wt::Http::Request::ByteRangeSpecifier</class>
    <member kind="function">
      <type>const ParameterMap &amp;</type>
      <name>getParameterMap</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a25edf133c23a26cc166ab912e0b60b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const UploadedFileMap &amp;</type>
      <name>uploadedFiles</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a3b4aaa1bf2debdf29306e7bb63d192fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ParameterValues &amp;</type>
      <name>getParameterValues</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a2820b2165bdcc337e05129d2c884bbdb</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getParameter</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a9d2e071561f59e6be4a11ab22732b5a8</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const UploadedFile *</type>
      <name>getUploadedFile</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>af8f7b873e8d953cd5a1372fa3bddf52d</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tooLarge</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a54eff8bb1b30d3b5283753f0e6a21c64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>continuation</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a2d4f88961a222be846460a8238823ae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serverName</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a3ba38b20a0b3f7b985f7d3a3178f080d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serverPort</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a050ad797f0c9586113e654a9c8d27eb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a5e3962130a69fd22828f2bed3bc341a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>pathInfo</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a38bbd6c56cd07bdf3abe254d17d83bff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>queryString</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>adef477ec6cf7b7f3e82254ab3338f3be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>urlScheme</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a495633b89f99cd02cda65d3aad16eacc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>in</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a768a65ceb3c0bf013b57c3de04b19041</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>contentType</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a588848625d3a7a968fec1a10cb435af3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>contentLength</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>aa32f4e54c287098f5829fc49e6e71e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>userAgent</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a0201edb776325c8c30b86695561b5681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>clientAddress</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>aa9b24a6312b5e8598b54f1d98bf050eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>headerValue</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ade2596aa6802a63e21460094ea30a4d9</anchor>
      <arglist>(const std::string &amp;field) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ae76664f93462d9311ee671c93607e5ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ByteRangeSpecifier</type>
      <name>getRanges</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>a0683f0a3d87ae10d7c947391fe60629a</anchor>
      <arglist>(::int64_t filesize) const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Wt::WResource</name>
      <anchorfile>classWt_1_1Http_1_1Request.html</anchorfile>
      <anchor>ac331572ec8a235b3ebf1030c5614cdec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request::ByteRange</name>
    <filename>classWt_1_1Http_1_1Request_1_1ByteRange.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteRange</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>aceb2856a1d7b4a188979a540d30da5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ByteRange</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>a2f1619a8326d673406495cc5593c8c85</anchor>
      <arglist>(::uint64_t first,::uint64_t last)</arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>firstByte</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>af6ce446fc54623145b41e0987c547c17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::uint64_t</type>
      <name>lastByte</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRange.html</anchorfile>
      <anchor>a1946993f79e409352b1186ecb4bc8e7d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Request::ByteRangeSpecifier</name>
    <filename>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</filename>
    <member kind="function">
      <type></type>
      <name>ByteRangeSpecifier</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>ac4fc38d1759336f50099de17d4c22af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSatisfiable</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>a8ef2be6043819c6f8fb427df74a7ff82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSatisfiable</name>
      <anchorfile>classWt_1_1Http_1_1Request_1_1ByteRangeSpecifier.html</anchorfile>
      <anchor>afc7043d292dbf9fa16dcde9ff30b813a</anchor>
      <arglist>(bool satisfiable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::Response</name>
    <filename>classWt_1_1Http_1_1Response.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a7c14ba3ab34ff14461df3a4369118443</anchor>
      <arglist>(int status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentLength</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>aea93d6918a90e8c9b0010499771a1c87</anchor>
      <arglist>(::uint64_t length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeType</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a20dd49d512ffc0cf407f9dd39db30341</anchor>
      <arglist>(const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addHeader</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a5827dd04629251d0c7ff3cc9062afb7d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>createContinuation</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>a5cb0800718188328fec17d3b84c85aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ResponseContinuation *</type>
      <name>continuation</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>ad29d222d15779421a840f8974f07b304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>ae74ee0009e9ec4aa3d3f35e680a745de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Wt::WResource</name>
      <anchorfile>classWt_1_1Http_1_1Response.html</anchorfile>
      <anchor>ac331572ec8a235b3ebf1030c5614cdec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Http::ResponseContinuation</name>
    <filename>classWt_1_1Http_1_1ResponseContinuation.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a72fa6895f798e1270aa6e6a44222a9eb</anchor>
      <arglist>(const boost::any &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>boost::any</type>
      <name>data</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a92a3eb825c3df18ba5a6788315b8757b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WResource *</type>
      <name>resource</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>a0d8a5bebd58915b47c97bc6afc8050e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Wt::WResource</name>
      <anchorfile>classWt_1_1Http_1_1ResponseContinuation.html</anchorfile>
      <anchor>ac331572ec8a235b3ebf1030c5614cdec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Wt::Test::WTestEnvironment</name>
    <filename>classWt_1_1Test_1_1WTestEnvironment.html</filename>
    <base>Wt::WEnvironment</base>
    <member kind="function">
      <type></type>
      <name>WTestEnvironment</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>af194aa75c8027150907de581a692da7e</anchor>
      <arglist>(const std::string &amp;applicationPath=&quot;/&quot;, const std::string &amp;configurationFile=&quot;&quot;, EntryPointType type=Application)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WTestEnvironment</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a0731bffca88279f3ea581b5d73c8afe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterMap</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a07ad68d340246eddc979951f96c7fd76</anchor>
      <arglist>(const Http::ParameterMap &amp;parameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCookies</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aa80a019dc055b5ae98c35956ba524c60</anchor>
      <arglist>(const CookieMap &amp;cookies)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderValue</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aef3602fd6c1b8e15adcbc40bc1b7c6c4</anchor>
      <arglist>(const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupportsCookies</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a48f865810ad560cc9df88b7adf17b591</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAjax</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>aaaf6e252105cbd4b1bfaad14f0c47fa8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDpiScale</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>ab2fd0942e9c5722948fdc98db92fe83a</anchor>
      <arglist>(double dpiScale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocale</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a58f53c406a0a697d2c3d6d5ffe4f08cf</anchor>
      <arglist>(const std::string &amp;locale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHostName</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a5deabdbe1d1d0546882047a5820e070c</anchor>
      <arglist>(const std::string &amp;hostName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrlScheme</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>adf16dd87cb333f3ef8e690fcd1a924c6</anchor>
      <arglist>(const std::string &amp;scheme)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserAgent</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>acfdde9c75469004a8308393b86b5ddce</anchor>
      <arglist>(const std::string &amp;userAgent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferer</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a6109afee2818835a96de8d6c9e5e48c2</anchor>
      <arglist>(const std::string &amp;referer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccept</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a9aeb155e7b624d0a130fb2f609b4945f</anchor>
      <arglist>(const std::string &amp;accept)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerSignature</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a2addf62069b391b6a94c9acd07c314aa</anchor>
      <arglist>(const std::string &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerSoftware</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a41c449aed002dcb98d1ac5535966407c</anchor>
      <arglist>(const std::string &amp;software)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerAdmin</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3b4866badc5e66113d846699fa3fa1e3</anchor>
      <arglist>(const std::string &amp;serverAdmin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientAddress</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a0745f61072135090923bb492e0d19774</anchor>
      <arglist>(const std::string &amp;clientAddress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInternalPath</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a3fe9fffe6069c96d959ef499087c3fc8</anchor>
      <arglist>(const std::string &amp;internalPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentType</name>
      <anchorfile>classWt_1_1Test_1_1WTestEnvironment.html</anchorfile>
      <anchor>a42d0159129b9174ff1e03376408f7f47</anchor>
      <arglist>(ContentType contentType)</arglist>
    </member>
  </compound>
</tagfile>
